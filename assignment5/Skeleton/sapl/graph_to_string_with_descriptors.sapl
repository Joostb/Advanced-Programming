|| ?module? graph_to_string_with_descriptors


graph_to_string_with_descriptors.eval_all_nodes !g_0 = error "no AnyCodeExpr"
graph_to_string_with_descriptors.copy_to_string !g_0 = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_array_D::I !a_0 = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_from_string_64::I !s_0 !i_1::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_from_string_32::I !s_0 !i_1::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.cast_string_to_a !s_0 = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_array_size_64::I !a_0 !offset_1::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_array_size_32::I !a_0 !offset_1::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_array_elem_D_64::I !a_0 !offset_1::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_array_elem_D_32::I !a_0 !offset_1::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_node_arity::I !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is_Bool_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is_Char_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is_Int_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is_Real_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is__Array__D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_record_a_arity::I !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is__String__D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_n_non_pointers_and_array_elem_desc !d_0::I !v_1 !offset_2::I !array_desc_3::I = let arity_1_0::I = graph_to_string_with_descriptors.get_D_node_arity d_0 in case (<{StdInt.==_16}> arity_1_0 0) (True -> case (case (graph_to_string_with_descriptors.is_Int_D d_0) (True -> True) (False -> case (graph_to_string_with_descriptors.is_Char_D d_0) (True -> True) (False -> graph_to_string_with_descriptors.is_Bool_D d_0) ) ) (True -> <{_Tuple2!3}> 1 0) (False -> case (graph_to_string_with_descriptors.is_Real_D d_0) (True -> <{_Tuple2!3}> 1 0) (False -> case (graph_to_string_with_descriptors.is__Array__D d_0) (True -> let ed_6_0::I = graph_to_string_with_descriptors.get_array_elem_D_64 v_1 offset_2 in case (<{StdInt.==_16}> ed_6_0 0) (True -> <{_Tuple2!3}> 2 ed_6_0) (False -> let ed_8_0::I = <{StdInt.+_6}> ed_6_0 array_desc_3 in case (graph_to_string_with_descriptors.is_Int_D ed_8_0) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> 2 (graph_to_string_with_descriptors.get_array_size_64 v_1 offset_2)) ed_8_0) (False -> case (graph_to_string_with_descriptors.is_Real_D ed_8_0) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> 2 (graph_to_string_with_descriptors.get_array_size_64 v_1 offset_2)) ed_8_0) (False -> case (graph_to_string_with_descriptors.is_Bool_D ed_8_0) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> 2 (<{StdInt.>>}> (<{StdInt.+_6}> (graph_to_string_with_descriptors.get_array_size_64 v_1 offset_2) 7) 3)) ed_8_0) (False -> <{_Tuple2!3}> (<{StdInt.+_6}> 2 (<{StdInt.*_9}> (graph_to_string_with_descriptors.get_array_size_64 v_1 offset_2) (<{StdInt.-_7}> (<{StdInt.-_7}> (graph_to_string_with_descriptors.get_D_node_arity ed_8_0) 256) (graph_to_string_with_descriptors.get_D_record_a_arity ed_8_0)))) ed_8_0) ) ) ) ) (False -> case (graph_to_string_with_descriptors.is__String__D d_0) (True -> <{_Tuple2!3}> (<{StdInt.+_6}> 1 (<{StdInt.>>}> (<{StdInt.+_6}> (graph_to_string_with_descriptors.get_array_size_64 v_1 offset_2) 7) 3)) 0) (False -> <{_Tuple2!3}> 0 0) ) ) ) ) (False -> case (<{StdInt.<_17}> arity_1_0 256) (True -> <{_Tuple2!3}> 0 0) (False -> <{_Tuple2!3}> (<{StdInt.-_7}> (<{StdInt.-_7}> arity_1_0 256) (graph_to_string_with_descriptors.get_D_record_a_arity d_0)) 0) ) 
graph_to_string_with_descriptors.search_desc_or_mod_n_in_tree::I !desc_or_mod_0::I !_x_1 = case _x_1 (graph_to_string_with_descriptors.DescOrModTreeNode tree_desc_or_mod_1_0 tree_desc_or_mod_n_1_1 left_desc_tree_1_2 right_desc_tree_1_3 -> case (<{StdInt.==_16}> desc_or_mod_0 tree_desc_or_mod_1_0) (True -> tree_desc_or_mod_n_1_1) (False -> case (<{StdInt.<_17}> desc_or_mod_0 tree_desc_or_mod_1_0) (True -> graph_to_string_with_descriptors.search_desc_or_mod_n_in_tree desc_or_mod_0 left_desc_tree_1_2) (False -> graph_to_string_with_descriptors.search_desc_or_mod_n_in_tree desc_or_mod_0 right_desc_tree_1_3) ) ) (graph_to_string_with_descriptors.EmptyDescOrModTree -> -1) 
graph_to_string_with_descriptors.store_int_in_string !s_0 !i_1::I !n_2::I = _SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 s_0 i_1 (StdChar.toChar_21 n_2)) (<{StdInt.+_6}> i_1 1) (StdChar.toChar_21 (<{StdInt.>>}> n_2 8))) (<{StdInt.+_6}> i_1 2) (StdChar.toChar_21 (<{StdInt.>>}> n_2 16))) (<{StdInt.+_6}> i_1 3) (StdChar.toChar_21 (<{StdInt.>>}> n_2 24))) (<{StdInt.+_6}> i_1 4) (StdChar.toChar_21 (<{StdInt.>>}> n_2 32))) (<{StdInt.+_6}> i_1 5) (StdChar.toChar_21 (<{StdInt.>>}> n_2 40))) (<{StdInt.+_6}> i_1 6) (StdChar.toChar_21 (<{StdInt.>>}> n_2 48))) (<{StdInt.+_6}> i_1 7) (StdChar.toChar_21 (<{StdInt.>>}> n_2 56))
graph_to_string_with_descriptors.add_desc_or_mod_to_tree !desc_0::I !desc_n_1::I !_x_2 = case _x_2 (graph_to_string_with_descriptors.DescOrModTreeNode descriptor_1_0 descriptor_n_1_1 left_desc_tree_1_2 right_desc_tree_1_3 -> case (<{StdInt.==_16}> desc_0 descriptor_1_0) (True -> StdMisc.abort "add_desc_or_mod_to_tree: desc already in tree") (False -> case (<{StdInt.<_17}> desc_0 descriptor_1_0) (True -> graph_to_string_with_descriptors.DescOrModTreeNode descriptor_1_0 descriptor_n_1_1 (graph_to_string_with_descriptors.add_desc_or_mod_to_tree desc_0 desc_n_1 left_desc_tree_1_2) right_desc_tree_1_3) (False -> graph_to_string_with_descriptors.DescOrModTreeNode descriptor_1_0 descriptor_n_1_1 left_desc_tree_1_2 (graph_to_string_with_descriptors.add_desc_or_mod_to_tree desc_0 desc_n_1 right_desc_tree_1_3)) ) ) (graph_to_string_with_descriptors.EmptyDescOrModTree -> graph_to_string_with_descriptors.DescOrModTreeNode desc_0 desc_n_1 graph_to_string_with_descriptors.EmptyDescOrModTree graph_to_string_with_descriptors.EmptyDescOrModTree) 
graph_to_string_with_descriptors.store_desc_n_and_add_desc_52 !desc_0::I !i_1::I !s_2 !n_descs_3::I !desc_tree_4 = let desc_n_1_0::I = graph_to_string_with_descriptors.search_desc_or_mod_n_in_tree desc_0 desc_tree_4 in case (StdBool.not (<{StdInt.<_17}> desc_n_1_0 0)) (True -> <{_Tuple3!7}> (graph_to_string_with_descriptors.store_int_in_string s_2 i_1 (<{StdInt.+_6}> desc_n_1_0 1)) n_descs_3 desc_tree_4) (False -> <{_Tuple3!7}> (graph_to_string_with_descriptors.store_int_in_string s_2 i_1 (<{StdInt.+_6}> n_descs_3 1)) (<{StdInt.+_6}> n_descs_3 1) (graph_to_string_with_descriptors.add_desc_or_mod_to_tree desc_0 n_descs_3 desc_tree_4)) 
graph_to_string_with_descriptors.replace_descs_by_desc_numbers_and_build_desc_tree !i_0::I !s_1 !n_descs_2::I !array_desc_3::I !desc_tree_4 = case (StdBool.not (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_1))) (True -> <{_Tuple3!7}> s_1 n_descs_2 desc_tree_4) (False -> let !desc_2_0::I = graph_to_string_with_descriptors.get_D_from_string_64 s_1 i_0, !desc_2_1::I = <{StdInt.+_6}> desc_2_0 array_desc_3 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand desc_2_1 1) 0)) (True -> graph_to_string_with_descriptors.replace_descs_by_desc_numbers_and_build_desc_tree (<{StdInt.+_6}> i_0 8) s_1 n_descs_2 array_desc_3 desc_tree_4) (False -> case (<{StdInt.==_16}> (StdInt.bitand desc_2_1 2) 0) (True -> StdMisc.abort (<{StdString.+++_11}> "unevaluated node in replace_descs_by_desc_numbers_and_build_desc_tree " (StdString.toString_5 desc_2_1))) (False -> let !a_5_0 = graph_to_string_with_descriptors.cast_string_to_a s_1, _x_5_1::I = graph_to_string_with_descriptors.get_n_non_pointers_and_array_elem_desc desc_2_1 a_5_0 (<{StdInt.+_6}> i_0 16) array_desc_3, array_elem_desc_5_2 = select _x_5_1::_Tuple2 1 in case (<{StdInt.==_16}> array_elem_desc_5_2 0) (True -> let _x_7_0 = graph_to_string_with_descriptors.store_desc_n_and_add_desc_52 desc_2_1 i_0 s_1 n_descs_2 desc_tree_4 in graph_to_string_with_descriptors.replace_descs_by_desc_numbers_and_build_desc_tree (<{StdInt.+_6}> (<{StdInt.+_6}> i_0 8) (<{StdInt.<<}> (select _x_5_1::_Tuple2 0) 3)) (select _x_7_0::_Tuple3 0) (select _x_7_0::_Tuple3 1) array_desc_3 (select _x_7_0::_Tuple3 2)) (False -> let _x_7_0 = graph_to_string_with_descriptors.store_desc_n_and_add_desc_52 desc_2_1 i_0 s_1 n_descs_2 desc_tree_4, _x_7_1 = graph_to_string_with_descriptors.store_desc_n_and_add_desc_52 array_elem_desc_5_2 (<{StdInt.+_6}> i_0 16) (select _x_7_0::_Tuple3 0) (select _x_7_0::_Tuple3 1) (select _x_7_0::_Tuple3 2) in graph_to_string_with_descriptors.replace_descs_by_desc_numbers_and_build_desc_tree (<{StdInt.+_6}> (<{StdInt.+_6}> i_0 8) (<{StdInt.<<}> (select _x_5_1::_Tuple2 0) 3)) (select _x_7_1::_Tuple3 0) (select _x_7_1::_Tuple3 1) array_desc_3 (select _x_7_1::_Tuple3 2)) ) ) ) 
graph_to_string_with_descriptors.fill_desc_array_53 !_x_0 !a_1 = case _x_0 (graph_to_string_with_descriptors.DescOrModTreeNode descriptor_1_0 descriptor_n_1_1 left_desc_tree_1_2 right_desc_tree_1_3 -> let _x_2_0 = graph_to_string_with_descriptors.uselect_75 a_1 descriptor_n_1_1 in graph_to_string_with_descriptors.fill_desc_array_53 right_desc_tree_1_3 (graph_to_string_with_descriptors.fill_desc_array_53 left_desc_tree_1_2 (graph_to_string_with_descriptors.update_74 (select _x_2_0::_Tuple2 1) descriptor_n_1_1 (update (select _x_2_0::_Tuple2 0)::graph_to_string_with_descriptors._Desc_ModuleN [0:descriptor_1_0])))) (graph_to_string_with_descriptors.EmptyDescOrModTree -> a_1) 
graph_to_string_with_descriptors.make_desc_array !n_descs_0::I !desc_tree_1 = graph_to_string_with_descriptors.fill_desc_array_53 desc_tree_1 (graph_to_string_with_descriptors.createArray_70 n_descs_0 (graph_to_string_with_descriptors._Desc_ModuleN 0 0))
graph_to_string_with_descriptors.get_D_record_module_64::I !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_record_module_32::I !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_cons_module_64::I !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_D_cons_module_32::I !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is__Nil_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is__Cons_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.is__Tuple_D::B !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_module::I !d_0::I = let arity_1_0::I = graph_to_string_with_descriptors.get_D_node_arity d_0 in case (<{StdInt.==_16}> arity_1_0 0) (True -> case (case (graph_to_string_with_descriptors.is_Int_D d_0) (True -> True) (False -> case (graph_to_string_with_descriptors.is_Char_D d_0) (True -> True) (False -> case (graph_to_string_with_descriptors.is_Real_D d_0) (True -> True) (False -> case (graph_to_string_with_descriptors.is_Bool_D d_0) (True -> True) (False -> case (graph_to_string_with_descriptors.is__Array__D d_0) (True -> True) (False -> graph_to_string_with_descriptors.is__String__D d_0) ) ) ) ) ) (True -> 0) (False -> case (graph_to_string_with_descriptors.is__Nil_D d_0) (True -> 0) (False -> graph_to_string_with_descriptors.get_D_cons_module_64 d_0) ) ) (False -> case (<{StdInt.<_17}> arity_1_0 256) (True -> case (graph_to_string_with_descriptors.is__Cons_D d_0) (True -> 0) (False -> case (graph_to_string_with_descriptors.is__Tuple_D (<{StdInt.-_7}> d_0 (<{StdInt.*_9}> arity_1_0 16))) (True -> 0) (False -> graph_to_string_with_descriptors.get_D_cons_module_64 d_0) ) ) (False -> graph_to_string_with_descriptors.get_D_record_module_64 d_0) ) 
graph_to_string_with_descriptors.add_modules_55 !_vArray_0 !i_1::I a_2 n_mods_3::I mod_tree_4 = case (<{StdInt.==_16}> i_1 (select _vArray_0::<{_SystemArray.Array;}> 4 a_2)) (True -> _Tuple3 a_2 n_mods_3 mod_tree_4) (False -> let _x_2_0::I = select (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 i_1)::graph_to_string_with_descriptors._Desc_ModuleN 0, desc_2_1::I = select _x_2_0::_Tuple2 0, mod_2_2 = graph_to_string_with_descriptors.get_module desc_2_1 in case (<{StdInt.==_16}> mod_2_2 0) (True -> graph_to_string_with_descriptors.add_modules_55 _vArray_0 (<{StdInt.+_6}> i_1 1) (select _x_2_0::_Tuple2 1) n_mods_3 mod_tree_4) (False -> let mod_n_4_0::I = graph_to_string_with_descriptors.search_desc_or_mod_n_in_tree mod_2_2 mod_tree_4 in case (StdBool.not (<{StdInt.<_17}> mod_n_4_0 0)) (True -> let _x_6_0 = select _vArray_0::<{_SystemArray.Array;}> 6 (select _x_2_0::_Tuple2 1) i_1 in graph_to_string_with_descriptors.add_modules_55 _vArray_0 (<{StdInt.+_6}> i_1 1) (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_6_0::_Tuple2 1) i_1 (update (select _x_6_0::_Tuple2 0)::graph_to_string_with_descriptors._Desc_ModuleN [1:<{StdInt.+_6}> mod_n_4_0 1])) n_mods_3 mod_tree_4) (False -> let _x_6_0 = select _vArray_0::<{_SystemArray.Array;}> 6 (select _x_2_0::_Tuple2 1) i_1 in graph_to_string_with_descriptors.add_modules_55 _vArray_0 (<{StdInt.+_6}> i_1 1) (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_6_0::_Tuple2 1) i_1 (update (select _x_6_0::_Tuple2 0)::graph_to_string_with_descriptors._Desc_ModuleN [1:<{StdInt.+_6}> n_mods_3 1])) (<{StdInt.+_6}> n_mods_3 1) (graph_to_string_with_descriptors.add_desc_or_mod_to_tree mod_2_2 n_mods_3 mod_tree_4)) ) ) 
graph_to_string_with_descriptors.add_modules_77 !i_0::I !a_1 n_mods_2::I mod_tree_3 = case (<{StdInt.==_16}> i_0 (graph_to_string_with_descriptors.size_73 a_1)) (True -> _Tuple3 a_1 n_mods_2 mod_tree_3) (False -> let _x_2_0::I = select (graph_to_string_with_descriptors.select_72 a_1 i_0)::graph_to_string_with_descriptors._Desc_ModuleN 0, desc_2_1::I = select _x_2_0::_Tuple2 0, mod_2_2 = graph_to_string_with_descriptors.get_module desc_2_1 in case (<{StdInt.==_16}> mod_2_2 0) (True -> graph_to_string_with_descriptors.add_modules_77 (<{StdInt.+_6}> i_0 1) (select _x_2_0::_Tuple2 1) n_mods_2 mod_tree_3) (False -> let mod_n_4_0::I = graph_to_string_with_descriptors.search_desc_or_mod_n_in_tree mod_2_2 mod_tree_3 in case (StdBool.not (<{StdInt.<_17}> mod_n_4_0 0)) (True -> let _x_6_0 = graph_to_string_with_descriptors.uselect_75 (select _x_2_0::_Tuple2 1) i_0 in graph_to_string_with_descriptors.add_modules_77 (<{StdInt.+_6}> i_0 1) (graph_to_string_with_descriptors.update_74 (select _x_6_0::_Tuple2 1) i_0 (update (select _x_6_0::_Tuple2 0)::graph_to_string_with_descriptors._Desc_ModuleN [1:<{StdInt.+_6}> mod_n_4_0 1])) n_mods_2 mod_tree_3) (False -> let _x_6_0 = graph_to_string_with_descriptors.uselect_75 (select _x_2_0::_Tuple2 1) i_0 in graph_to_string_with_descriptors.add_modules_77 (<{StdInt.+_6}> i_0 1) (graph_to_string_with_descriptors.update_74 (select _x_6_0::_Tuple2 1) i_0 (update (select _x_6_0::_Tuple2 0)::graph_to_string_with_descriptors._Desc_ModuleN [1:<{StdInt.+_6}> n_mods_2 1])) (<{StdInt.+_6}> n_mods_2 1) (graph_to_string_with_descriptors.add_desc_or_mod_to_tree mod_2_2 n_mods_2 mod_tree_3)) ) ) 
graph_to_string_with_descriptors.make_module_tree !a_0 = graph_to_string_with_descriptors.add_modules_77 0 a_0 0 graph_to_string_with_descriptors.EmptyDescOrModTree
graph_to_string_with_descriptors.fill_desc_array_54 !_x_0 !a_1 = case _x_0 (graph_to_string_with_descriptors.DescOrModTreeNode descriptor_1_0 descriptor_n_1_1 left_mod_tree_1_2 right_mod_tree_1_3 -> graph_to_string_with_descriptors.fill_desc_array_54 right_mod_tree_1_3 (graph_to_string_with_descriptors.fill_desc_array_54 left_mod_tree_1_2 (_SystemArray.update_13 a_1 descriptor_n_1_1 descriptor_1_0))) (graph_to_string_with_descriptors.EmptyDescOrModTree -> a_1) 
graph_to_string_with_descriptors.make_mod_array !n_mods_0::I !mod_tree_1 = graph_to_string_with_descriptors.fill_desc_array_54 mod_tree_1 (_SystemArray.createArray_9 n_mods_0 0)
graph_to_string_with_descriptors.get_module_name_size_64::I !a_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_module_name_size_32::I !a_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_module_name_char::C !a_0::I !i_1::I = error "no AnyCodeExpr"
<{graph_to_string_with_descriptors.cu;233;32_51}> !_vArray_0 m_1::I c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{graph_to_string_with_descriptors.cu;233;32_51}> _vArray_0 m_1 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (graph_to_string_with_descriptors.get_module_name_char m_1 c_i_3)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
<{graph_to_string_with_descriptors.cu;233;32_78}> m_0::I !c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{graph_to_string_with_descriptors.cu;233;32_78}> m_0 (_SystemArray.update_21 c_a_1 c_i_2 (graph_to_string_with_descriptors.get_module_name_char m_0 c_i_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
graph_to_string_with_descriptors.get_module_name !m_0::I = let g_s_1_0::I = <{StdInt.-_7}> (graph_to_string_with_descriptors.get_module_name_size_64 m_0) 1 in <{graph_to_string_with_descriptors.cu;233;32_78}> m_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s_1_0 StdInt.one_11)) 0 g_s_1_0
<{graph_to_string_with_descriptors.cu;455;45_59}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{graph_to_string_with_descriptors.cu;455;45_59}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (graph_to_string_with_descriptors.get_module_name (select _x_2_1::_Tuple2 0))) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
graph_to_string_with_descriptors.uarray !_vArray_0 !a_1 = a_1
graph_to_string_with_descriptors.get_D_name !d_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.arity_to_char::C !a_0::I = case (<{StdInt.<_17}> a_0 0) (True -> StdMisc.abort "arity_to_charL: incorrect arity") (False -> case (<{StdInt.<_17}> a_0 10) (True -> StdChar.toChar_21 (<{StdInt.+_6}> 48 a_0)) (False -> case (<{StdInt.<_17}> a_0 36) (True -> StdChar.toChar_21 (<{StdInt.+_6}> 55 a_0)) (False -> StdMisc.abort "arity_to_charL: incorrect arity") ) ) 
graph_to_string_with_descriptors.get_D_arity::I !a_0::I = error "no AnyCodeExpr"
graph_to_string_with_descriptors.get_record_type_char::C !a_0::I !i_1::I = error "no AnyCodeExpr"
<{graph_to_string_with_descriptors.cu;222;32_49}> !_vArray_0 d_1::I c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{graph_to_string_with_descriptors.cu;222;32_49}> _vArray_0 d_1 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (graph_to_string_with_descriptors.get_record_type_char d_1 c_i_3)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
graph_to_string_with_descriptors.get_record_type_size_50::I !i_0::I !d_1::I = case (<{StdChar.==_18}> (graph_to_string_with_descriptors.get_record_type_char d_1 i_0) '\0') (True -> i_0) (False -> graph_to_string_with_descriptors.get_record_type_size_50 (<{StdInt.+_6}> i_0 1) d_1) 
<{graph_to_string_with_descriptors.cu;222;32_79}> d_0::I !c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{graph_to_string_with_descriptors.cu;222;32_79}> d_0 (_SystemArray.update_21 c_a_1 c_i_2 (graph_to_string_with_descriptors.get_record_type_char d_0 c_i_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
graph_to_string_with_descriptors.get_record_type !d_0::I = let g_s_1_0::I = <{StdInt.-_7}> (graph_to_string_with_descriptors.get_record_type_size_50 0 d_0) 1 in <{graph_to_string_with_descriptors.cu;222;32_79}> d_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s_1_0 StdInt.one_11)) 0 g_s_1_0
graph_to_string_with_descriptors.info_of_desc_and_mod !_x_0 = case _x_0 (graph_to_string_with_descriptors._Desc_ModuleN desc_1_0 desc_mod_n_1_1 -> let arity_2_0::I = graph_to_string_with_descriptors.get_D_node_arity desc_1_0 in case (<{StdInt.==_16}> arity_2_0 0) (True -> case (graph_to_string_with_descriptors.is_Int_D desc_1_0) (True -> "i") (False -> case (graph_to_string_with_descriptors.is_Char_D desc_1_0) (True -> "c") (False -> case (graph_to_string_with_descriptors.is_Real_D desc_1_0) (True -> "r") (False -> case (graph_to_string_with_descriptors.is_Bool_D desc_1_0) (True -> "b") (False -> case (graph_to_string_with_descriptors.is__Array__D desc_1_0) (True -> "a") (False -> case (graph_to_string_with_descriptors.is__String__D desc_1_0) (True -> "s") (False -> case (graph_to_string_with_descriptors.is__Nil_D desc_1_0) (True -> "n") (False -> <{StdString.+++_11}> (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray._createArray_16 5) 4 (StdChar.toChar_21 (<{StdInt.>>}> desc_mod_n_1_1 8))) 3 (StdChar.toChar_21 desc_mod_n_1_1)) 2 (graph_to_string_with_descriptors.arity_to_char (graph_to_string_with_descriptors.get_D_arity desc_1_0))) 1 (graph_to_string_with_descriptors.arity_to_char arity_2_0)) 0 'C') (<{StdString.+++_11}> (graph_to_string_with_descriptors.get_D_name desc_1_0) "\0")) ) ) ) ) ) ) ) (False -> case (<{StdInt.<_17}> arity_2_0 256) (True -> case (graph_to_string_with_descriptors.is__Cons_D desc_1_0) (True -> ":") (False -> case (graph_to_string_with_descriptors.is__Tuple_D (<{StdInt.-_7}> desc_1_0 (<{StdInt.*_9}> arity_2_0 16))) (True -> _SystemArray.update_21 (_SystemArray.update_21 (_SystemArray._createArray_16 2) 1 (graph_to_string_with_descriptors.arity_to_char arity_2_0)) 0 't') (False -> <{StdString.+++_11}> (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray._createArray_16 5) 4 (StdChar.toChar_21 (<{StdInt.>>}> desc_mod_n_1_1 8))) 3 (StdChar.toChar_21 desc_mod_n_1_1)) 2 (graph_to_string_with_descriptors.arity_to_char (graph_to_string_with_descriptors.get_D_arity desc_1_0))) 1 (graph_to_string_with_descriptors.arity_to_char arity_2_0)) 0 'C') (<{StdString.+++_11}> (graph_to_string_with_descriptors.get_D_name desc_1_0) "\0")) ) ) (False -> <{StdString.+++_11}> (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray._createArray_16 5) 4 (StdChar.toChar_21 (<{StdInt.>>}> desc_mod_n_1_1 8))) 3 (StdChar.toChar_21 desc_mod_n_1_1)) 2 (graph_to_string_with_descriptors.arity_to_char (graph_to_string_with_descriptors.get_D_record_a_arity desc_1_0))) 1 (graph_to_string_with_descriptors.arity_to_char (<{StdInt.-_7}> arity_2_0 256))) 0 'R') (<{StdString.+++_11}> (graph_to_string_with_descriptors.get_record_type desc_1_0) (<{StdString.+++_11}> "\0" (<{StdString.+++_11}> (graph_to_string_with_descriptors.get_D_name desc_1_0) "\0")))) ) ) 
<{graph_to_string_with_descriptors.cu;456;60_60}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{graph_to_string_with_descriptors.cu;456;60_60}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (graph_to_string_with_descriptors.info_of_desc_and_mod (select _x_2_1::_Tuple2 0))) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{graph_to_string_with_descriptors.cu;455;45_80}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_14 g_a_4 c_i_2 in <{graph_to_string_with_descriptors.cu;455;45_80}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (graph_to_string_with_descriptors.get_module_name (select _x_2_1::_Tuple2 0))) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{graph_to_string_with_descriptors.cu;456;60_81}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = graph_to_string_with_descriptors.uselect_75 g_a_4 c_i_2 in <{graph_to_string_with_descriptors.cu;456;60_81}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (graph_to_string_with_descriptors.info_of_desc_and_mod (select _x_2_1::_Tuple2 0))) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{graph_to_string_with_descriptors.cu;455;45_82}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_14 g_a_3 c_i_1 in <{graph_to_string_with_descriptors.cu;455;45_82}> (_SystemArray.update_45 c_a_0 c_i_1 (graph_to_string_with_descriptors.get_module_name (select _x_2_1::_Tuple2 0))) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
<{graph_to_string_with_descriptors.cu;456;60_83}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = graph_to_string_with_descriptors.uselect_75 g_a_3 c_i_1 in <{graph_to_string_with_descriptors.cu;456;60_83}> (_SystemArray.update_45 c_a_0 c_i_1 (graph_to_string_with_descriptors.info_of_desc_and_mod (select _x_2_1::_Tuple2 0))) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
graph_to_string_with_descriptors.graph_to_string_with_descriptor_and_module_table !g_0 = let _x_1_0::I = graph_to_string_with_descriptors.replace_descs_by_desc_numbers_and_build_desc_tree 0 (graph_to_string_with_descriptors.copy_to_string (graph_to_string_with_descriptors.eval_all_nodes g_0)) 0 (<{StdInt.-_7}> (graph_to_string_with_descriptors.get_array_D (_SystemArray._createArray_8 0)) 2) graph_to_string_with_descriptors.EmptyDescOrModTree, _x_1_1 = graph_to_string_with_descriptors.make_module_tree (graph_to_string_with_descriptors.make_desc_array (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)), _x_1_2::I = graph_to_string_with_descriptors.usize_76 (select _x_1_1::_Tuple3 0), g_s2_1_3 = <{StdInt.-_7}> (select _x_1_2::_Tuple2 0) 1, _x_1_4 = _SystemArray.usize_15 (graph_to_string_with_descriptors.make_mod_array (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2)), g_s2_1_5 = <{StdInt.-_7}> (select _x_1_4::_Tuple2 0) 1 in <{_Tuple3!7}> (select _x_1_0::_Tuple3 0) (graph_to_string_with_descriptors.uarray (<{_SystemArray.Array;}> _SystemArray._createArray_40 _SystemArray.createArray_41 _SystemArray.replace_42 _SystemArray.select_43 _SystemArray.size_44 _SystemArray.update_45 _SystemArray.uselect_46 _SystemArray.usize_47) (<{graph_to_string_with_descriptors.cu;456;60_83}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s2_1_3 StdInt.one_11)) 0 g_s2_1_3 (select _x_1_2::_Tuple2 1))) (graph_to_string_with_descriptors.uarray (<{_SystemArray.Array;}> _SystemArray._createArray_40 _SystemArray.createArray_41 _SystemArray.replace_42 _SystemArray.select_43 _SystemArray.size_44 _SystemArray.update_45 _SystemArray.uselect_46 _SystemArray.usize_47) (<{graph_to_string_with_descriptors.cu;455;45_82}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s2_1_5 StdInt.one_11)) 0 g_s2_1_5 (select _x_1_4::_Tuple2 1)))
<{graph_to_string_with_descriptors.c;437;38_56}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (<{StdString.+++_11}> (select _x_2_1::_Tuple2 0) "\0") (<{graph_to_string_with_descriptors.c;437;38_56}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
graph_to_string_with_descriptors.append_pairs_58 !<{_v+++_0}> !_x_1 = case _x_1 (_predefined._Cons s1_1_0 _x_1_1 -> case _x_1_1 (_predefined._Cons s2_2_0 l_2_1 -> _predefined._Cons (select <{_v+++_0}>::<{StdOverloaded.+++;}> 0 s1_1_0 s2_2_0) (graph_to_string_with_descriptors.append_pairs_58 <{_v+++_0}> l_2_1)) ) (_ -> _x_1)
graph_to_string_with_descriptors.concat_strings_57 !<{_v+++_0}> !_x_1 = case _x_1 (_predefined._Cons s_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> s_1_0) ) (_ -> graph_to_string_with_descriptors.concat_strings_57 <{_v+++_0}> (graph_to_string_with_descriptors.append_pairs_58 <{_v+++_0}> _x_1))
<{graph_to_string_with_descriptors.c;437;38_84}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_46 g_a_2 g_i_0 in _predefined._Cons (<{StdString.+++_11}> (select _x_2_1::_Tuple2 0) "\0") (<{graph_to_string_with_descriptors.c;437;38_84}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
graph_to_string_with_descriptors.append_pairs_86 !_x_0 = case _x_0 (_predefined._Cons s1_1_0 _x_1_1 -> case _x_1_1 (_predefined._Cons s2_2_0 l_2_1 -> _predefined._Cons (<{StdString.+++_11}> s1_1_0 s2_2_0) (graph_to_string_with_descriptors.append_pairs_86 l_2_1)) ) (_ -> _x_0)
graph_to_string_with_descriptors.concat_strings_85 !_x_0 = case _x_0 (_predefined._Cons s_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> s_1_0) ) (_ -> graph_to_string_with_descriptors.concat_strings_85 (graph_to_string_with_descriptors.append_pairs_86 _x_0))
graph_to_string_with_descriptors.array_of_strings_to_string !a_0 = let !n_1_0::I = _SystemArray.size_44 a_0, _x_1_1 = _SystemArray.usize_47 a_0 in graph_to_string_with_descriptors.concat_strings_85 (_predefined._Cons (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray._createArray_16 4) 3 (StdChar.toChar_21 (<{StdInt.>>}> n_1_0 24))) 2 (StdChar.toChar_21 (<{StdInt.>>}> n_1_0 16))) 1 (StdChar.toChar_21 (<{StdInt.>>}> n_1_0 8))) 0 (StdChar.toChar_21 n_1_0)) (<{graph_to_string_with_descriptors.c;437;38_84}> 0 (<{StdInt.-_7}> (select _x_1_1::_Tuple2 0) 1) (select _x_1_1::_Tuple2 1)))
graph_to_string_with_descriptors.graph_to_string_with_descriptors !g_0 = let _x_1_0 = graph_to_string_with_descriptors.graph_to_string_with_descriptor_and_module_table g_0 in <{StdString.+++_11}> (graph_to_string_with_descriptors.array_of_strings_to_string (select _x_1_0::_Tuple3 2)) (<{StdString.+++_11}> (graph_to_string_with_descriptors.array_of_strings_to_string (select _x_1_0::_Tuple3 1)) (select _x_1_0::_Tuple3 0))
graph_to_string_with_descriptors.is_Array_D::B !d_0::I = error "no AnyCodeExpr"
<{graph_to_string_with_descriptors.TD;DescOrModTree}> _x_0::B = _predefined._Nil
<{graph_to_string_with_descriptors.TD;Desc_ModuleN}> _x_0::B = _predefined._Nil

:: graph_to_string_with_descriptors.DescOrModTree = graph_to_string_with_descriptors.DescOrModTreeNode !a1::I !a2::I !a3 !a4 | graph_to_string_with_descriptors.EmptyDescOrModTree

|| Converted Records
:: graph_to_string_with_descriptors._Desc_ModuleN = {!graph_to_string_with_descriptors.desc::I, !graph_to_string_with_descriptors.desc_mod_n::I}

