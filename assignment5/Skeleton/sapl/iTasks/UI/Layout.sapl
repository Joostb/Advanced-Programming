|| ?module? iTasks.UI.Layout


<{iTasks.UI.Layout.get`_175}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_175}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_175}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_174}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_174}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_174}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.itemsOpts_119 hint_0 = update (iTasks.UI.Definition.defaultItemsOpts (_predefined._Cons (iTasks.UI.Definition.stringDisplay hint_0) _predefined._Nil))::iTasks.UI.Definition._UIItemsOpts [5:Data.Maybe.Just "itwc-prompt"]
<{iTasks.UI.Layout.get`_934}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_934}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_934}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.createPrompt !attributes_0 = <{iTasks.UI.Layout._c;456;27_1006}> (<{iTasks.UI.Layout.get`_934}> "hint" attributes_0)
<{iTasks.UI.Layout._c;456;27_1006}> !_x_0 = case _x_0 (Data.Maybe.Just hint_1_0 -> _predefined._Cons (iTasks.UI.Definition.UIContainer (update iTasks.UI.Definition.defaultSizeOpts::iTasks.UI.Definition._UISizeOpts [0:Data.Maybe.Just iTasks.UI.Definition.FlexSize,1:Data.Maybe.Just iTasks.UI.Definition.WrapBound,3:Data.Maybe.Just iTasks.UI.Definition.WrapSize,6:Data.Maybe.Just (iTasks.UI.Definition._UISideSizes 5 5 10 5)]) (iTasks.UI.Layout.itemsOpts_119 hint_1_0)) _predefined._Nil) (Data.Maybe.Nothing -> _predefined._Nil) 
<{iTasks.UI.Layout.c;28;70_90}> !g_l_0 = <{iTasks.UI.Layout.g_c1;28;75_1007}> g_l_0
<{iTasks.UI.Layout.g_c1;28;75_1007}> !g_l_0 = case g_l_0 (_predefined._Cons c_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 c_1_0 Data.Map.newMap) (<{iTasks.UI.Layout.c;28;70_90}> g_t_1_1)) (_ -> _predefined._Nil)
iTasks.UI.Layout.foldl_149 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.foldl_149 op_0 (op_0 r_1 a_1_0) x_1_1) 
iTasks.UI.Layout.anon_148 k_0 x_1 xs_2 = _predefined._Cons (_Tuple2 k_0 x_1) xs_2
<{iTasks.UI.Layout.get`_146}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_146}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_146}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.setIfNotSet_139 !<{_v<_0}> !attr_1 !_x_2 = case _x_2 (_Tuple2 k_1_0 v_1_1 -> Data.Maybe.maybe (Data.Map.put <{_v<_0}> k_1_0 v_1_1 attr_1) (StdFunc.const attr_1) (<{iTasks.UI.Layout.get`_146}> <{_v<_0}> k_1_0 attr_1)) 
<{iTasks.UI.Layout.get`_936}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_936}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_936}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.setIfNotSet_935 !attr_0 !_x_1 = case _x_1 (_Tuple2 k_1_0 v_1_1 -> Data.Maybe.maybe (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) k_1_0 v_1_1 attr_0) (StdFunc.const attr_0) (<{iTasks.UI.Layout.get`_936}> k_1_0 attr_0)) 
iTasks.UI.Layout.foldl_937 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.foldl_937 (iTasks.UI.Layout.setIfNotSet_935 r_0 a_1_0) x_1_1) 
iTasks.UI.Layout.mergeAttributes !attr1_0 !attr2_1 = iTasks.UI.Layout.foldl_937 attr1_0 (Data.Map.foldrWithKey iTasks.UI.Layout.anon_148 _predefined._Nil attr2_1)
<{iTasks.UI.Layout.get`_938}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_938}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_938}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.autoAccuInteract prompt_0 editor_1 = let _x_1_0 = <{iTasks.UI.Layout._if;27;28_1008}> (Data.Maybe.isJust (<{iTasks.UI.Layout.get`_938}> "hint" prompt_0)) prompt_0 in iTasks.UI.Definition._UIForm (iTasks.UI.Layout.mergeAttributes (select _x_1_0::_Tuple2 0) (select editor_1::iTasks.UI.Definition._UIForm 0)) (<{StdList.++}> (select _x_1_0::_Tuple2 1) (select editor_1::iTasks.UI.Definition._UIForm 1)) (select editor_1::iTasks.UI.Definition._UIForm 2)
<{iTasks.UI.Layout._if;27;28_1008}> !_x_0::B prompt_1 = case _x_0 (True -> _Tuple2 (Data.Map.del (<{StdOverloaded.<;}> <{StdString.<_3}>) "hint" prompt_1) (<{iTasks.UI.Layout.c;28;70_90}> (iTasks.UI.Layout.createPrompt prompt_1))) (_ -> _Tuple2 prompt_1 _predefined._Nil)
iTasks.UI.Layout.anon_171 !f_0 g_1 x_2 = f_0 (g_1 x_2)
<{iTasks.UI.Layout.c;664;16_135}> !g_l_0 = <{iTasks.UI.Layout.g_c1;664;35_1010}> g_l_0
<{iTasks.UI.Layout.g_c1;664;35_1010}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.UI.Layout.g_c2;664;35_1009}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.g_c2;664;35_1009}> !g_h_0 g_t_1 = case g_h_0 (iTasks.API.Core.Types.ActionTrigger t_1_0 -> _predefined._Cons t_1_0 (<{iTasks.UI.Layout.c;664;16_135}> g_t_1)) (_ -> <{iTasks.UI.Layout.c;664;16_135}> g_t_1)
<{iTasks.UI.Layout.c;666;41_136}> name_0 task_1 !g_l_2 = <{iTasks.UI.Layout.g_c1;666;46_1011}> g_l_2 task_1 name_0
<{iTasks.UI.Layout.g_c1;666;46_1011}> !g_l_0 task_1 name_2 = case g_l_0 (_predefined._Cons t_1_0 g_t_1_1 -> _predefined._Cons (_Tuple3 t_1_0 task_1 name_2) (<{iTasks.UI.Layout.c;666;41_136}> name_2 task_1 g_t_1_1)) (_ -> _predefined._Nil)
iTasks.UI.Layout.isTrigger_137::B !_x_0 = case _x_0 (iTasks.API.Core.Types.ActionTrigger _x_1_0 -> True) (_ -> False)
iTasks.UI.Layout.anon_939::B !g_0 x_1 = StdBool.not (g_0 x_1)
iTasks.UI.Layout.anon_940::B !x_0 = StdBool.not (iTasks.UI.Layout.isTrigger_137 x_0)
iTasks.UI.Layout.extractTriggers !_x_0 = case _x_0 (_predefined._Nil -> _Tuple2 _predefined._Nil _predefined._Nil) (_predefined._Cons a_1_0 as_1_1 -> case a_1_0 (iTasks.UI.Definition._UIAction task_2_0 action_2_1 enabled_2_2 -> case action_2_1 (iTasks.API.Core.Types.Action name_3_0 options_3_1 -> let triggers_4_0 = <{iTasks.UI.Layout.c;664;16_135}> options_3_1 in <{iTasks.UI.Layout._c;664;7_1012}> triggers_4_0 as_1_1 a_1_0 name_3_0 task_2_0 options_3_1) ) ) 
<{iTasks.UI.Layout._c;664;7_1012}> !triggers_0 as_1 a_2 name_3 task_4 options_5 = case triggers_0 (_predefined._Nil -> let _x_2_0 = iTasks.UI.Layout.extractTriggers as_1 in _Tuple2 (select _x_2_0::_Tuple2 0) (_predefined._Cons a_2 (select _x_2_0::_Tuple2 1))) (_ -> let _x_1_0 = iTasks.UI.Layout.extractTriggers as_1 in _Tuple2 (<{StdList.++}> (<{iTasks.UI.Layout.c;666;41_136}> name_3 task_4 triggers_0) (select _x_1_0::_Tuple2 0)) (_predefined._Cons (update a_2::iTasks.UI.Definition._UIAction [1:iTasks.API.Core.Types.Action name_3 (StdList.filter iTasks.UI.Layout.anon_940 options_5)]) (select _x_1_0::_Tuple2 1)))
<{iTasks.UI.Layout.get`_167}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_167}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_167}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_166}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_166}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_166}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_165}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_165}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_165}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_164}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_164}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_164}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_163}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_163}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_163}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_162}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_162}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_162}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_161}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_161}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_161}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.hasMargin_104::B !control_0 = Data.Maybe.isJust (iTasks.UI.Definition.getMargins control_0)
iTasks.UI.Layout.noMarginControl_105::B !_x_0 = case _x_0 (iTasks.UI.Definition.UIPanel _x_1_0 _x_1_1 _x_1_2 -> True) (iTasks.UI.Definition.UIGrid _x_1_0 _x_1_1 _x_1_2 -> True) (iTasks.UI.Definition.UITree _x_1_0 _x_1_1 _x_1_2 -> True) (_ -> False)
iTasks.UI.Layout.icon_103 cls_0 tooltip_1 = _predefined._Cons (iTasks.UI.Definition.setLeftMargin 5 (iTasks.UI.Definition.UIIcon iTasks.UI.Definition.defaultFSizeOpts (iTasks.UI.Definition._UIIconOpts cls_0 (Data.Maybe.Just tooltip_1)))) _predefined._Nil
iTasks.UI.Layout.iconCtrl_102 !_x_0 _x_1 _x_2 _x_3 _x_4 = case _x_0 (iTasks.UI.Definition.UIEditCheckbox _x_1_0 _x_1_1 -> _predefined._Nil) (_ -> case _x_1 (Data.Maybe.Just msg_1_0 -> iTasks.UI.Layout.icon_103 "icon-hint" msg_1_0) (_ -> case _x_2 (Data.Maybe.Just msg_1_0 -> iTasks.UI.Layout.icon_103 "icon-valid" msg_1_0) (_ -> case _x_3 (Data.Maybe.Just msg_1_0 -> iTasks.UI.Layout.icon_103 "icon-warning" msg_1_0) (_ -> case _x_4 (Data.Maybe.Just msg_1_0 -> iTasks.UI.Layout.icon_103 "icon-invalid" msg_1_0) (_ -> _predefined._Nil)))))
iTasks.UI.Layout.postfixCtrl_100 !_x_0 = case _x_0 (Data.Maybe.Just postfix_1_0 -> _predefined._Cons (iTasks.UI.Definition.setLeftMargin 5 (iTasks.UI.Definition.setWidth (iTasks.UI.Definition.ExactSize 30) (iTasks.UI.Definition.stringDisplay postfix_1_0))) _predefined._Nil) (Data.Maybe.Nothing -> _predefined._Nil) 
iTasks.UI.Layout.prefixCtrl_101 !_x_0 = case _x_0 (Data.Maybe.Just prefix_1_0 -> _predefined._Cons (iTasks.UI.Definition.setRightMargin 5 (iTasks.UI.Definition.setWidth (iTasks.UI.Definition.ExactSize 30) (iTasks.UI.Definition.stringDisplay prefix_1_0))) _predefined._Nil) (Data.Maybe.Nothing -> _predefined._Nil) 
iTasks.UI.Layout.labelCtrl_99 !_x_0 = case _x_0 (Data.Maybe.Just label_1_0 -> _predefined._Cons (iTasks.UI.Definition.setWidth (iTasks.UI.Definition.ExactSize 100) (iTasks.UI.Definition.stringDisplay label_1_0)) _predefined._Nil) (Data.Maybe.Nothing -> _predefined._Nil) 
iTasks.UI.Layout.anon_160 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_941 !_x_0 !_x_1 !g_2 x_3 = iTasks.UI.Definition.setSize _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_942 !_x_0 !_x_1 !_x_2 !x_3 = iTasks.UI.Definition.setSize _x_0 _x_1 (iTasks.UI.Definition.setDirection _x_2 x_3)
iTasks.UI.Layout.row_98 !ctrls_0 = iTasks.UI.Layout.anon_942 iTasks.UI.Definition.FlexSize iTasks.UI.Definition.WrapSize iTasks.UI.Definition.Horizontal (iTasks.UI.Definition.defaultContainer ctrls_0)
<{iTasks.UI.Layout.get`_943}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_943}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_943}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_944}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_944}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_944}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_945}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_945}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_945}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_946}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_946}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_946}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_947}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_947}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_947}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_948}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_948}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_948}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_949}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_949}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_949}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.decorateControl last_0::B !_x_1 = case _x_1 (_Tuple2 control_1_0 attributes_1_1 -> let mbLabel_2_0 = <{iTasks.UI.Layout.get`_943}> "label" attributes_1_1, mbPrefix_2_1 = <{iTasks.UI.Layout.get`_944}> "prefix" attributes_1_1, mbPostfix_2_2 = <{iTasks.UI.Layout.get`_945}> "postfix" attributes_1_1, mbHint_2_3 = <{iTasks.UI.Layout.get`_946}> "hint" attributes_1_1, mbValid_2_4 = <{iTasks.UI.Layout.get`_947}> "valid" attributes_1_1, mbWarning_2_5 = <{iTasks.UI.Layout.get`_948}> "warning" attributes_1_1, mbError_2_6 = <{iTasks.UI.Layout.get`_949}> "error" attributes_1_1 in <{iTasks.UI.Layout._c;160;7_1015}> (_Tuple7 mbLabel_2_0 mbPrefix_2_1 mbPostfix_2_2 mbHint_2_3 mbValid_2_4 mbWarning_2_5 mbError_2_6) control_1_0 last_0 mbLabel_2_0 mbPrefix_2_1 mbPostfix_2_2 mbHint_2_3 mbValid_2_4 mbWarning_2_5 mbError_2_6) 
<{iTasks.UI.Layout._c;160;7_1015}> !_x_0 !control_1 last_2::B mbLabel_3 mbPrefix_4 mbPostfix_5 mbHint_6 mbValid_7 mbWarning_8 mbError_9 = case _x_0 (_Tuple7 _x_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 _x_1_6 -> case _x_1_0 (Data.Maybe.Nothing -> case _x_1_1 (Data.Maybe.Nothing -> case _x_1_2 (Data.Maybe.Nothing -> case _x_1_3 (Data.Maybe.Nothing -> case _x_1_4 (Data.Maybe.Nothing -> case _x_1_5 (Data.Maybe.Nothing -> iTasks.UI.Layout._f1014_1014 _x_1_6 control_1 last_2 mbLabel_3 mbPrefix_4 mbPostfix_5 mbHint_6 mbValid_7 mbWarning_8 mbError_9) ) ) ) ) ) ) (_ -> <{iTasks.UI.Layout._c;160;7_1013}> control_1 mbLabel_3 mbPrefix_4 mbPostfix_5 mbHint_6 mbValid_7 mbWarning_8 mbError_9 last_2)
iTasks.UI.Layout._f1014_1014 !_x_0 !control_1 last_2::B mbLabel_3 mbPrefix_4 mbPostfix_5 mbHint_6 mbValid_7 mbWarning_8 mbError_9 = case _x_0 (Data.Maybe.Nothing -> case (iTasks.UI.Layout.hasMargin_104 control_1) (True -> control_1) (False -> case (iTasks.UI.Layout.noMarginControl_105 control_1) (True -> iTasks.UI.Definition.setMargins 0 0 0 0 control_1) (False -> case last_2 (True -> iTasks.UI.Definition.setMargins 5 5 5 5 control_1) (False -> iTasks.UI.Definition.setMargins 5 5 0 5 control_1) ) ) ) (_ -> <{iTasks.UI.Layout._c;160;7_1013}> control_1 mbLabel_3 mbPrefix_4 mbPostfix_5 mbHint_6 mbValid_7 mbWarning_8 mbError_9 last_2)
<{iTasks.UI.Layout._c;160;7_1013}> !control_0 !mbLabel_1 mbPrefix_2 mbPostfix_3 mbHint_4 mbValid_5 mbWarning_6 mbError_7 last_8::B = case (iTasks.UI.Layout.noMarginControl_105 control_0) (True -> iTasks.UI.Definition.setMargins 0 0 0 0 (iTasks.UI.Layout.row_98 (<{StdList.++}> (iTasks.UI.Layout.labelCtrl_99 mbLabel_1) (<{StdList.++}> (iTasks.UI.Layout.prefixCtrl_101 mbPrefix_2) (<{StdList.++}> (_predefined._Cons control_0 _predefined._Nil) (<{StdList.++}> (iTasks.UI.Layout.postfixCtrl_100 mbPostfix_3) (iTasks.UI.Layout.iconCtrl_102 control_0 mbHint_4 mbValid_5 mbWarning_6 mbError_7))))))) (False -> case last_8 (True -> iTasks.UI.Definition.setMargins 5 5 5 5 (iTasks.UI.Layout.row_98 (<{StdList.++}> (iTasks.UI.Layout.labelCtrl_99 mbLabel_1) (<{StdList.++}> (iTasks.UI.Layout.prefixCtrl_101 mbPrefix_2) (<{StdList.++}> (_predefined._Cons control_0 _predefined._Nil) (<{StdList.++}> (iTasks.UI.Layout.postfixCtrl_100 mbPostfix_3) (iTasks.UI.Layout.iconCtrl_102 control_0 mbHint_4 mbValid_5 mbWarning_6 mbError_7))))))) (False -> iTasks.UI.Definition.setMargins 5 5 0 5 (iTasks.UI.Layout.row_98 (<{StdList.++}> (iTasks.UI.Layout.labelCtrl_99 mbLabel_1) (<{StdList.++}> (iTasks.UI.Layout.prefixCtrl_101 mbPrefix_2) (<{StdList.++}> (_predefined._Cons control_0 _predefined._Nil) (<{StdList.++}> (iTasks.UI.Layout.postfixCtrl_100 mbPostfix_3) (iTasks.UI.Layout.iconCtrl_102 control_0 mbHint_4 mbValid_5 mbWarning_6 mbError_7))))))) ) 
iTasks.UI.Layout.mapLst_97 f_0 !_x_1 = case _x_1 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons x_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> _predefined._Cons (f_0 True x_1_0) _predefined._Nil) (_ -> _predefined._Cons (f_0 False x_1_0) (iTasks.UI.Layout.mapLst_97 f_0 _x_1_1))) 
iTasks.UI.Layout.decorateControls !controls_0 = iTasks.UI.Layout.mapLst_97 iTasks.UI.Layout.decorateControl controls_0
iTasks.UI.Layout.autoLayoutForm !_x_0 = case _x_0 (iTasks.UI.Definition._UIForm attributes_1_0 _x_1_1 size_1_2 -> case _x_1_1 (_predefined._Cons _x_2_0 _x_2_1 -> case _x_2_0 (_Tuple2 c_3_0 _x_3_1 -> case c_3_0 (iTasks.UI.Definition.UIListChoice _x_4_0 _x_4_1 -> case _x_2_1 (_predefined._Nil -> iTasks.UI.Definition._UIBlock attributes_1_0 (update (iTasks.UI.Definition.defaultItemsOpts (_predefined._Cons (iTasks.UI.Definition.fill c_3_0) _predefined._Nil))::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical]) size_1_2 _predefined._Nil _predefined._Nil) ) (iTasks.UI.Definition.UITree _x_4_0 _x_4_1 _x_4_2 -> case _x_2_1 (_predefined._Nil -> iTasks.UI.Definition._UIBlock attributes_1_0 (update (iTasks.UI.Definition.defaultItemsOpts (_predefined._Cons (iTasks.UI.Definition.fill c_3_0) _predefined._Nil))::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical]) size_1_2 _predefined._Nil _predefined._Nil) ) (iTasks.UI.Definition.UIGrid _x_4_0 _x_4_1 _x_4_2 -> case _x_2_1 (_predefined._Nil -> iTasks.UI.Definition._UIBlock attributes_1_0 (update (iTasks.UI.Definition.defaultItemsOpts (_predefined._Cons (iTasks.UI.Definition.fill c_3_0) _predefined._Nil))::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical]) size_1_2 _predefined._Nil _predefined._Nil) ) ) ) (_ -> iTasks.UI.Definition._UIBlock attributes_1_0 (update (iTasks.UI.Definition.defaultItemsOpts (iTasks.UI.Layout.decorateControls _x_1_1))::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical]) size_1_2 _predefined._Nil _predefined._Nil)) 
iTasks.UI.Layout.foldr_170 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (iTasks.UI.Layout.foldr_170 op_0 r_1 x_1_1)) 
iTasks.UI.Layout.addTriggerToControl !_x_0 !_x_1 = case _x_0 (_Tuple3 _x_1_0 task_1_1 action_1_2 -> case _x_1_0 (iTasks.API.Core.Types.DoubleClick -> case _x_1 (iTasks.UI.Definition.UIGrid sOpts_3_0 cOpts_3_1 opts_3_2 -> iTasks.UI.Definition.UIGrid sOpts_3_0 cOpts_3_1 (update opts_3_2::iTasks.UI.Definition._UIGridOpts [1:Data.Maybe.Just (_Tuple2 task_1_1 action_1_2)])) (iTasks.UI.Definition.UITree sOpts_3_0 cOpts_3_1 opts_3_2 -> iTasks.UI.Definition.UITree sOpts_3_0 cOpts_3_1 (update opts_3_2::iTasks.UI.Definition._UITreeOpts [0:Data.Maybe.Just (_Tuple2 task_1_1 action_1_2)])) ) ) (_ -> _x_1)
iTasks.UI.Layout.foldr_950 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.addTriggerToControl a_1_0 (iTasks.UI.Layout.foldr_950 r_0 x_1_1)) 
iTasks.UI.Layout.addTriggersToTab triggers_0 !_x_1 = case _x_1 (iTasks.UI.Definition.UITab iOpts_1_0 opts_1_1 -> case iOpts_1_0 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> iTasks.UI.Definition.UITab (update iOpts_1_0::iTasks.UI.Definition._UIItemsOpts [0:StdList.map (iTasks.UI.Layout.addTriggersToControl triggers_0) items_2_0]) opts_1_1) ) 
iTasks.UI.Layout.addTriggersToControl triggers_0 !_x_1 = case _x_1 (iTasks.UI.Definition.UIContainer sOpts_1_0 iOpts_1_1 -> case iOpts_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> iTasks.UI.Definition.UIContainer sOpts_1_0 (update iOpts_1_1::iTasks.UI.Definition._UIItemsOpts [0:StdList.map (iTasks.UI.Layout.addTriggersToControl triggers_0) items_2_0])) ) (iTasks.UI.Definition.UIPanel sOpts_1_0 iOpts_1_1 opts_1_2 -> case iOpts_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> iTasks.UI.Definition.UIPanel sOpts_1_0 (update iOpts_1_1::iTasks.UI.Definition._UIItemsOpts [0:StdList.map (iTasks.UI.Layout.addTriggersToControl triggers_0) items_2_0]) opts_1_2) ) (iTasks.UI.Definition.UITabSet sOpts_1_0 tOpts_1_1 -> case tOpts_1_1 (iTasks.UI.Definition._UITabSetOpts items_2_0 activeTab_2_1 -> iTasks.UI.Definition.UITabSet sOpts_1_0 (update tOpts_1_1::iTasks.UI.Definition._UITabSetOpts [0:StdList.map (iTasks.UI.Layout.addTriggersToTab triggers_0) items_2_0])) ) (_ -> iTasks.UI.Layout.foldr_950 _x_1 triggers_0)
<{iTasks.UI.Layout.c;483;100_120}> triggers_0 !g_l_1 = <{iTasks.UI.Layout.g_c1;483;109_1017}> g_l_1 triggers_0
<{iTasks.UI.Layout.g_c1;483;109_1017}> !g_l_0 triggers_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.UI.Layout.g_c2;483;109_1016}> g_h_1_0 triggers_1 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.g_c2;483;109_1016}> !g_h_0 triggers_1 g_t_2 = case g_h_0 (_Tuple2 c_1_0 m_1_1 -> _predefined._Cons (_Tuple2 (iTasks.UI.Layout.addTriggersToControl triggers_1 c_1_0) m_1_1) (<{iTasks.UI.Layout.c;483;100_120}> triggers_1 g_t_2)) (_ -> <{iTasks.UI.Layout.c;483;100_120}> triggers_1 g_t_2)
iTasks.UI.Layout.addTriggersToBlock triggers_0 !ui_1 = case ui_1 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> case content_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> update ui_1::iTasks.UI.Definition._UIBlock [1:update content_1_1::iTasks.UI.Definition._UIItemsOpts [0:StdList.map (iTasks.UI.Layout.addTriggersToControl triggers_0) items_2_0]]) ) 
iTasks.UI.Layout.addTriggersToUIDef triggers_0 !def_1 = case def_1 (iTasks.UI.Definition._UIDef content_1_0 windows_1_1 -> case content_1_0 (iTasks.UI.Definition.UIForm stack_2_0 -> case stack_2_0 (iTasks.UI.Definition._UIForm attributes_3_0 controls_3_1 size_3_2 -> update def_1::iTasks.UI.Definition._UIDef [0:iTasks.UI.Definition.UIForm (update stack_2_0::iTasks.UI.Definition._UIForm [1:<{iTasks.UI.Layout.c;483;100_120}> triggers_0 controls_3_1])]) ) (iTasks.UI.Definition.UIBlock subui_2_0 -> update def_1::iTasks.UI.Definition._UIDef [0:iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.addTriggersToBlock triggers_0 subui_2_0)]) (iTasks.UI.Definition.UIBlocks blocks_2_0 actions_2_1 -> update def_1::iTasks.UI.Definition._UIDef [0:iTasks.UI.Definition.UIBlocks (StdList.map (iTasks.UI.Layout.addTriggersToBlock triggers_0) blocks_2_0) _predefined._Nil]) ) (_ -> def_1)
iTasks.UI.Layout.foldl_159 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.foldl_159 op_0 (op_0 r_1 a_1_0) x_1_1) 
<{iTasks.UI.Layout.get`_158}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_158}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_158}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_157}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_157}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_157}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.anon_156 !f_0 g_1 x_2 = f_0 (g_1 x_2)
<{iTasks.UI.Layout.get`_155}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_155}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_155}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_154}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_154}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_154}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.mkButton_124 !_vtoString_0 task_1 !action_2 !enabled_3::B = case action_2 (iTasks.API.Core.Types.Action action_1_0 _x_1_1 -> iTasks.UI.Definition.UIActionButton iTasks.UI.Definition.defaultSizeOpts (iTasks.UI.Definition._UIActionOpts (select _vtoString_0::<{StdOverloaded.toString;}> 0 task_1) action_1_0) (iTasks.UI.Definition._UIButtonOpts (Data.Maybe.Just (iTasks.API.Core.Types.actionName action_2)) (iTasks.API.Core.Types.actionIcon action_2) (StdBool.not enabled_3))) 
<{iTasks.UI.Layout.c;678;17_138}> !g_l_0 = <{iTasks.UI.Layout.g_c1;678;34_1019}> g_l_0
<{iTasks.UI.Layout.g_c1;678;34_1019}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.UI.Layout.g_c2;678;34_1018}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.g_c2;678;34_1018}> !g_h_0 g_t_1 = case g_h_0 (iTasks.API.Core.Types.ActionKey key_1_0 -> _predefined._Cons key_1_0 (<{iTasks.UI.Layout.c;678;17_138}> g_t_1)) (_ -> <{iTasks.UI.Layout.c;678;17_138}> g_t_1)
iTasks.UI.Layout.actionToHotkey !_x_0 = case _x_0 (iTasks.UI.Definition._UIAction task_1_0 _x_1_1 _x_1_2 -> case _x_1_1 (iTasks.API.Core.Types.Action action_2_0 options_2_1 -> case _x_1_2 (True -> <{iTasks.UI.Layout._c;678;7_1020}> (<{iTasks.UI.Layout.c;678;17_138}> options_2_1) task_1_0 action_2_0) ) ) (_ -> Data.Maybe.Nothing)
<{iTasks.UI.Layout._c;678;7_1020}> !_x_0 task_1 action_2 = case _x_0 (_predefined._Cons key_1_0 _x_1_1 -> Data.Maybe.Just (_Tuple2 key_1_0 (iTasks.UI.Definition._UIActionOpts task_1 action_2))) (_ -> Data.Maybe.Nothing)
iTasks.UI.Layout.anon_123 hotkeys_0 h_1 = _predefined._Cons h_1 hotkeys_0
iTasks.UI.Layout.anon_122 hotkeys_0 h_1 = _predefined._Cons h_1 hotkeys_0
iTasks.UI.Layout.mkButton_951 !task_0 !action_1 !enabled_2::B = case action_1 (iTasks.API.Core.Types.Action action_1_0 _x_1_1 -> iTasks.UI.Definition.UIActionButton iTasks.UI.Definition.defaultSizeOpts (iTasks.UI.Definition._UIActionOpts (StdString.toString_9 task_0) action_1_0) (iTasks.UI.Definition._UIButtonOpts (Data.Maybe.Just (iTasks.API.Core.Types.actionName action_1)) (iTasks.API.Core.Types.actionIcon action_1) (StdBool.not enabled_2))) 
iTasks.UI.Layout.actionsToButtons !_x_0 = case _x_0 (_predefined._Nil -> <{_Tuple3!7}> _predefined._Nil _predefined._Nil _predefined._Nil) (_predefined._Cons a_1_0 as_1_1 -> case a_1_0 (iTasks.UI.Definition._UIAction task_2_0 action_2_1 enabled_2_2 -> case action_2_1 (iTasks.API.Core.Types.Action name_3_0 _x_3_1 -> <{iTasks.UI.Layout._c;568;7_1023}> (Text.split_12 "/" name_3_0) as_1_1 task_2_0 action_2_1 enabled_2_2 a_1_0) ) ) 
<{iTasks.UI.Layout._c;568;7_1023}> !_x_0 !as_1 task_2 action_3 enabled_4::B a_5 = case _x_0 (_predefined._Cons name_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> let _x_3_0 = iTasks.UI.Layout.actionsToButtons as_1, hotkeys_3_1 = select _x_3_0::_Tuple3 1 in <{_Tuple3!7}> (_predefined._Cons (iTasks.UI.Layout.mkButton_951 task_2 action_3 enabled_4) (select _x_3_0::_Tuple3 0)) (Data.Maybe.maybe hotkeys_3_1 (iTasks.UI.Layout.anon_122 hotkeys_3_1) (iTasks.UI.Layout.actionToHotkey a_5)) (select _x_3_0::_Tuple3 2)) (_predefined._Cons _x_2_0 _x_2_1 -> case name_1_0 ("" -> case _x_2_0 ("" -> iTasks.UI.Layout._f1022_1022 _x_2_1 as_1 task_2 action_3 enabled_4 a_5) ) ) ) (_ -> <{iTasks.UI.Layout._c;568;7_1021}> as_1 a_5)
iTasks.UI.Layout._f1022_1022 !_x_0 !as_1 task_2 action_3 enabled_4::B a_5 = case _x_0 (_predefined._Nil -> let _x_2_0 = iTasks.UI.Layout.actionsToButtons as_1, hotkeys_2_1 = select _x_2_0::_Tuple3 1 in <{_Tuple3!7}> (_predefined._Cons (iTasks.UI.Layout.mkButton_951 task_2 action_3 enabled_4) (select _x_2_0::_Tuple3 0)) (Data.Maybe.maybe hotkeys_2_1 (iTasks.UI.Layout.anon_123 hotkeys_2_1) (iTasks.UI.Layout.actionToHotkey a_5)) (select _x_2_0::_Tuple3 2)) (_ -> <{iTasks.UI.Layout._c;568;7_1021}> as_1 a_5)
<{iTasks.UI.Layout._c;568;7_1021}> !as_0 a_1 = let _x_1_0 = iTasks.UI.Layout.actionsToButtons as_0 in <{_Tuple3!7}> (select _x_1_0::_Tuple3 0) (select _x_1_0::_Tuple3 1) (_predefined._Cons a_1 (select _x_1_0::_Tuple3 2))
<{iTasks.UI.Layout.get`_153}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_153}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_153}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.anon_152 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_151 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_150 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_952 !_x_0 !g_1 x_2 = iTasks.UI.Definition.setDirection _x_0 (g_1 x_2)
iTasks.UI.Layout.anon_953 !_x_0::I !_x_1::I !_x_2::I !_x_3::I !g_4 x_5 = iTasks.UI.Definition.setPadding _x_0 _x_1 _x_2 _x_3 (g_4 x_5)
iTasks.UI.Layout.anon_954 !g_0 x_1 = iTasks.UI.Definition.wrapHeight (g_0 x_1)
iTasks.UI.Layout.anon_955 !_x_0 !_x_1 !x_2 = iTasks.UI.Definition.setDirection _x_0 (iTasks.UI.Definition.setHalign _x_1 x_2)
iTasks.UI.Layout.anon_956 !_x_0::I !_x_1::I !_x_2::I !_x_3::I !_x_4 !_x_5 !x_6 = iTasks.UI.Definition.setPadding _x_0 _x_1 _x_2 _x_3 (iTasks.UI.Layout.anon_955 _x_4 _x_5 x_6)
iTasks.UI.Layout.anon_957 !_x_0::I !_x_1::I !_x_2::I !_x_3::I !_x_4 !_x_5 !x_6 = iTasks.UI.Definition.wrapHeight (iTasks.UI.Layout.anon_956 _x_0 _x_1 _x_2 _x_3 _x_4 _x_5 x_6)
iTasks.UI.Layout.buttonPanel !buttons_0 = iTasks.UI.Layout.anon_957 2 2 2 0 iTasks.UI.Definition.Horizontal iTasks.UI.Definition.AlignRight (iTasks.UI.Definition.setBaseCls "buttonbar" (iTasks.UI.Definition.defaultContainer buttons_0))
<{iTasks.UI.Layout.get`_958}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_958}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_958}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.addButtonPanel attr_0 !direction_1 !_x_2 items_3 = case _x_2 (_predefined._Nil -> <{_Tuple2!3}> items_3 direction_1) (_ -> <{iTasks.UI.Layout._c;469;7_1024}> (_Tuple2 (<{iTasks.UI.Layout.get`_958}> "buttonPosition" attr_0) direction_1) items_3 _x_2)
<{iTasks.UI.Layout._c;469;7_1024}> !_x_0 items_1 _x_2 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_0 (Data.Maybe.Nothing -> case _x_1_1 (iTasks.UI.Definition.Vertical -> <{_Tuple2!3}> (<{StdList.++}> items_1 (_predefined._Cons (iTasks.UI.Definition.fillWidth (iTasks.UI.Layout.buttonPanel _x_2)) _predefined._Nil)) iTasks.UI.Definition.Vertical) (iTasks.UI.Definition.Horizontal -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.setDirection iTasks.UI.Definition.Horizontal (iTasks.UI.Definition.defaultContainer items_1)) (_predefined._Cons (iTasks.UI.Definition.fillWidth (iTasks.UI.Layout.buttonPanel _x_2)) _predefined._Nil)) iTasks.UI.Definition.Vertical) ) (Data.Maybe.Just _x_2_0 -> case _x_2_0 ("left" -> case _x_1_1 (iTasks.UI.Definition.Vertical -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.wrapWidth (iTasks.UI.Layout.buttonPanel _x_2)) (_predefined._Cons (iTasks.UI.Definition.setDirection iTasks.UI.Definition.Vertical (iTasks.UI.Definition.defaultContainer items_1)) _predefined._Nil)) iTasks.UI.Definition.Horizontal) (iTasks.UI.Definition.Horizontal -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.wrapWidth (iTasks.UI.Layout.buttonPanel _x_2)) items_1) iTasks.UI.Definition.Horizontal) ) ("right" -> case _x_1_1 (iTasks.UI.Definition.Vertical -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.setDirection iTasks.UI.Definition.Vertical (iTasks.UI.Definition.defaultContainer items_1)) (_predefined._Cons (iTasks.UI.Definition.wrapWidth (iTasks.UI.Layout.buttonPanel _x_2)) _predefined._Nil)) iTasks.UI.Definition.Horizontal) (iTasks.UI.Definition.Horizontal -> <{_Tuple2!3}> (<{StdList.++}> items_1 (_predefined._Cons (iTasks.UI.Definition.wrapWidth (iTasks.UI.Layout.buttonPanel _x_2)) _predefined._Nil)) iTasks.UI.Definition.Horizontal) ) ("top" -> case _x_1_1 (iTasks.UI.Definition.Vertical -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.fillWidth (iTasks.UI.Layout.buttonPanel _x_2)) items_1) iTasks.UI.Definition.Vertical) (iTasks.UI.Definition.Horizontal -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.fillWidth (iTasks.UI.Layout.buttonPanel _x_2)) (_predefined._Cons (iTasks.UI.Definition.setDirection iTasks.UI.Definition.Horizontal (iTasks.UI.Definition.defaultContainer items_1)) _predefined._Nil)) iTasks.UI.Definition.Vertical) ) ("bottom" -> case _x_1_1 (iTasks.UI.Definition.Vertical -> <{_Tuple2!3}> (<{StdList.++}> items_1 (_predefined._Cons (iTasks.UI.Definition.fillWidth (iTasks.UI.Layout.buttonPanel _x_2)) _predefined._Nil)) iTasks.UI.Definition.Vertical) (iTasks.UI.Definition.Horizontal -> <{_Tuple2!3}> (_predefined._Cons (iTasks.UI.Definition.setDirection iTasks.UI.Definition.Horizontal (iTasks.UI.Definition.defaultContainer items_1)) (_predefined._Cons (iTasks.UI.Definition.fillWidth (iTasks.UI.Layout.buttonPanel _x_2)) _predefined._Nil)) iTasks.UI.Definition.Vertical) ) ) ) 
iTasks.UI.Layout.anon_114 !icon_0 = <{StdString.+++_11}> "icon-" icon_0
iTasks.UI.Layout.anon_961 !_x_0 !_x_1 !g_2 x_3 = Data.Map.del _x_0 _x_1 (g_2 x_3)
<{iTasks.UI.Layout.get`_960}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_960}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_960}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_959}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_959}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_959}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.anon_962 !_x_0 !g_1 x_2 = Data.Map.del (<{StdOverloaded.<;}> <{StdString.<_3}>) _x_0 (g_1 x_2)
iTasks.UI.Layout.anon_963 !_x_0 !_x_1 !_x_2 !x_3 = Data.Map.del (<{StdOverloaded.<;}> <{StdString.<_3}>) _x_0 (Data.Map.del _x_1 _x_2 x_3)
iTasks.UI.Layout.anon_964 !_x_0 !_x_1 !x_2 = Data.Map.del (<{StdOverloaded.<;}> <{StdString.<_3}>) _x_0 (Data.Map.del (<{StdOverloaded.<;}> <{StdString.<_3}>) _x_1 x_2)
iTasks.UI.Layout.blockToPanel !_x_0 = case _x_0 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> case content_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> let _x_3_0 = iTasks.UI.Layout.actionsToButtons actions_1_3, _x_3_1 = iTasks.UI.Layout.addButtonPanel attributes_1_0 direction_2_1 (select _x_3_0::_Tuple3 0) items_2_0 in _Tuple4 (iTasks.UI.Definition.UIPanel (update size_1_2::iTasks.UI.Definition._UISizeOpts [0:Data.Maybe.Just iTasks.UI.Definition.FlexSize]) (update content_1_1::iTasks.UI.Definition._UIItemsOpts [0:select _x_3_1::_Tuple2 0,1:select _x_3_1::_Tuple2 1]) (iTasks.UI.Definition._UIPanelOpts (<{iTasks.UI.Layout.get`_959}> "title" attributes_1_0) False Data.Maybe.Nothing (Data.Maybe.fmap_12 iTasks.UI.Layout.anon_114 (<{iTasks.UI.Layout.get`_960}> "icon" attributes_1_0)))) (iTasks.UI.Layout.anon_964 "title" "icon" attributes_1_0) (select _x_3_0::_Tuple3 2) (select _x_3_0::_Tuple3 1)) ) 
iTasks.UI.Layout.blockToContainer !_x_0 = case _x_0 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> case content_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> let _x_3_0 = iTasks.UI.Layout.actionsToButtons actions_1_3, _x_3_1 = iTasks.UI.Layout.addButtonPanel attributes_1_0 direction_2_1 (select _x_3_0::_Tuple3 0) items_2_0 in _Tuple4 (iTasks.UI.Definition.UIContainer (update size_1_2::iTasks.UI.Definition._UISizeOpts [0:Data.Maybe.Just iTasks.UI.Definition.FlexSize]) (update content_1_1::iTasks.UI.Definition._UIItemsOpts [0:select _x_3_1::_Tuple2 0,1:select _x_3_1::_Tuple2 1])) attributes_1_0 (select _x_3_0::_Tuple3 2) (select _x_3_0::_Tuple3 1)) ) 
<{iTasks.UI.Layout.get`_965}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_965}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_965}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_966}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_966}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_966}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.blockToControl !ui_0 = case ui_0 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> <{iTasks.UI.Layout._c;351;7_1025}> (<{iTasks.UI.Layout.get`_965}> "container" attributes_1_0) ui_0 attributes_1_0) 
<{iTasks.UI.Layout._c;351;7_1025}> !_x_0 !ui_1 attributes_2 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 ("panel" -> iTasks.UI.Layout.blockToPanel ui_1) ("container" -> iTasks.UI.Layout.blockToContainer ui_1) ) (_ -> case (Data.Maybe.isNothing (<{iTasks.UI.Layout.get`_966}> "title" attributes_2)) (True -> iTasks.UI.Layout.blockToContainer ui_1) (False -> iTasks.UI.Layout.blockToPanel ui_1) )
iTasks.UI.Layout.append_106 !ui1_0 ui2_1 = let _x_1_0 = iTasks.UI.Layout.blockToControl ui2_1 in update ui1_0::iTasks.UI.Definition._UIBlock [0:iTasks.UI.Layout.mergeAttributes (select ui1_0::iTasks.UI.Definition._UIBlock 0) (select _x_1_0::_Tuple4 1),1:update (select ui1_0::iTasks.UI.Definition._UIBlock 1)::iTasks.UI.Definition._UIItemsOpts [0:<{StdList.++}> (select (select ui1_0::iTasks.UI.Definition._UIBlock 1)::iTasks.UI.Definition._UIItemsOpts 0) (_predefined._Cons (select _x_1_0::_Tuple4 0) _predefined._Nil)],3:<{StdList.++}> (select ui1_0::iTasks.UI.Definition._UIBlock 3) (select _x_1_0::_Tuple4 2),4:<{StdList.++}> (select ui1_0::iTasks.UI.Definition._UIBlock 4) (select _x_1_0::_Tuple4 3)]
iTasks.UI.Layout.foldl_967 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.foldl_967 (iTasks.UI.Layout.append_106 r_0 a_1_0) x_1_1) 
iTasks.UI.Layout.arrangeStacked direction_0 !blocks_1 actions_2 = iTasks.UI.Layout.foldl_967 (iTasks.UI.Definition._UIBlock Data.Map.newMap (update (iTasks.UI.Definition.defaultItemsOpts _predefined._Nil)::iTasks.UI.Definition._UIItemsOpts [1:direction_0]) iTasks.UI.Definition.defaultSizeOpts actions_2 _predefined._Nil) blocks_1
iTasks.UI.Layout.arrangeVertical = iTasks.UI.Layout.arrangeStacked iTasks.UI.Definition.Vertical
iTasks.UI.Layout.autoLayoutBlocks !blocks_0 actions_1 = iTasks.UI.Layout.arrangeVertical blocks_0 actions_1
iTasks.UI.Layout.autoAccuStep !_x_0 stepActions_1 = case _x_0 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIEmpty _x_2_0 -> case _x_2_0 (iTasks.UI.Definition._UIEmpty actions_3_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIEmpty (iTasks.UI.Definition._UIEmpty (<{StdList.++}> actions_3_0 stepActions_1))) windows_1_1) ) (iTasks.UI.Definition.UIForm stack_2_0 -> case stack_2_0 (iTasks.UI.Definition._UIForm attributes_3_0 controls_3_1 size_3_2 -> case (StdList.isEmpty controls_3_1) (True -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIEmpty (iTasks.UI.Definition._UIEmpty stepActions_1)) windows_1_1) (False -> let _x_5_0 = iTasks.UI.Layout.extractTriggers stepActions_1 in iTasks.UI.Layout.addTriggersToUIDef (select _x_5_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update (iTasks.UI.Layout.autoLayoutForm stack_2_0)::iTasks.UI.Definition._UIBlock [2:size_3_2,3:select _x_5_0::_Tuple2 1])) windows_1_1)) ) ) (iTasks.UI.Definition.UIBlock sub_2_0 -> case sub_2_0 (iTasks.UI.Definition._UIBlock attributes_3_0 content_3_1 size_3_2 actions_3_3 hotkeys_3_4 -> case actions_3_3 (_predefined._Nil -> let _x_5_0 = iTasks.UI.Layout.extractTriggers stepActions_1 in iTasks.UI.Layout.addTriggersToUIDef (select _x_5_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update sub_2_0::iTasks.UI.Definition._UIBlock [3:select _x_5_0::_Tuple2 1])) windows_1_1)) (_ -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock sub_2_0) windows_1_1)) ) (iTasks.UI.Definition.UIBlocks blocks_2_0 origActions_2_1 -> let _x_3_0 = iTasks.UI.Layout.extractTriggers (<{StdList.++}> origActions_2_1 stepActions_1) in iTasks.UI.Layout.addTriggersToUIDef (select _x_3_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.autoLayoutBlocks blocks_2_0 (select _x_3_0::_Tuple2 1))) windows_1_1)) ) 
iTasks.UI.Layout.foldr_173 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (iTasks.UI.Layout.foldr_173 op_0 r_1 x_1_1)) 
iTasks.UI.Layout.foldl_172 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.foldl_172 op_0 (op_0 r_1 a_1_0) x_1_1) 
<{iTasks.UI.Layout.c;58;34_91}> !g_l_0 = <{iTasks.UI.Layout.g_c1;58;53_1027}> g_l_0
<{iTasks.UI.Layout.g_c1;58;53_1027}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.UI.Layout.g_c2;58;53_1026}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.g_c2;58;53_1026}> !g_h_0 g_t_1 = case g_h_0 (iTasks.UI.Definition._UIDef content_1_0 windows_1_1 -> _predefined._Cons windows_1_1 (<{iTasks.UI.Layout.c;58;34_91}> g_t_1)) (_ -> <{iTasks.UI.Layout.c;58;34_91}> g_t_1)
iTasks.UI.Layout.allForms_93::B !_x_0 = case _x_0 (_predefined._Nil -> True) (_predefined._Cons _x_1_0 fs_1_1 -> case _x_1_0 (iTasks.UI.Definition._UIDef _x_2_0 windows_2_1 -> case _x_2_0 (iTasks.UI.Definition.UIForm _x_3_0 -> iTasks.UI.Layout.allForms_93 fs_1_1) ) ) (_ -> False)
iTasks.UI.Layout.mergeForms_94 form1_0 !_x_1 = case _x_1 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm form2_2_0 -> iTasks.UI.Definition._UIForm (iTasks.UI.Layout.mergeAttributes (select form1_0::iTasks.UI.Definition._UIForm 0) (select form2_2_0::iTasks.UI.Definition._UIForm 0)) (<{StdList.++}> (select form1_0::iTasks.UI.Definition._UIForm 1) (select form2_2_0::iTasks.UI.Definition._UIForm 1)) (update (select form1_0::iTasks.UI.Definition._UIForm 2)::iTasks.UI.Definition._UISizeOpts [0:Data.Maybe.maybe (select (select form1_0::iTasks.UI.Definition._UIForm 2)::iTasks.UI.Definition._UISizeOpts 0) Data.Maybe.Just (select (select form2_2_0::iTasks.UI.Definition._UIForm 2)::iTasks.UI.Definition._UISizeOpts 0),3:Data.Maybe.maybe (select (select form1_0::iTasks.UI.Definition._UIForm 2)::iTasks.UI.Definition._UISizeOpts 3) Data.Maybe.Just (select (select form2_2_0::iTasks.UI.Definition._UIForm 2)::iTasks.UI.Definition._UISizeOpts 3)])) ) 
iTasks.UI.Layout.collectBlocks_95 !_x_0 !_x_1 = case _x_0 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm form_2_0 -> case _x_1 (_Tuple2 blocks_3_0 actions_3_1 -> _Tuple2 (_predefined._Cons (iTasks.UI.Layout.autoLayoutForm form_2_0) blocks_3_0) actions_3_1) ) (iTasks.UI.Definition.UIEmpty _x_2_0 -> case _x_2_0 (iTasks.UI.Definition._UIEmpty actions_3_0 -> case _x_1 (_Tuple2 blocks_4_0 actions1_4_1 -> _Tuple2 blocks_4_0 (<{StdList.++}> actions_3_0 actions1_4_1)) ) ) (iTasks.UI.Definition.UIBlock block_2_0 -> case _x_1 (_Tuple2 blocks_3_0 actions_3_1 -> _Tuple2 (_predefined._Cons block_2_0 blocks_3_0) actions_3_1) ) (iTasks.UI.Definition.UIBlocks blocks2_2_0 actions2_2_1 -> case _x_1 (_Tuple2 blocks1_3_0 actions1_3_1 -> _Tuple2 (<{StdList.++}> blocks2_2_0 blocks1_3_0) (<{StdList.++}> actions2_2_1 actions1_3_1)) ) ) (_ -> case _x_1 (_Tuple2 blocks_1_0 actions_1_1 -> _Tuple2 blocks_1_0 actions_1_1) )
iTasks.UI.Layout.foldl_968 r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.foldl_968 (iTasks.UI.Layout.mergeForms_94 r_0 a_1_0) x_1_1) 
iTasks.UI.Layout.foldr_969 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks.UI.Layout.collectBlocks_95 a_1_0 (iTasks.UI.Layout.foldr_969 r_0 x_1_1)) 
iTasks.UI.Layout.autoAccuParallel !defs_0 parActions_1 = <{iTasks.UI.Layout._c;60;7_1037}> defs_0 parActions_1
<{iTasks.UI.Layout._c;60;7_1037}> !defs_0 parActions_1 = case defs_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (iTasks.UI.Definition._UIDef _x_2_0 windows_2_1 -> case _x_2_0 (iTasks.UI.Definition.UIForm form_3_0 -> iTasks.UI.Layout._f1036_1036 _x_1_1 form_3_0 parActions_1 defs_0 _x_2_0 _x_1_0) (_ -> iTasks.UI.Layout._f1035_1035 _x_2_0 _x_1_1 parActions_1 defs_0 _x_1_0)) ) (_ -> <{iTasks.UI.Layout._c;60;7_1029}> defs_0 parActions_1)
iTasks.UI.Layout._f1036_1036 !_x_0 form_1 parActions_2 defs_3 _x_4 _x_5 = case _x_0 (_predefined._Nil -> let _x_2_0 = iTasks.UI.Layout.extractTriggers parActions_2, block_2_1 = iTasks.UI.Layout.autoLayoutForm form_1 in iTasks.UI.Layout.addTriggersToUIDef (select _x_2_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update block_2_1::iTasks.UI.Definition._UIBlock [3:<{StdList.++}> (select block_2_1::iTasks.UI.Definition._UIBlock 3) (select _x_2_0::_Tuple2 1)])) (StdList.flatten (<{iTasks.UI.Layout.c;58;34_91}> defs_3)))) (_ -> iTasks.UI.Layout._f1035_1035 _x_4 _x_0 parActions_2 defs_3 _x_5)
iTasks.UI.Layout._f1035_1035 !_x_0 _x_1 parActions_2 defs_3 _x_4 = case _x_0 (iTasks.UI.Definition.UIBlock block_1_0 -> iTasks.UI.Layout._f1034_1034 _x_1 parActions_2 block_1_0 defs_3 _x_0 _x_4) (_ -> iTasks.UI.Layout._f1033_1033 _x_0 _x_1 parActions_2 defs_3 _x_4)
iTasks.UI.Layout._f1034_1034 !_x_0 parActions_1 block_2 defs_3 _x_4 _x_5 = case _x_0 (_predefined._Nil -> let _x_2_0 = iTasks.UI.Layout.extractTriggers parActions_1 in iTasks.UI.Layout.addTriggersToUIDef (select _x_2_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update block_2::iTasks.UI.Definition._UIBlock [3:<{StdList.++}> (select block_2::iTasks.UI.Definition._UIBlock 3) (select _x_2_0::_Tuple2 1)])) (StdList.flatten (<{iTasks.UI.Layout.c;58;34_91}> defs_3)))) (_ -> iTasks.UI.Layout._f1033_1033 _x_4 _x_0 parActions_1 defs_3 _x_5)
iTasks.UI.Layout._f1033_1033 !_x_0 _x_1 parActions_2 defs_3 _x_4 = case _x_0 (iTasks.UI.Definition.UIEmpty _x_1_0 -> case _x_1_0 (iTasks.UI.Definition._UIEmpty actions_2_0 -> iTasks.UI.Layout._f1032_1032 _x_1 parActions_2 actions_2_0 defs_3 _x_0 _x_4) ) (_ -> iTasks.UI.Layout._f1031_1031 _x_0 _x_1 parActions_2 _x_4 defs_3)
iTasks.UI.Layout._f1032_1032 !_x_0 parActions_1 actions_2 defs_3 _x_4 _x_5 = case _x_0 (_predefined._Nil -> let _x_2_0 = iTasks.UI.Layout.extractTriggers parActions_1 in iTasks.UI.Layout.addTriggersToUIDef (select _x_2_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIEmpty (iTasks.UI.Definition._UIEmpty (<{StdList.++}> actions_2 (select _x_2_0::_Tuple2 1)))) (StdList.flatten (<{iTasks.UI.Layout.c;58;34_91}> defs_3)))) (_ -> iTasks.UI.Layout._f1031_1031 _x_4 _x_0 parActions_1 _x_5 defs_3)
iTasks.UI.Layout._f1031_1031 !_x_0 _x_1 parActions_2 _x_3 defs_4 = case _x_0 (iTasks.UI.Definition.UIFinal _x_1_0 -> iTasks.UI.Layout._f1030_1030 _x_1 parActions_2 _x_3 defs_4) (_ -> <{iTasks.UI.Layout._c;60;7_1029}> defs_4 parActions_2)
iTasks.UI.Layout._f1030_1030 !_x_0 parActions_1 _x_2 defs_3 = case _x_0 (_predefined._Nil -> iTasks.UI.Layout.addTriggersToUIDef (select (iTasks.UI.Layout.extractTriggers parActions_1)::_Tuple2 0) _x_2) (_ -> <{iTasks.UI.Layout._c;60;7_1029}> defs_3 parActions_1)
<{iTasks.UI.Layout._c;60;7_1029}> !defs_0 parActions_1 = case (iTasks.UI.Layout.allForms_93 defs_0) (True -> let _x_2_0 = iTasks.UI.Layout.extractTriggers parActions_1, parActions_2_1 = select _x_2_0::_Tuple2 1 in case (StdList.isEmpty parActions_2_1) (True -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIForm (iTasks.UI.Layout.foldl_968 (iTasks.UI.Definition._UIForm Data.Map.newMap _predefined._Nil iTasks.UI.Definition.defaultSizeOpts) defs_0)) (StdList.flatten (<{iTasks.UI.Layout.c;58;34_91}> defs_0))) (False -> let block_4_0 = iTasks.UI.Layout.autoLayoutForm (iTasks.UI.Layout.foldl_968 (iTasks.UI.Definition._UIForm Data.Map.newMap _predefined._Nil iTasks.UI.Definition.defaultSizeOpts) defs_0) in iTasks.UI.Layout.addTriggersToUIDef (select _x_2_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update block_4_0::iTasks.UI.Definition._UIBlock [3:<{StdList.++}> (select block_4_0::iTasks.UI.Definition._UIBlock 3) parActions_2_1])) (StdList.flatten (<{iTasks.UI.Layout.c;58;34_91}> defs_0)))) ) (False -> let _x_2_0 = iTasks.UI.Layout.extractTriggers parActions_1, _x_2_1 = iTasks.UI.Layout.foldr_969 (_Tuple2 _predefined._Nil _predefined._Nil) defs_0, blocks_2_2 = select _x_2_1::_Tuple2 0, actions_2_3 = select _x_2_1::_Tuple2 1, parActions_2_4 = select _x_2_0::_Tuple2 1 in iTasks.UI.Layout.addTriggersToUIDef (select _x_2_0::_Tuple2 0) (iTasks.UI.Definition._UIDef (<{iTasks.UI.Layout._c;79;29_1028}> blocks_2_2 actions_2_3 parActions_2_4) (StdList.flatten (<{iTasks.UI.Layout.c;58;34_91}> defs_0)))) 
<{iTasks.UI.Layout._c;79;29_1028}> !blocks_0 actions_1 parActions_2 = case blocks_0 (_predefined._Cons block_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> iTasks.UI.Definition.UIBlock (update block_1_0::iTasks.UI.Definition._UIBlock [3:<{StdList.++}> (select block_1_0::iTasks.UI.Definition._UIBlock 3) (<{StdList.++}> actions_1 parActions_2)])) ) (_ -> iTasks.UI.Definition.UIBlocks blocks_0 (<{StdList.++}> actions_1 parActions_2))
<{iTasks.UI.Layout.get`_169}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_169}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_169}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.anon_96 def_0 title_1 = iTasks.UI.Definition.uiDefSetAttribute "title" title_1 def_0
<{iTasks.UI.Layout.get`_970}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_970}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_970}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.autoAccuWorkOn def_0 !attributes_1 = let def_1_0 = iTasks.UI.Definition.uiDefSetSize iTasks.UI.Definition.FlexSize iTasks.UI.Definition.FlexSize def_0 in Data.Maybe.maybe def_1_0 (iTasks.UI.Layout.anon_96 def_1_0) (<{iTasks.UI.Layout.get`_970}> "title" attributes_1)
<{iTasks.UI.Layout.get`_168}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_168}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_168}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_971}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_971}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_971}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.autoLayoutSubEditor !_x_0 = case _x_0 (iTasks.UI.Definition._UIForm attributes_1_0 _x_1_1 size_1_2 -> case _x_1_1 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons c_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> _predefined._Cons c_2_0 _predefined._Nil) ) (_ -> _predefined._Cons (_Tuple2 (iTasks.UI.Definition.defaultFieldSet (<{iTasks.UI.Layout.get`_971}> "label" attributes_1_0) (iTasks.UI.Layout.decorateControls _x_1_1)) attributes_1_0) _predefined._Nil)) 
iTasks.UI.Layout.autoLayoutRules = iTasks.UI.Layout._LayoutRules iTasks.UI.Layout.autoAccuInteract iTasks.UI.Layout.autoAccuStep iTasks.UI.Layout.autoAccuParallel iTasks.UI.Layout.autoAccuWorkOn iTasks.UI.Layout.autoLayoutSubEditor iTasks.UI.Layout.autoLayoutForm iTasks.UI.Layout.autoLayoutBlocks
<{iTasks.UI.Layout.get`_179}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_179}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_179}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.anon_178 !f_0 g_1 x_2 = f_0 (g_1 x_2)
<{iTasks.UI.Layout.get`_177}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_177}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_177}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_176}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_176}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_176}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.addToHotkeys_133 !task_0 !action_1 !enabled_2::B !hotkeys_3 = <{iTasks.UI.Layout._c;652;50_1038}> (iTasks.UI.Layout.actionToHotkey (iTasks.UI.Definition._UIAction task_0 action_1 enabled_2)) hotkeys_3
<{iTasks.UI.Layout._c;652;50_1038}> !_x_0 !hotkeys_1 = case _x_0 (Data.Maybe.Just hotkey_1_0 -> <{StdList.++}> hotkeys_1 (_predefined._Cons hotkey_1_0 _predefined._Nil)) (Data.Maybe.Nothing -> hotkeys_1) 
iTasks.UI.Layout.path_126 !action_0 = let p_1_0 = Text.split_12 "/" (iTasks.API.Core.Types.actionName action_0) in <{iTasks.UI.Layout._c;591;19_1039}> p_1_0
<{iTasks.UI.Layout._c;591;19_1039}> !p_0 = case p_0 (_predefined._Cons _x_1_0 p_1_1 -> case _x_1_0 ("" -> p_1_1) ) (_ -> p_0)
iTasks.UI.Layout.itemText_129 !_x_0 = case _x_0 (iTasks.UI.Definition.UIActionMenuItem _x_1_0 _x_1_1 -> case _x_1_1 (iTasks.UI.Definition._UIButtonOpts text_2_0 iconCls_2_1 disabled_2_2 -> Data.Maybe.fromMaybe "" text_2_0) ) (iTasks.UI.Definition.UISubMenuItem _x_1_0 -> case _x_1_0 (iTasks.UI.Definition._UIMenuButtonOpts text_2_0 iconCls_2_1 disabled_2_2 menu_2_3 -> Data.Maybe.fromMaybe "" text_2_0) ) (_ -> "")
iTasks.UI.Layout.addToItem_132 !sub_0 task_1 action_2 enabled_3::B !item_4 = case item_4 (iTasks.UI.Definition.UISubMenuItem opts_1_0 -> case opts_1_0 (iTasks.UI.Definition._UIMenuButtonOpts text_2_0 iconCls_2_1 disabled_2_2 menu_2_3 -> iTasks.UI.Definition.UISubMenuItem (update opts_1_0::iTasks.UI.Definition._UIMenuButtonOpts [3:iTasks.UI.Layout.addToItems_128 sub_0 task_1 action_2 enabled_3 menu_2_3])) ) 
iTasks.UI.Layout.createItem_131 item_0 !_x_1 task_2 !action_3 enabled_4::B = case _x_1 (_predefined._Nil -> iTasks.UI.Definition.UIActionMenuItem (iTasks.UI.Definition._UIActionOpts task_2 (iTasks.API.Core.Types.actionName action_3)) (iTasks.UI.Definition._UIButtonOpts (Data.Maybe.Just item_0) (iTasks.API.Core.Types.actionIcon action_3) (StdBool.not enabled_4))) (_ -> iTasks.UI.Definition.UISubMenuItem (iTasks.UI.Definition._UIMenuButtonOpts (Data.Maybe.Just item_0) (iTasks.API.Core.Types.actionIcon action_3) False (iTasks.UI.Layout.addToItems_128 _x_1 task_2 action_3 enabled_4 _predefined._Nil)))
iTasks.UI.Layout.addToItems_128 !_x_0 task_1 action_2 enabled_3::B _x_4 = case _x_0 (_predefined._Cons item_1_0 sub_1_1 -> case _x_4 (_predefined._Nil -> _predefined._Cons (iTasks.UI.Layout.createItem_131 item_1_0 sub_1_1 task_1 action_2 enabled_3) _predefined._Nil) (_predefined._Cons i_2_0 is_2_1 -> case (<{StdString.==_2}> (iTasks.UI.Layout.itemText_129 i_2_0) item_1_0) (True -> case (StdList.isEmpty sub_1_1) (True -> _predefined._Cons i_2_0 (_predefined._Cons (iTasks.UI.Layout.createItem_131 item_1_0 sub_1_1 task_1 action_2 enabled_3) is_2_1)) (False -> _predefined._Cons (iTasks.UI.Layout.addToItem_132 sub_1_1 task_1 action_2 enabled_3 i_2_0) is_2_1) ) (False -> _predefined._Cons i_2_0 (iTasks.UI.Layout.addToItems_128 (_predefined._Cons item_1_0 sub_1_1) task_1 action_2 enabled_3 is_2_1)) ) ) (_predefined._Nil -> _predefined._Nil) 
iTasks.UI.Layout.createButton_130 item_0 !_x_1 task_2 !action_3 enabled_4::B = case _x_1 (_predefined._Nil -> iTasks.UI.Definition.UIActionButton iTasks.UI.Definition.defaultSizeOpts (iTasks.UI.Definition._UIActionOpts task_2 (iTasks.API.Core.Types.actionName action_3)) (iTasks.UI.Definition._UIButtonOpts (Data.Maybe.Just item_0) (iTasks.API.Core.Types.actionIcon action_3) (StdBool.not enabled_4))) (_ -> iTasks.UI.Definition.UIMenuButton iTasks.UI.Definition.defaultSizeOpts (iTasks.UI.Definition._UIMenuButtonOpts (Data.Maybe.Just item_0) (iTasks.API.Core.Types.actionIcon action_3) (<{iTasks.UI.Layout._if;633;27_1040}> (StdList.isEmpty _x_1) enabled_4) (iTasks.UI.Layout.addToItems_128 _x_1 task_2 action_3 enabled_4 _predefined._Nil)))
<{iTasks.UI.Layout._if;633;27_1040}>::B !_x_0::B enabled_1::B = case _x_0 (True -> StdBool.not enabled_1) (_ -> False)
iTasks.UI.Layout.addToMenus_127 !_x_0 task_1 action_2 enabled_3::B !_x_4 = case _x_0 (_predefined._Cons main_1_0 item_1_1 -> case _x_4 (_predefined._Nil -> _predefined._Cons (iTasks.UI.Layout.createButton_130 main_1_0 item_1_1 task_1 action_2 enabled_3) _predefined._Nil) (_predefined._Cons m_2_0 ms_2_1 -> case m_2_0 (iTasks.UI.Definition.UIMenuButton sOpts_3_0 opts_3_1 -> case (<{Data.Maybe.==_11}> (<{StdOverloaded.==;}> <{StdString.==_2}>) (select opts_3_1::iTasks.UI.Definition._UIMenuButtonOpts 0) (Data.Maybe.Just main_1_0)) (True -> _predefined._Cons (iTasks.UI.Definition.UIMenuButton sOpts_3_0 (update opts_3_1::iTasks.UI.Definition._UIMenuButtonOpts [3:iTasks.UI.Layout.addToItems_128 item_1_1 task_1 action_2 enabled_3 (select opts_3_1::iTasks.UI.Definition._UIMenuButtonOpts 3)])) ms_2_1) (False -> _predefined._Cons m_2_0 (iTasks.UI.Layout.addToMenus_127 (_predefined._Cons main_1_0 item_1_1) task_1 action_2 enabled_3 ms_2_1)) ) (_ -> _predefined._Cons m_2_0 (iTasks.UI.Layout.addToMenus_127 (_predefined._Cons main_1_0 item_1_1) task_1 action_2 enabled_3 ms_2_1))) ) (_ -> _x_4)
iTasks.UI.Layout.makeMenus_125 menus_0 hotkeys_1 !_x_2 = case _x_2 (_predefined._Nil -> _Tuple3 menus_0 hotkeys_1 _predefined._Nil) (_predefined._Cons a_1_0 as_1_1 -> case a_1_0 (iTasks.UI.Definition._UIAction task_2_0 action_2_1 enabled_2_2 -> iTasks.UI.Layout.makeMenus_125 (iTasks.UI.Layout.addToMenus_127 (iTasks.UI.Layout.path_126 action_2_1) task_2_0 action_2_1 enabled_2_2 menus_0) (iTasks.UI.Layout.addToHotkeys_133 task_2_0 action_2_1 enabled_2_2 hotkeys_1) as_1_1) ) 
iTasks.UI.Layout.menuOrder_134::B !_x_0 _x_1 = case _x_0 (iTasks.UI.Definition.UIMenuButton _x_1_0 _x_1_1 -> case _x_1_1 (iTasks.UI.Definition._UIMenuButtonOpts _x_2_0 iconCls_2_1 disabled_2_2 menu_2_3 -> case _x_2_0 (Data.Maybe.Just m1_3_0 -> case _x_1 (iTasks.UI.Definition.UIMenuButton _x_4_0 _x_4_1 -> case _x_4_1 (iTasks.UI.Definition._UIMenuButtonOpts _x_5_0 iconCls_5_1 disabled_5_2 menu_5_3 -> case _x_5_0 (Data.Maybe.Just m2_6_0 -> <{StdString.<_3}> m1_3_0 m2_6_0) ) ) ) ) ) (_ -> False)
iTasks.UI.Layout.actionsToMenus !actions_0 = let _x_1_0 = iTasks.UI.Layout.makeMenus_125 _predefined._Nil _predefined._Nil actions_0 in <{_Tuple3!7}> (StdOrdList.sortBy iTasks.UI.Layout.menuOrder_134 (select _x_1_0::_Tuple3 0)) (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)
iTasks.UI.Layout.gEq_s_510::B !_vgEq_s_0 x1_1 x2_2 = Data.Maybe.gEq_Maybe_13 (select _vgEq_s_0::<{iTasks.UI.Layout.gEq_s;}> 0) x1_1 x2_2
<{iTasks.UI.Layout.get`_974}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_974}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_974}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_973}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_973}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_973}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.gEq_s_972::B x1_0 x2_1 = Data.Maybe.gEq_Maybe_13 GenEq.gEq__String_6 x1_0 x2_1
iTasks.UI.Layout.anon_975 !_x_0 !_x_1 !g_2 x_3 = iTasks.UI.Definition.setSize _x_0 _x_1 (g_2 x_3)
<{iTasks.UI.Layout.get`_976}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_976}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_976}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.anon_977 !_x_0 !_x_1 !_x_2::B !x_3 = iTasks.UI.Definition.setSize _x_0 _x_1 (iTasks.UI.Definition.setFramed _x_2 x_3)
iTasks.UI.Layout.autoLayoutFinal !_x_0 = case _x_0 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIEmpty _x_2_0 -> case _x_2_0 (iTasks.UI.Definition._UIEmpty actions_3_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal (iTasks.UI.Definition.UIViewport (iTasks.UI.Definition.defaultItemsOpts _predefined._Nil) (iTasks.UI.Definition._UIViewportOpts Data.Maybe.Nothing Data.Maybe.Nothing Data.Maybe.Nothing))) windows_1_1) ) (iTasks.UI.Definition.UIForm stack_2_0 -> iTasks.UI.Layout.autoLayoutFinal (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.autoLayoutForm stack_2_0)) windows_1_1)) (iTasks.UI.Definition.UIBlock subui_2_0 -> case subui_2_0 (iTasks.UI.Definition._UIBlock attributes_3_0 content_3_1 size_3_2 actions_3_3 hotkeys_3_4 -> let fullScreen_4_0 = iTasks.UI.Layout._f1042_1042 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_s_972) (<{iTasks.UI.Layout.get`_973}> "screen" attributes_3_0) (Data.Maybe.Just "full")) attributes_3_0, _x_4_1 = iTasks.UI.Layout.blockToPanel (<{iTasks.UI.Layout._if;432;60_1041}> fullScreen_4_0 subui_2_0 attributes_3_0), actions_4_2 = select _x_4_1::_Tuple4 2, _x_4_3 = iTasks.UI.Layout.actionsToMenus actions_4_2, menu_4_4 = select _x_4_3::_Tuple3 0, panelkeys_4_5 = select _x_4_1::_Tuple4 3, menukeys_4_6 = select _x_4_3::_Tuple3 1, keys_4_7 = <{StdList.++}> panelkeys_4_5 menukeys_4_6, panel_4_8::B = select _x_4_1::_Tuple4 0 in iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal (iTasks.UI.Definition.UIViewport (update (iTasks.UI.Definition.defaultItemsOpts (_predefined._Cons (<{iTasks.UI.Layout._if;433;15_1043}> fullScreen_4_0 panel_4_8) _predefined._Nil))::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical,2:iTasks.UI.Definition.AlignCenter,3:iTasks.UI.Definition.AlignMiddle]) (iTasks.UI.Definition._UIViewportOpts (<{iTasks.UI.Layout.get`_976}> "title" (select _x_4_1::_Tuple4 1)) (<{iTasks.UI.Layout._if;438;126_1044}> (StdList.isEmpty menu_4_4) menu_4_4) (<{iTasks.UI.Layout._c;437;35_1045}> keys_4_7)))) windows_1_1) ) (iTasks.UI.Definition.UIBlocks blocks_2_0 actions_2_1 -> iTasks.UI.Layout.autoLayoutFinal (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.autoLayoutBlocks blocks_2_0 actions_2_1)) windows_1_1)) (iTasks.UI.Definition.UIFinal viewport_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal viewport_2_0) windows_1_1) ) 
<{iTasks.UI.Layout._c;437;35_1045}> !keys_0 = case keys_0 (_predefined._Nil -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just keys_0)
<{iTasks.UI.Layout._if;438;126_1044}> !_x_0::B menu_1 = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just menu_1)
<{iTasks.UI.Layout._if;433;15_1043}> !fullScreen_0::B !panel_1 = case fullScreen_0 (True -> iTasks.UI.Definition.setSize iTasks.UI.Definition.FlexSize iTasks.UI.Definition.FlexSize panel_1) (_ -> iTasks.UI.Layout.anon_977 iTasks.UI.Definition.WrapSize iTasks.UI.Definition.WrapSize True panel_1)
iTasks.UI.Layout._f1042_1042::B !_x_0::B attributes_1 = case _x_0 (True -> True) (_ -> Data.Maybe.isNothing (<{iTasks.UI.Layout.get`_974}> "session" attributes_1))
<{iTasks.UI.Layout._if;432;60_1041}> !fullScreen_0::B !subui_1 attributes_2 = case fullScreen_0 (True -> update subui_1::iTasks.UI.Definition._UIBlock [0:Data.Map.del (<{StdOverloaded.<;}> <{StdString.<_3}>) "title" attributes_2]) (_ -> subui_1)
<{iTasks.UI.Layout.get`_180}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_180}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_180}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_978}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_978}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_978}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.plainLayoutFinal !_x_0 = case _x_0 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIEmpty _x_2_0 -> case _x_2_0 (iTasks.UI.Definition._UIEmpty actions_3_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal (iTasks.UI.Definition.UIViewport (iTasks.UI.Definition.defaultItemsOpts _predefined._Nil) (iTasks.UI.Definition._UIViewportOpts Data.Maybe.Nothing Data.Maybe.Nothing Data.Maybe.Nothing))) windows_1_1) ) (iTasks.UI.Definition.UIBlock block_2_0 -> case block_2_0 (iTasks.UI.Definition._UIBlock attributes_3_0 content_3_1 size_3_2 actions_3_3 hotkeys_3_4 -> let _x_4_0 = iTasks.UI.Layout.blockToContainer block_2_0 in iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal (iTasks.UI.Definition.UIViewport (select (select _x_4_0::_Tuple4 0)::_Tuple2 1) (iTasks.UI.Definition._UIViewportOpts (<{iTasks.UI.Layout.get`_978}> "title" (select _x_4_0::_Tuple4 1)) Data.Maybe.Nothing (Data.Maybe.Just hotkeys_3_4)))) windows_1_1) ) (iTasks.UI.Definition.UIBlocks blocks_2_0 actions_2_1 -> iTasks.UI.Layout.plainLayoutFinal (iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.autoLayoutBlocks blocks_2_0 actions_2_1)) windows_1_1)) (iTasks.UI.Definition.UIFinal viewport_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal viewport_2_0) windows_1_1) ) 
iTasks.UI.Layout.arrangeHorizontal = iTasks.UI.Layout.arrangeStacked iTasks.UI.Definition.Horizontal
iTasks.UI.Layout.fst_187 !tuple_0 = select tuple_0::_Tuple2 0
<{iTasks.UI.Layout.get`_186}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_186}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_186}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_185}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_185}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_185}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_184}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_184}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_184}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.actionsToCloseId !_x_0 = case _x_0 (_predefined._Nil -> <{_Tuple2!3}> Data.Maybe.Nothing _predefined._Nil) (_predefined._Cons _x_1_0 as_1_1 -> case _x_1_0 (iTasks.UI.Definition._UIAction task_2_0 _x_2_1 enabled_2_2 -> case _x_2_1 (iTasks.API.Core.Types.Action _x_3_0 _x_3_1 -> case _x_3_0 ("Close" -> case _x_3_1 (_predefined._Cons _x_5_0 _x_5_1 -> case _x_5_0 (iTasks.API.Core.Types.ActionIcon _x_6_0 -> case _x_6_0 ("close" -> case _x_5_1 (_predefined._Cons _x_8_0 _x_8_1 -> case _x_8_0 (iTasks.API.Core.Types.ActionKey _x_9_0 -> case _x_9_0 (iTasks.API.Core.Types._Hotkey _x_10_0 _x_10_1 _x_10_2 _x_10_3 -> case _x_10_0 (27 -> case _x_10_1 (False -> case _x_10_2 (False -> case _x_10_3 (False -> case _x_8_1 (_predefined._Nil -> <{_Tuple2!3}> (<{iTasks.UI.Layout._if;673;62_1046}> enabled_2_2 task_2_0) as_1_1) ) ) ) ) ) ) ) ) ) ) ) ) ) (_ -> let _x_2_0 = iTasks.UI.Layout.actionsToCloseId as_1_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (_predefined._Cons _x_1_0 (select _x_2_0::_Tuple2 1)))) 
<{iTasks.UI.Layout._if;673;62_1046}> !enabled_0::B task_1 = case enabled_0 (True -> Data.Maybe.Just task_1) (_ -> Data.Maybe.Nothing)
iTasks.UI.Layout.tabOpts_116 !task_0 !iconCls_1 !title_2 !hotkeys_3 !menus_4 !close_5 = iTasks.UI.Definition._UITabOpts title_2 iconCls_1 (<{iTasks.UI.Layout._if;390;44_1047}> (StdList.isEmpty menus_4) menus_4) (<{iTasks.UI.Layout._if;391;23_1048}> (StdList.isEmpty hotkeys_3) hotkeys_3) task_0 close_5
<{iTasks.UI.Layout._if;391;23_1048}> !_x_0::B hotkeys_1 = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just hotkeys_1)
<{iTasks.UI.Layout._if;390;44_1047}> !_x_0::B menus_1 = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just menus_1)
iTasks.UI.Layout.anon_115 !i_0 = <{StdString.+++_11}> "icon-" i_0
<{iTasks.UI.Layout.get`_981}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_981}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_981}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_980}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_980}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_980}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_979}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_979}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_979}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.blockToTab !_x_0 = case _x_0 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> case content_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> let _x_3_0 = iTasks.UI.Layout.actionsToCloseId actions_1_3, _x_3_1 = iTasks.UI.Layout.actionsToButtons (select _x_3_0::_Tuple2 1), _x_3_2 = iTasks.UI.Layout.addButtonPanel attributes_1_0 direction_2_1 (select _x_3_1::_Tuple3 0) items_2_0, _x_3_3 = iTasks.UI.Layout.actionsToMenus (select _x_3_1::_Tuple3 2) in iTasks.UI.Definition.UITab (update content_1_1::iTasks.UI.Definition._UIItemsOpts [0:select _x_3_2::_Tuple2 0,1:select _x_3_2::_Tuple2 1]) (iTasks.UI.Layout.tabOpts_116 (<{iTasks.UI.Layout.get`_979}> "task" attributes_1_0) (Data.Maybe.fmap_12 iTasks.UI.Layout.anon_115 (<{iTasks.UI.Layout.get`_981}> "icon" attributes_1_0)) (Data.Maybe.fromMaybe "Untitled" (<{iTasks.UI.Layout.get`_980}> "title" attributes_1_0)) (<{StdList.++}> (select _x_3_1::_Tuple3 1) (select _x_3_3::_Tuple3 1)) (select _x_3_3::_Tuple3 0) (select _x_3_0::_Tuple2 0))) ) 
<{iTasks.UI.Layout.c;277;55_107}> !g_l_0 = <{iTasks.UI.Layout.g_c1;277;83_1050}> g_l_0
<{iTasks.UI.Layout.g_c1;277;83_1050}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.UI.Layout.g_c2;277;83_1049}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.g_c2;277;83_1049}> !g_h_0 g_t_1 = case g_h_0 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> _predefined._Cons (_Tuple2 (iTasks.UI.Layout.blockToTab g_h_0) attributes_1_0) (<{iTasks.UI.Layout.c;277;55_107}> g_t_1)) (_ -> <{iTasks.UI.Layout.c;277;55_107}> g_t_1)
iTasks.UI.Layout.fst_183 !tuple_0 = select tuple_0::_Tuple2 0
<{iTasks.UI.Layout.get`_182}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_182}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_182}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_181}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_181}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_181}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_983}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_983}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_983}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_982}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_982}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_982}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.later_109::B !_vto_0 !_vto_1 !a_2 b_3 = <{iTasks.UI.Layout._c;292;21_1051}> (_Tuple2 (<{iTasks.UI.Layout.get`_982}> "lastfocus" a_2) (<{iTasks.UI.Layout.get`_983}> "lastfocus" b_3)) _vto_0 _vto_1
<{iTasks.UI.Layout._c;292;21_1051}>::B !_x_0 _vto_1 _vto_2 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_0 (Data.Maybe.Just fa_2_0 -> case _x_1_1 (Data.Maybe.Just fb_3_0 -> <{StdInt.<_17}> (select _vto_1::<{StdOverloaded.toInt;}> 0 fb_3_0) (select _vto_2::<{StdOverloaded.toInt;}> 0 fa_2_0)) (Data.Maybe.Nothing -> True) ) ) (_ -> False)
iTasks.UI.Layout.find_108 !_vto_0 i_1::I best_2 !_x_3 = case _x_3 (_predefined._Nil -> Data.Maybe.fmap_12 iTasks.UI.Layout.fst_183 best_2) (_predefined._Cons _x_1_0 ds_1_1 -> case best_2 (Data.Maybe.Nothing -> case _x_1_0 (_Tuple2 _x_3_0 acur_3_1 -> iTasks.UI.Layout.find_108 _vto_0 (<{StdInt.+_6}> i_1 1) (Data.Maybe.Just (_Tuple2 i_1 acur_3_1)) ds_1_1) ) (Data.Maybe.Just _x_2_0 -> case _x_2_0 (_Tuple2 ibest_3_0 abest_3_1 -> case _x_1_0 (_Tuple2 _x_4_0 acur_4_1 -> case (iTasks.UI.Layout.later_109 _vto_0 _vto_0 acur_4_1 abest_3_1) (True -> iTasks.UI.Layout.find_108 _vto_0 (<{StdInt.+_6}> i_1 1) (Data.Maybe.Just (_Tuple2 i_1 acur_4_1)) ds_1_1) (False -> iTasks.UI.Layout.find_108 _vto_0 (<{StdInt.+_6}> i_1 1) (Data.Maybe.Just (_Tuple2 ibest_3_0 abest_3_1)) ds_1_1) ) ) ) ) 
iTasks.UI.Layout.activeIndex_111 !_vto_0 !parts_1 = iTasks.UI.Layout.find_108 _vto_0 0 Data.Maybe.Nothing parts_1
iTasks.UI.Layout.later_986::B !_vto_0 !a_1 b_2 = <{iTasks.UI.Layout._c;292;21_1052}> (_Tuple2 (<{iTasks.UI.Layout.get`_982}> "lastfocus" a_1) (<{iTasks.UI.Layout.get`_983}> "lastfocus" b_2)) _vto_0
<{iTasks.UI.Layout._c;292;21_1052}>::B !_x_0 _vto_1 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_0 (Data.Maybe.Just fa_2_0 -> case _x_1_1 (Data.Maybe.Just fb_3_0 -> <{StdInt.<_17}> (StdInt.toInt_23 fb_3_0) (select _vto_1::<{StdOverloaded.toInt;}> 0 fa_2_0)) (Data.Maybe.Nothing -> True) ) ) (_ -> False)
iTasks.UI.Layout.later_987::B !a_0 b_1 = <{iTasks.UI.Layout._c;292;21_1053}> (_Tuple2 (<{iTasks.UI.Layout.get`_982}> "lastfocus" a_0) (<{iTasks.UI.Layout.get`_983}> "lastfocus" b_1))
<{iTasks.UI.Layout._c;292;21_1053}>::B !_x_0 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_0 (Data.Maybe.Just fa_2_0 -> case _x_1_1 (Data.Maybe.Just fb_3_0 -> <{StdInt.<_17}> (StdInt.toInt_23 fb_3_0) (StdInt.toInt_23 fa_2_0)) (Data.Maybe.Nothing -> True) ) ) (_ -> False)
iTasks.UI.Layout.find_985 i_0::I best_1 !_x_2 = case _x_2 (_predefined._Nil -> Data.Maybe.fmap_12 iTasks.UI.Layout.fst_183 best_1) (_predefined._Cons _x_1_0 ds_1_1 -> case best_1 (Data.Maybe.Nothing -> case _x_1_0 (_Tuple2 _x_3_0 acur_3_1 -> iTasks.UI.Layout.find_985 (<{StdInt.+_6}> i_0 1) (Data.Maybe.Just (_Tuple2 i_0 acur_3_1)) ds_1_1) ) (Data.Maybe.Just _x_2_0 -> case _x_2_0 (_Tuple2 ibest_3_0 abest_3_1 -> case _x_1_0 (_Tuple2 _x_4_0 acur_4_1 -> case (iTasks.UI.Layout.later_987 acur_4_1 abest_3_1) (True -> iTasks.UI.Layout.find_985 (<{StdInt.+_6}> i_0 1) (Data.Maybe.Just (_Tuple2 i_0 acur_4_1)) ds_1_1) (False -> iTasks.UI.Layout.find_985 (<{StdInt.+_6}> i_0 1) (Data.Maybe.Just (_Tuple2 ibest_3_0 abest_3_1)) ds_1_1) ) ) ) ) 
iTasks.UI.Layout.activeIndex_984 !parts_0 = iTasks.UI.Layout.find_985 0 Data.Maybe.Nothing parts_0
iTasks.UI.Layout.arrange_110 blocks_0 actions_1 = let parts_1_0 = <{iTasks.UI.Layout.c;277;55_107}> blocks_0 in iTasks.UI.Definition._UIBlock Data.Map.newMap (update (iTasks.UI.Definition.defaultItemsOpts (_predefined._Cons (iTasks.UI.Definition.UITabSet iTasks.UI.Definition.defaultSizeOpts (iTasks.UI.Definition._UITabSetOpts (StdList.map iTasks.UI.Layout.fst_187 parts_1_0) (iTasks.UI.Layout.activeIndex_984 parts_1_0))) _predefined._Nil))::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical]) iTasks.UI.Definition.defaultSizeOpts actions_1 _predefined._Nil
iTasks.UI.Layout.arrangeWithTabs = iTasks.UI.Layout.arrange_110
iTasks.UI.Layout.toGenericUISide_213 !x_0 = case x_0 (iTasks.UI.Definition.TopSide -> StdGeneric.OBJECT (StdGeneric.LEFT (StdGeneric.LEFT (StdGeneric.CONS StdGeneric.UNIT)))) (iTasks.UI.Definition.RightSide -> StdGeneric.OBJECT (StdGeneric.LEFT (StdGeneric.RIGHT (StdGeneric.CONS StdGeneric.UNIT)))) (iTasks.UI.Definition.BottomSide -> StdGeneric.OBJECT (StdGeneric.RIGHT (StdGeneric.LEFT (StdGeneric.CONS StdGeneric.UNIT)))) (iTasks.UI.Definition.LeftSide -> StdGeneric.OBJECT (StdGeneric.RIGHT (StdGeneric.RIGHT (StdGeneric.CONS StdGeneric.UNIT)))) 
iTasks.UI.Layout.gEq_UISide_145::B x1_0 x2_1 = GenEq.gEq_OBJECT_13 (GenEq.gEq_EITHER_9 (GenEq.gEq_EITHER_9 (GenEq.gEq_CONS_10 GenEq.gEq_UNIT_7) (GenEq.gEq_CONS_10 GenEq.gEq_UNIT_7)) (GenEq.gEq_EITHER_9 (GenEq.gEq_CONS_10 GenEq.gEq_UNIT_7) (GenEq.gEq_CONS_10 GenEq.gEq_UNIT_7))) (iTasks.UI.Layout.toGenericUISide_213 x1_0) (iTasks.UI.Layout.toGenericUISide_213 x2_1)
iTasks.UI.Layout.arrange_112 resize_0::B size_1::I side_2 index_3::I !_x_4 actions_5 = case _x_4 (_predefined._Nil -> iTasks.UI.Layout.autoLayoutBlocks _predefined._Nil actions_5) (_ -> case (StdBool.not (<{StdInt.<_17}> index_3 (StdList.length_47 _x_4))) (True -> iTasks.UI.Layout.autoLayoutBlocks _x_4 actions_5) (False -> let uis_2_0 = StdList.removeAt index_3 _x_4, restPart_2_1 = <{iTasks.UI.Layout._c;309;22_1054}> uis_2_0, _x_2_2 = iTasks.UI.Layout.blockToControl restPart_2_1, sidePart_2_3 = <{StdList.!!}> _x_4 index_3, _x_2_4 = iTasks.UI.Layout.blockToControl sidePart_2_3, restC_2_5 = select _x_2_2::_Tuple4 0, sideC_2_6 = select _x_2_4::_Tuple4 0 in iTasks.UI.Definition._UIBlock (iTasks.UI.Layout.mergeAttributes (select _x_2_2::_Tuple4 1) (select _x_2_4::_Tuple4 1)) (update (iTasks.UI.Definition.defaultItemsOpts (<{iTasks.UI.Layout._if;317;60_1064}> (iTasks.UI.Layout._f1055_1055 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_2 iTasks.UI.Definition.TopSide) side_2) resize_0 side_2 size_1 sideC_2_6 restC_2_5))::iTasks.UI.Definition._UIItemsOpts [1:<{iTasks.UI.Layout._if;318;42_1066}> (iTasks.UI.Layout._f1065_1065 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_2 iTasks.UI.Definition.TopSide) side_2)]) iTasks.UI.Definition.defaultSizeOpts (<{StdList.++}> actions_5 (<{StdList.++}> (select _x_2_2::_Tuple4 2) (select _x_2_4::_Tuple4 2))) (<{StdList.++}> (select _x_2_2::_Tuple4 3) (select _x_2_4::_Tuple4 3))) )
<{iTasks.UI.Layout._if;318;42_1066}> !_x_0::B = case _x_0 (True -> iTasks.UI.Definition.Vertical) (_ -> iTasks.UI.Definition.Horizontal)
iTasks.UI.Layout._f1065_1065::B !_x_0::B side_1 = case _x_0 (True -> True) (_ -> <{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_1 iTasks.UI.Definition.BottomSide)
<{iTasks.UI.Layout._if;317;60_1064}> !_x_0::B !resize_1::B side_2 size_3::I sideC_4 restC_5 = case _x_0 (True -> case resize_1 (True -> _predefined._Cons (<{iTasks.UI.Layout._if;314;19_1057}> (iTasks.UI.Layout._f1056_1056 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_2 iTasks.UI.Definition.TopSide) side_2) size_3 sideC_4) (_predefined._Cons iTasks.UI.Definition.UISplitter (_predefined._Cons (iTasks.UI.Definition.fill restC_5) _predefined._Nil))) (False -> _predefined._Cons (<{iTasks.UI.Layout._if;314;19_1059}> (iTasks.UI.Layout._f1058_1058 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_2 iTasks.UI.Definition.TopSide) side_2) size_3 sideC_4) (_predefined._Cons (iTasks.UI.Definition.fill restC_5) _predefined._Nil)) ) (_ -> case resize_1 (True -> _predefined._Cons (iTasks.UI.Definition.fill restC_5) (_predefined._Cons iTasks.UI.Definition.UISplitter (_predefined._Cons (<{iTasks.UI.Layout._if;314;19_1061}> (iTasks.UI.Layout._f1060_1060 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_2 iTasks.UI.Definition.TopSide) side_2) size_3 sideC_4) _predefined._Nil))) (False -> _predefined._Cons (iTasks.UI.Definition.fill restC_5) (_predefined._Cons (<{iTasks.UI.Layout._if;314;19_1063}> (iTasks.UI.Layout._f1062_1062 (<{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_2 iTasks.UI.Definition.TopSide) side_2) size_3 sideC_4) _predefined._Nil)) )
<{iTasks.UI.Layout._if;314;19_1063}> !_x_0::B !size_1::I !sideC_2 = case _x_0 (True -> iTasks.UI.Definition.setSize iTasks.UI.Definition.FlexSize (iTasks.UI.Definition.ExactSize size_1) sideC_2) (_ -> iTasks.UI.Definition.setSize (iTasks.UI.Definition.ExactSize size_1) iTasks.UI.Definition.FlexSize sideC_2)
iTasks.UI.Layout._f1062_1062::B !_x_0::B side_1 = case _x_0 (True -> True) (_ -> <{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_1 iTasks.UI.Definition.BottomSide)
<{iTasks.UI.Layout._if;314;19_1061}> !_x_0::B !size_1::I !sideC_2 = case _x_0 (True -> iTasks.UI.Definition.setSize iTasks.UI.Definition.FlexSize (iTasks.UI.Definition.ExactSize size_1) sideC_2) (_ -> iTasks.UI.Definition.setSize (iTasks.UI.Definition.ExactSize size_1) iTasks.UI.Definition.FlexSize sideC_2)
iTasks.UI.Layout._f1060_1060::B !_x_0::B side_1 = case _x_0 (True -> True) (_ -> <{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_1 iTasks.UI.Definition.BottomSide)
<{iTasks.UI.Layout._if;314;19_1059}> !_x_0::B !size_1::I !sideC_2 = case _x_0 (True -> iTasks.UI.Definition.setSize iTasks.UI.Definition.FlexSize (iTasks.UI.Definition.ExactSize size_1) sideC_2) (_ -> iTasks.UI.Definition.setSize (iTasks.UI.Definition.ExactSize size_1) iTasks.UI.Definition.FlexSize sideC_2)
iTasks.UI.Layout._f1058_1058::B !_x_0::B side_1 = case _x_0 (True -> True) (_ -> <{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_1 iTasks.UI.Definition.BottomSide)
<{iTasks.UI.Layout._if;314;19_1057}> !_x_0::B !size_1::I !sideC_2 = case _x_0 (True -> iTasks.UI.Definition.setSize iTasks.UI.Definition.FlexSize (iTasks.UI.Definition.ExactSize size_1) sideC_2) (_ -> iTasks.UI.Definition.setSize (iTasks.UI.Definition.ExactSize size_1) iTasks.UI.Definition.FlexSize sideC_2)
iTasks.UI.Layout._f1056_1056::B !_x_0::B side_1 = case _x_0 (True -> True) (_ -> <{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_1 iTasks.UI.Definition.BottomSide)
iTasks.UI.Layout._f1055_1055::B !_x_0::B side_1 = case _x_0 (True -> True) (_ -> <{GenEq.===}> (<{iTasks.UI.Layout.gEq_s;}> iTasks.UI.Layout.gEq_UISide_145) side_1 iTasks.UI.Definition.LeftSide)
<{iTasks.UI.Layout._c;309;22_1054}> !uis_0 = case uis_0 (_predefined._Cons ui_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> ui_1_0) ) (_ -> iTasks.UI.Layout.autoLayoutBlocks uis_0 _predefined._Nil)
iTasks.UI.Layout.arrangeWithSideBar !index_0::I !side_1 !size_2::I !resize_3::B = iTasks.UI.Layout.arrange_112 resize_3 size_2 side_1 index_0
iTasks.UI.Layout.arrange_113 direction_0 resize_1::B !_x_2 actions_3 = case _x_2 (_predefined._Nil -> iTasks.UI.Layout.autoLayoutBlocks _predefined._Nil actions_3) (_ -> let _x_1_0 = Data.List.unzip4 (StdList.map iTasks.UI.Layout.blockToPanel _x_2), bcontrols_1_1 = select _x_1_0::_Tuple4 0 in iTasks.UI.Definition._UIBlock Data.Map.newMap (update (iTasks.UI.Definition.defaultItemsOpts (<{iTasks.UI.Layout._if;337;22_1067}> resize_1 bcontrols_1_1))::iTasks.UI.Definition._UIItemsOpts [1:direction_0]) iTasks.UI.Definition.defaultSizeOpts (<{StdList.++}> actions_3 (StdList.flatten (select _x_1_0::_Tuple4 2))) (StdList.flatten (select _x_1_0::_Tuple4 3)))
<{iTasks.UI.Layout._if;337;22_1067}> !resize_0::B !bcontrols_1 = case resize_0 (True -> Data.List.intersperse iTasks.UI.Definition.UISplitter (StdList.map iTasks.UI.Definition.fill bcontrols_1)) (_ -> StdList.map iTasks.UI.Definition.fill bcontrols_1)
iTasks.UI.Layout.arrangeSplit !direction_0 !resize_1::B = iTasks.UI.Layout.arrange_113 direction_0 resize_1
iTasks.UI.Layout.hjoin !items_0 = iTasks.UI.Definition.UIContainer iTasks.UI.Definition.defaultSizeOpts (update (iTasks.UI.Definition.defaultItemsOpts items_0)::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Horizontal,2:iTasks.UI.Definition.AlignLeft,3:iTasks.UI.Definition.AlignMiddle])
iTasks.UI.Layout.vjoin !items_0 = iTasks.UI.Definition.UIContainer iTasks.UI.Definition.defaultSizeOpts (update (iTasks.UI.Definition.defaultItemsOpts items_0)::iTasks.UI.Definition._UIItemsOpts [1:iTasks.UI.Definition.Vertical,2:iTasks.UI.Definition.AlignLeft,3:iTasks.UI.Definition.AlignTop])
iTasks.UI.Layout.add_121 !_x_0 item_1 items_2 = case _x_0 (Data.Maybe.Nothing -> <{StdList.++}> items_2 (_predefined._Cons item_1 _predefined._Nil)) (Data.Maybe.Just pos_1_0 -> <{StdList.++}> (StdList.take pos_1_0 items_2) (<{StdList.++}> (_predefined._Cons item_1 _predefined._Nil) (StdList.drop pos_1_0 items_2))) 
iTasks.UI.Layout.addItemToUI mb_0 item_1 !ctrl_2 = <{iTasks.UI.Layout._c;541;33_1068}> ctrl_2 mb_0 item_1
<{iTasks.UI.Layout._c;541;33_1068}> !ctrl_0 mb_1 item_2 = case ctrl_0 (iTasks.UI.Definition.UIContainer sOpts_1_0 iOpts_1_1 -> case iOpts_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> iTasks.UI.Definition.UIContainer sOpts_1_0 (update iOpts_1_1::iTasks.UI.Definition._UIItemsOpts [0:iTasks.UI.Layout.add_121 mb_1 item_2 items_2_0])) ) (iTasks.UI.Definition.UIPanel sOpts_1_0 iOpts_1_1 opts_1_2 -> case iOpts_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> iTasks.UI.Definition.UIPanel sOpts_1_0 (update iOpts_1_1::iTasks.UI.Definition._UIItemsOpts [0:iTasks.UI.Layout.add_121 mb_1 item_2 items_2_0]) opts_1_2) ) (_ -> ctrl_0)
iTasks.UI.Layout.getItemsOfUI !_x_0 = case _x_0 (iTasks.UI.Definition.UIContainer _x_1_0 _x_1_1 -> case _x_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> items_2_0) ) (iTasks.UI.Definition.UIPanel _x_1_0 _x_1_1 _x_1_2 -> case _x_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> items_2_0) ) (_ -> _predefined._Cons _x_0 _predefined._Nil)
iTasks.UI.Layout.setItemsOfUI items_0 !_x_1 = case _x_1 (iTasks.UI.Definition.UIContainer sOpts_1_0 iOpts_1_1 -> iTasks.UI.Definition.UIContainer sOpts_1_0 (update iOpts_1_1::iTasks.UI.Definition._UIItemsOpts [0:items_0])) (iTasks.UI.Definition.UIPanel sOpts_1_0 iOpts_1_1 opts_1_2 -> iTasks.UI.Definition.UIPanel sOpts_1_0 (update iOpts_1_1::iTasks.UI.Definition._UIItemsOpts [0:items_0]) opts_1_2) (_ -> _x_1)
iTasks.UI.Layout.toPanel !ctrl_0 = case ctrl_0 (iTasks.UI.Definition.UIPanel _x_1_0 _x_1_1 _x_1_2 -> ctrl_0) (iTasks.UI.Definition.UIContainer sOpts_1_0 iOpts_1_1 -> iTasks.UI.Definition.UIPanel sOpts_1_0 iOpts_1_1 (iTasks.UI.Definition._UIPanelOpts Data.Maybe.Nothing False Data.Maybe.Nothing Data.Maybe.Nothing)) (_ -> iTasks.UI.Definition.defaultPanel (_predefined._Cons ctrl_0 _predefined._Nil))
iTasks.UI.Layout.toContainer !ctrl_0 = case ctrl_0 (iTasks.UI.Definition.UIContainer _x_1_0 _x_1_1 -> ctrl_0) (iTasks.UI.Definition.UIPanel sOpts_1_0 iOpts_1_1 _x_1_2 -> iTasks.UI.Definition.UIContainer sOpts_1_0 iOpts_1_1) (_ -> iTasks.UI.Definition.defaultContainer (_predefined._Cons ctrl_0 _predefined._Nil))
<{iTasks.UI.Layout.c;709;65_140}> f_0 !g_l_1 = <{iTasks.UI.Layout.g_c1;709;74_1070}> g_l_1 f_0
<{iTasks.UI.Layout.g_c1;709;74_1070}> !g_l_0 f_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.UI.Layout.g_c2;709;74_1069}> g_h_1_0 f_1 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.g_c2;709;74_1069}> !g_h_0 f_1 g_t_2 = case g_h_0 (_Tuple2 c_1_0 a_1_1 -> _predefined._Cons (_Tuple2 (f_1 c_1_0) a_1_1) (<{iTasks.UI.Layout.c;709;65_140}> f_1 g_t_2)) (_ -> <{iTasks.UI.Layout.c;709;65_140}> f_1 g_t_2)
iTasks.UI.Layout.tweakUI f_0 !_x_1 = case _x_1 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm stack_2_0 -> case stack_2_0 (iTasks.UI.Definition._UIForm attributes_3_0 controls_3_1 size_3_2 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIForm (update stack_2_0::iTasks.UI.Definition._UIForm [1:<{iTasks.UI.Layout.c;709;65_140}> f_0 controls_3_1])) windows_1_1) ) (iTasks.UI.Definition.UIBlock sub_2_0 -> case sub_2_0 (iTasks.UI.Definition._UIBlock attributes_3_0 content_3_1 size_3_2 actions_3_3 hotkeys_3_4 -> case content_3_1 (iTasks.UI.Definition._UIItemsOpts items_4_0 direction_4_1 halign_4_2 valign_4_3 padding_4_4 baseCls_4_5 bodyCls_4_6 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update sub_2_0::iTasks.UI.Definition._UIBlock [1:update content_3_1::iTasks.UI.Definition._UIItemsOpts [0:StdList.map f_0 items_4_0]])) windows_1_1) ) ) (iTasks.UI.Definition.UIFinal _x_2_0 -> case _x_2_0 (iTasks.UI.Definition.UIViewport iOpts_3_0 opts_3_1 -> case iOpts_3_0 (iTasks.UI.Definition._UIItemsOpts items_4_0 direction_4_1 halign_4_2 valign_4_3 padding_4_4 baseCls_4_5 bodyCls_4_6 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal (iTasks.UI.Definition.UIViewport (update iOpts_3_0::iTasks.UI.Definition._UIItemsOpts [0:StdList.map f_0 items_4_0]) opts_3_1)) windows_1_1) ) ) ) (_ -> _x_1)
iTasks.UI.Layout.tweakAttr f_0 !_x_1 = case _x_1 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm stack_2_0 -> case stack_2_0 (iTasks.UI.Definition._UIForm attributes_3_0 controls_3_1 size_3_2 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIForm (update stack_2_0::iTasks.UI.Definition._UIForm [0:f_0 attributes_3_0])) windows_1_1) ) (iTasks.UI.Definition.UIBlock sub_2_0 -> case sub_2_0 (iTasks.UI.Definition._UIBlock attributes_3_0 content_3_1 size_3_2 actions_3_3 hotkeys_3_4 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update sub_2_0::iTasks.UI.Definition._UIBlock [0:f_0 attributes_3_0])) windows_1_1) ) ) (_ -> _x_1)
iTasks.UI.Layout.fst_189 !tuple_0 = select tuple_0::_Tuple2 0
iTasks.UI.Layout.fst_188 !tuple_0 = select tuple_0::_Tuple2 0
<{iTasks.UI.Layout.c;727;120_141}> !g_l_0 = <{iTasks.UI.Layout.g_c1;727;125_1071}> g_l_0
<{iTasks.UI.Layout.g_c1;727;125_1071}> !g_l_0 = case g_l_0 (_predefined._Cons c_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 c_1_0 Data.Map.newMap) (<{iTasks.UI.Layout.c;727;120_141}> g_t_1_1)) (_ -> _predefined._Nil)
<{iTasks.UI.Layout.c;729;105_142}> !g_l_0 = <{iTasks.UI.Layout.g_c1;729;110_1072}> g_l_0
<{iTasks.UI.Layout.g_c1;729;110_1072}> !g_l_0 = case g_l_0 (_predefined._Cons c_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 c_1_0 Data.Map.newMap) (<{iTasks.UI.Layout.c;729;105_142}> g_t_1_1)) (_ -> _predefined._Nil)
iTasks.UI.Layout.tweakControls f_0 !_x_1 = case _x_1 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm stack_2_0 -> case stack_2_0 (iTasks.UI.Definition._UIForm attributes_3_0 controls_3_1 size_3_2 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIForm (update stack_2_0::iTasks.UI.Definition._UIForm [1:f_0 controls_3_1])) windows_1_1) ) (iTasks.UI.Definition.UIBlock sub_2_0 -> case sub_2_0 (iTasks.UI.Definition._UIBlock attributes_3_0 content_3_1 size_3_2 actions_3_3 hotkeys_3_4 -> case content_3_1 (iTasks.UI.Definition._UIItemsOpts items_4_0 direction_4_1 halign_4_2 valign_4_3 padding_4_4 baseCls_4_5 bodyCls_4_6 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (update sub_2_0::iTasks.UI.Definition._UIBlock [1:update content_3_1::iTasks.UI.Definition._UIItemsOpts [0:StdList.map iTasks.UI.Layout.fst_188 (f_0 (<{iTasks.UI.Layout.c;727;120_141}> items_4_0))]])) windows_1_1) ) ) (iTasks.UI.Definition.UIFinal _x_2_0 -> case _x_2_0 (iTasks.UI.Definition.UIViewport iOpts_3_0 opts_3_1 -> case iOpts_3_0 (iTasks.UI.Definition._UIItemsOpts items_4_0 direction_4_1 halign_4_2 valign_4_3 padding_4_4 baseCls_4_5 bodyCls_4_6 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIFinal (iTasks.UI.Definition.UIViewport (update iOpts_3_0::iTasks.UI.Definition._UIItemsOpts [0:StdList.map iTasks.UI.Layout.fst_189 (f_0 (<{iTasks.UI.Layout.c;729;105_142}> items_4_0))]) opts_3_1)) windows_1_1) ) ) ) (_ -> _x_1)
iTasks.UI.Layout.forceLayout !_x_0 = case _x_0 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm form_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.autoLayoutForm form_2_0)) windows_1_1) (iTasks.UI.Definition.UIBlocks blocks_2_0 actions_2_1 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (iTasks.UI.Layout.autoLayoutBlocks blocks_2_0 actions_2_1)) windows_1_1) ) (_ -> _x_0)
iTasks.UI.Layout.arrangeBlocks f_0 !_x_1 = case _x_1 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm form_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (f_0 (_predefined._Cons (iTasks.UI.Layout.autoLayoutForm form_2_0) _predefined._Nil) _predefined._Nil)) windows_1_1) (iTasks.UI.Definition.UIBlock block_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (f_0 (_predefined._Cons block_2_0 _predefined._Nil) _predefined._Nil)) windows_1_1) (iTasks.UI.Definition.UIBlocks blocks_2_0 actions_2_1 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIBlock (f_0 blocks_2_0 actions_2_1)) windows_1_1) ) (_ -> _x_1)
<{iTasks.UI.Layout.get`_191}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_191}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_191}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_190}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_190}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_190}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.windowOpts_118 hpos_0 vpos_1 !windowType_2 !iconCls_3 !title_4 !hotkeys_5 !menus_6 !close_7 = iTasks.UI.Definition._UIWindowOpts windowType_2 title_4 iconCls_3 (<{iTasks.UI.Layout._if;419;72_1073}> (StdList.isEmpty menus_6) menus_6) (<{iTasks.UI.Layout._if;420;34_1074}> (StdList.isEmpty hotkeys_5) hotkeys_5) (Data.Maybe.Just vpos_1) (Data.Maybe.Just hpos_0) Data.Maybe.Nothing close_7
<{iTasks.UI.Layout._if;420;34_1074}> !_x_0::B hotkeys_1 = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just hotkeys_1)
<{iTasks.UI.Layout._if;419;72_1073}> !_x_0::B menus_1 = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just menus_1)
iTasks.UI.Layout.anon_117 !icon_0 = <{StdString.+++_11}> "icon-" icon_0
<{iTasks.UI.Layout.get`_989}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_989}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_989}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_988}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_988}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_988}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.blockToWindow !windowType_0 vpos_1 hpos_2 !_x_3 = case _x_3 (iTasks.UI.Definition._UIBlock attributes_1_0 content_1_1 size_1_2 actions_1_3 hotkeys_1_4 -> case content_1_1 (iTasks.UI.Definition._UIItemsOpts items_2_0 direction_2_1 halign_2_2 valign_2_3 padding_2_4 baseCls_2_5 bodyCls_2_6 -> let _x_3_0 = iTasks.UI.Layout.actionsToCloseId actions_1_3, _x_3_1 = iTasks.UI.Layout.actionsToButtons (select _x_3_0::_Tuple2 1), _x_3_2 = iTasks.UI.Layout.addButtonPanel attributes_1_0 direction_2_1 (select _x_3_1::_Tuple3 0) items_2_0, _x_3_3 = iTasks.UI.Layout.actionsToMenus (select _x_3_1::_Tuple3 2) in iTasks.UI.Definition.UIWindow (update size_1_2::iTasks.UI.Definition._UISizeOpts [0:Data.Maybe.Just (Data.Maybe.fromMaybe iTasks.UI.Definition.WrapSize (select size_1_2::iTasks.UI.Definition._UISizeOpts 0)),3:Data.Maybe.Just (Data.Maybe.fromMaybe iTasks.UI.Definition.WrapSize (select size_1_2::iTasks.UI.Definition._UISizeOpts 3))]) (update content_1_1::iTasks.UI.Definition._UIItemsOpts [0:select _x_3_2::_Tuple2 0,1:select _x_3_2::_Tuple2 1]) (iTasks.UI.Layout.windowOpts_118 hpos_2 vpos_1 windowType_0 (Data.Maybe.fmap_12 iTasks.UI.Layout.anon_117 (<{iTasks.UI.Layout.get`_989}> "icon" attributes_1_0)) (<{iTasks.UI.Layout.get`_988}> "title" attributes_1_0) (<{StdList.++}> (select _x_3_1::_Tuple3 1) (select _x_3_3::_Tuple3 1)) (select _x_3_3::_Tuple3 0) (select _x_3_0::_Tuple2 0))) ) 
iTasks.UI.Layout.uiDefToWindow windowType_0 vpos_1 hpos_2 !_x_3 = case _x_3 (iTasks.UI.Definition._UIDef _x_1_0 windows_1_1 -> case _x_1_0 (iTasks.UI.Definition.UIForm form_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIEmpty (iTasks.UI.Definition._UIEmpty _predefined._Nil)) (_predefined._Cons (iTasks.UI.Layout.blockToWindow windowType_0 vpos_1 hpos_2 (iTasks.UI.Layout.autoLayoutForm form_2_0)) windows_1_1)) (iTasks.UI.Definition.UIBlock block_2_0 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIEmpty (iTasks.UI.Definition._UIEmpty _predefined._Nil)) (_predefined._Cons (iTasks.UI.Layout.blockToWindow windowType_0 vpos_1 hpos_2 block_2_0) windows_1_1)) (iTasks.UI.Definition.UIBlocks blocks_2_0 actions_2_1 -> iTasks.UI.Definition._UIDef (iTasks.UI.Definition.UIEmpty (iTasks.UI.Definition._UIEmpty _predefined._Nil)) (_predefined._Cons (iTasks.UI.Layout.blockToWindow windowType_0 vpos_1 hpos_2 (iTasks.UI.Layout.autoLayoutBlocks blocks_2_0 actions_2_1)) windows_1_1)) ) (_ -> _x_3)
<{iTasks.UI.Layout.get`_192}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_192}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_192}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_990}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_990}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_990}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.hasWindowContainerAttr::B !attributes_0 = Data.Maybe.maybe False (<{StdString.==_2}> "window") (<{iTasks.UI.Layout.get`_990}> "container" attributes_0)
<{iTasks.UI.Layout.get`_193}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_193}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_193}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_991}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_991}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_991}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.hasPanelContainerAttr::B !attributes_0 = Data.Maybe.maybe False (<{StdString.==_2}> "panel") (<{iTasks.UI.Layout.get`_991}> "container" attributes_0)
<{iTasks.UI.Layout.get`_194}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_194}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_194}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_992}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_992}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_992}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.hasContainerContainerAttr::B !attributes_0 = Data.Maybe.maybe False (<{StdString.==_2}> "container") (<{iTasks.UI.Layout.get`_992}> "container" attributes_0)
<{iTasks.UI.Layout.get`_195}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.UI.Layout.get`_195}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.UI.Layout.get`_195}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.UI.Layout.get`_993}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.UI.Layout.get`_993}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.UI.Layout.get`_993}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.UI.Layout.hasContainerAttr::B !attributes_0 = Data.Maybe.isJust (<{iTasks.UI.Layout.get`_993}> "container" attributes_0)
iTasks.UI.Layout.singleControl::B def_0 = <{iTasks.UI.Layout._c;696;22_1075}> (iTasks.UI.Definition.uiDefControls def_0)
<{iTasks.UI.Layout._c;696;22_1075}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> True) ) (_ -> False)
iTasks.UI.Layout.tune_35 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ToWindow windowType_1_0 vpos_1_1 hpos_1_2 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.uiDefToWindow windowType_1_0 vpos_1_1 hpos_1_2)) t_1) 
iTasks.UI.Layout.anon_196 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_994 _x_0 _x_1 g_2 x_3 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_995 _x_0 _x_1 x_2 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (iTasks.UI.Layout.forceLayout x_2)
iTasks.UI.Layout.tune_36 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.InPanel -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.anon_995 "container" "panel")) t_1) 
iTasks.UI.Layout.anon_197 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_996 _x_0 _x_1 g_2 x_3 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_997 _x_0 _x_1 x_2 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (iTasks.UI.Layout.forceLayout x_2)
iTasks.UI.Layout.tune_37 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.InContainer -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.anon_997 "container" "container")) t_1) 
iTasks.UI.Layout.anon_198 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_998 _x_0 _x_1 g_2 x_3 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_999 _x_0 _x_1 x_2 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (iTasks.UI.Layout.forceLayout x_2)
iTasks.UI.Layout.tune_38 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.FullScreen -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.anon_999 "screen" "full")) t_1) 
iTasks.UI.Layout.anon_199 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_1000 _x_0 _x_1 g_2 x_3 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_1001 _x_0 _x_1 x_2 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (iTasks.UI.Layout.forceLayout x_2)
iTasks.UI.Layout.tune_39 !_x_0 !t_1 = case _x_0 (iTasks.API.Core.Types.Title title_1_0 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.anon_1001 "title" title_1_0)) t_1) 
iTasks.UI.Layout.anon_143 label_0 !_x_1 = case _x_1 (_Tuple2 c_1_0 a_1_1 -> _Tuple2 c_1_0 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) "label" label_0 a_1_1)) 
iTasks.UI.Layout.tune_40 !_x_0 !t_1 = case _x_0 (iTasks.API.Core.Types.Label label_1_0 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.tweakControls (StdList.map (iTasks.UI.Layout.anon_143 label_1_0)))) t_1) 
iTasks.UI.Layout.anon_200 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_1002 _x_0 _x_1 g_2 x_3 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_1003 _x_0 _x_1 x_2 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (iTasks.UI.Layout.forceLayout x_2)
iTasks.UI.Layout.tune_41 !_x_0 !t_1 = case _x_0 (iTasks.API.Core.Types.Icon icon_1_0 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.anon_1003 "icon" icon_1_0)) t_1) 
iTasks.UI.Layout.anon_201 !f_0 g_1 x_2 = f_0 (g_1 x_2)
iTasks.UI.Layout.anon_1004 _x_0 _x_1 g_2 x_3 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (g_2 x_3)
iTasks.UI.Layout.anon_1005 _x_0 _x_1 x_2 = iTasks.UI.Definition.uiDefSetAttribute _x_0 _x_1 (iTasks.UI.Layout.forceLayout x_2)
iTasks.UI.Layout.tune_42 !_x_0 !t_1 = case _x_0 (iTasks.API.Core.Types.Attribute k_1_0 v_1_1 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.anon_1005 k_1_0 v_1_1)) t_1) 
<{iTasks.UI.Layout.eval`_144}> !eval_0 event_1 repOpts_2 state_3 iworld_4 = eval_0 event_1 (update repOpts_2::iTasks._Framework.Task._TaskEvalOpts [2:True]) state_3 iworld_4
iTasks.UI.Layout.tune_43 !_x_0 !_x_1 = case _x_0 (iTasks.UI.Layout.NoUserInterface -> case _x_1 (iTasks._Framework.Task.Task eval_2_0 -> iTasks._Framework.Task.Task (<{iTasks.UI.Layout.eval`_144}> eval_2_0)) ) 
iTasks.UI.Layout.tune_44 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ForceLayout -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout iTasks.UI.Layout.forceLayout) t_1) 
iTasks.UI.Layout.tune_45 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ArrangeVertical -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.arrangeBlocks iTasks.UI.Layout.arrangeVertical)) t_1) 
iTasks.UI.Layout.tune_46 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ArrangeHorizontal -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.arrangeBlocks iTasks.UI.Layout.arrangeHorizontal)) t_1) 
iTasks.UI.Layout.tune_47 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ArrangeWithTabs -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.arrangeBlocks iTasks.UI.Layout.arrangeWithTabs)) t_1) 
iTasks.UI.Layout.tune_48 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ArrangeWithSideBar index_1_0 side_1_1 size_1_2 resize_1_3 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.arrangeBlocks (iTasks.UI.Layout.arrangeWithSideBar index_1_0 side_1_1 size_1_2 resize_1_3))) t_1) 
iTasks.UI.Layout.tune_49 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ArrangeSplit direction_1_0 resize_1_1 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.arrangeBlocks (iTasks.UI.Layout.arrangeSplit direction_1_0 resize_1_1))) t_1) 
iTasks.UI.Layout.tune_50 !_x_0 !t_1 = case _x_0 (iTasks.UI.Layout.ArrangeCustom f_1_0 -> iTasks.API.Core.TaskCombinators.tune_13 (iTasks.UI.Layout.AfterLayout (iTasks.UI.Layout.arrangeBlocks f_1_0)) t_1) 
<{iTasks.UI.Layout.TD;LayoutRules}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;UIFormCombinator}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;UIBlocksCombinator}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;SetLayout}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;AfterLayout}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ModifyLayout}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;SetValueAttribute}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ToWindow}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;InPanel}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;InContainer}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;FullScreen}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;NoUserInterface}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ForceLayout}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ArrangeVertical}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ArrangeHorizontal}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ArrangeWithTabs}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ArrangeWithSideBar}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ArrangeSplit}> _x_0::B = _predefined._Nil
<{iTasks.UI.Layout.TD;ArrangeCustom}> _x_0::B = _predefined._Nil

:: iTasks.UI.Layout.SetLayout = iTasks.UI.Layout.SetLayout a1
:: iTasks.UI.Layout.AfterLayout = iTasks.UI.Layout.AfterLayout a1
:: iTasks.UI.Layout.ModifyLayout = iTasks.UI.Layout.ModifyLayout a1
:: iTasks.UI.Layout.SetValueAttribute = iTasks.UI.Layout.SetValueAttribute !a1 a2
:: iTasks.UI.Layout.ToWindow = iTasks.UI.Layout.ToWindow a1 a2 a3
:: iTasks.UI.Layout.InPanel = iTasks.UI.Layout.InPanel
:: iTasks.UI.Layout.InContainer = iTasks.UI.Layout.InContainer
:: iTasks.UI.Layout.FullScreen = iTasks.UI.Layout.FullScreen
:: iTasks.UI.Layout.NoUserInterface = iTasks.UI.Layout.NoUserInterface
:: iTasks.UI.Layout.ForceLayout = iTasks.UI.Layout.ForceLayout
:: iTasks.UI.Layout.ArrangeVertical = iTasks.UI.Layout.ArrangeVertical
:: iTasks.UI.Layout.ArrangeHorizontal = iTasks.UI.Layout.ArrangeHorizontal
:: iTasks.UI.Layout.ArrangeWithTabs = iTasks.UI.Layout.ArrangeWithTabs
:: iTasks.UI.Layout.ArrangeWithSideBar = iTasks.UI.Layout.ArrangeWithSideBar !a1::I !a2 !a3::I !a4::B
:: iTasks.UI.Layout.ArrangeSplit = iTasks.UI.Layout.ArrangeSplit !a1 !a2::B
:: iTasks.UI.Layout.ArrangeCustom = iTasks.UI.Layout.ArrangeCustom a1

|| Converted Records
:: iTasks.UI.Layout._LayoutRules = {iTasks.UI.Layout.accuInteract, iTasks.UI.Layout.accuStep, iTasks.UI.Layout.accuParallel, iTasks.UI.Layout.accuWorkOn, iTasks.UI.Layout.layoutSubEditor, iTasks.UI.Layout.layoutForm, iTasks.UI.Layout.layoutBlocks}

:: <{iTasks.UI.Layout.JSONEncode_s;}> = {!iTasks.UI.Layout.JSONEncode_s}

:: <{iTasks.UI.Layout.JSONEncode_ss;}> = {!iTasks.UI.Layout.JSONEncode_ss}

:: <{iTasks.UI.Layout.JSONEncode_sss;}> = {!iTasks.UI.Layout.JSONEncode_sss}

:: <{iTasks.UI.Layout.JSONDecode_s;}> = {!iTasks.UI.Layout.JSONDecode_s}

:: <{iTasks.UI.Layout.JSONDecode_ss;}> = {!iTasks.UI.Layout.JSONDecode_ss}

:: <{iTasks.UI.Layout.JSONDecode_sss;}> = {!iTasks.UI.Layout.JSONDecode_sss}

:: <{iTasks.UI.Layout.gDefault_s;}> = {iTasks.UI.Layout.gDefault_s}

:: <{iTasks.UI.Layout.gDefault_ss;}> = {iTasks.UI.Layout.gDefault_ss}

:: <{iTasks.UI.Layout.gDefault_sss;}> = {iTasks.UI.Layout.gDefault_sss}

:: <{iTasks.UI.Layout.gUpdate_s;}> = {!iTasks.UI.Layout.gUpdate_s}

:: <{iTasks.UI.Layout.gUpdate_ss;}> = {!iTasks.UI.Layout.gUpdate_ss}

:: <{iTasks.UI.Layout.gUpdate_sss;}> = {!iTasks.UI.Layout.gUpdate_sss}

:: <{iTasks.UI.Layout.gVerify_s;}> = {!iTasks.UI.Layout.gVerify_s}

:: <{iTasks.UI.Layout.gVerify_ss;}> = {!iTasks.UI.Layout.gVerify_ss}

:: <{iTasks.UI.Layout.gVerify_sss;}> = {!iTasks.UI.Layout.gVerify_sss}

:: <{iTasks.UI.Layout.gText_s;}> = {!iTasks.UI.Layout.gText_s}

:: <{iTasks.UI.Layout.gText_ss;}> = {!iTasks.UI.Layout.gText_ss}

:: <{iTasks.UI.Layout.gText_sss;}> = {!iTasks.UI.Layout.gText_sss}

:: <{iTasks.UI.Layout.gEditor_s;}> = {!iTasks.UI.Layout.gEditor_s}

:: <{iTasks.UI.Layout.gEditor_ss;}> = {!iTasks.UI.Layout.gEditor_ss}

:: <{iTasks.UI.Layout.gEditor_sss;}> = {!iTasks.UI.Layout.gEditor_sss}

:: <{iTasks.UI.Layout.gEditMeta_s;}> = {!iTasks.UI.Layout.gEditMeta_s}

:: <{iTasks.UI.Layout.gEditMeta_ss;}> = {!iTasks.UI.Layout.gEditMeta_ss}

:: <{iTasks.UI.Layout.gEditMeta_sss;}> = {!iTasks.UI.Layout.gEditMeta_sss}

:: <{iTasks.UI.Layout.gEq_s;}> = {!iTasks.UI.Layout.gEq_s}

:: <{iTasks.UI.Layout.gEq_ss;}> = {!iTasks.UI.Layout.gEq_ss}

:: <{iTasks.UI.Layout.gEq_sss;}> = {!iTasks.UI.Layout.gEq_sss}

:: <{iTasks.UI.Layout.JSONEncode_ssss;}> = {!iTasks.UI.Layout.JSONEncode_ssss}

:: <{iTasks.UI.Layout.JSONDecode_ssss;}> = {!iTasks.UI.Layout.JSONDecode_ssss}

:: <{iTasks.UI.Layout.gEq_ssss;}> = {!iTasks.UI.Layout.gEq_ssss}

:: <{iTasks.UI.Layout.gDefault_ssss;}> = {iTasks.UI.Layout.gDefault_ssss}

:: <{iTasks.UI.Layout.JSONEncode_sssss;}> = {!iTasks.UI.Layout.JSONEncode_sssss}

:: <{iTasks.UI.Layout.JSONEncode_ssssss;}> = {!iTasks.UI.Layout.JSONEncode_ssssss}

:: <{iTasks.UI.Layout.JSONEncode_sssssss;}> = {!iTasks.UI.Layout.JSONEncode_sssssss}

:: <{iTasks.UI.Layout.JSONEncode_ssssssss;}> = {!iTasks.UI.Layout.JSONEncode_ssssssss}

:: <{iTasks.UI.Layout.JSONEncode_sssssssss;}> = {!iTasks.UI.Layout.JSONEncode_sssssssss}

:: <{iTasks.UI.Layout.JSONDecode_sssss;}> = {!iTasks.UI.Layout.JSONDecode_sssss}

:: <{iTasks.UI.Layout.JSONDecode_ssssss;}> = {!iTasks.UI.Layout.JSONDecode_ssssss}

:: <{iTasks.UI.Layout.JSONDecode_sssssss;}> = {!iTasks.UI.Layout.JSONDecode_sssssss}

:: <{iTasks.UI.Layout.JSONDecode_ssssssss;}> = {!iTasks.UI.Layout.JSONDecode_ssssssss}

:: <{iTasks.UI.Layout.JSONDecode_sssssssss;}> = {!iTasks.UI.Layout.JSONDecode_sssssssss}

:: <{iTasks.UI.Layout.bimap_s;}> = {iTasks.UI.Layout.bimap_s}

:: <{iTasks.UI.Layout.bimap_ss;}> = {iTasks.UI.Layout.bimap_ss}

:: <{iTasks.UI.Layout.bimap_sss;}> = {iTasks.UI.Layout.bimap_sss}

:: <{iTasks.UI.Layout.gEq_sssss;}> = {!iTasks.UI.Layout.gEq_sssss}

:: <{iTasks.UI.Layout.gEq_ssssss;}> = {!iTasks.UI.Layout.gEq_ssssss}

:: <{iTasks.UI.Layout.gEq_sssssss;}> = {!iTasks.UI.Layout.gEq_sssssss}

:: <{iTasks.UI.Layout.gEq_ssssssss;}> = {!iTasks.UI.Layout.gEq_ssssssss}

:: <{iTasks.UI.Layout.gEq_sssssssss;}> = {!iTasks.UI.Layout.gEq_sssssssss}

:: <{iTasks.UI.Layout.gEditor_ssss;}> = {!iTasks.UI.Layout.gEditor_ssss}

:: <{iTasks.UI.Layout.gText_ssss;}> = {!iTasks.UI.Layout.gText_ssss}

:: <{iTasks.UI.Layout.gEditMeta_ssss;}> = {!iTasks.UI.Layout.gEditMeta_ssss}

:: <{iTasks.UI.Layout.gEditor_sssss;}> = {!iTasks.UI.Layout.gEditor_sssss}

:: <{iTasks.UI.Layout.gText_sssss;}> = {!iTasks.UI.Layout.gText_sssss}

:: <{iTasks.UI.Layout.gDefault_sssss;}> = {iTasks.UI.Layout.gDefault_sssss}

:: <{iTasks.UI.Layout.gEditMeta_sssss;}> = {!iTasks.UI.Layout.gEditMeta_sssss}

:: <{iTasks.UI.Layout.gEditor_ssssss;}> = {!iTasks.UI.Layout.gEditor_ssssss}

:: <{iTasks.UI.Layout.gText_ssssss;}> = {!iTasks.UI.Layout.gText_ssssss}

:: <{iTasks.UI.Layout.gDefault_ssssss;}> = {iTasks.UI.Layout.gDefault_ssssss}

:: <{iTasks.UI.Layout.gEditMeta_ssssss;}> = {!iTasks.UI.Layout.gEditMeta_ssssss}

:: <{iTasks.UI.Layout.gEditor_sssssss;}> = {!iTasks.UI.Layout.gEditor_sssssss}

:: <{iTasks.UI.Layout.gText_sssssss;}> = {!iTasks.UI.Layout.gText_sssssss}

:: <{iTasks.UI.Layout.gDefault_sssssss;}> = {iTasks.UI.Layout.gDefault_sssssss}

:: <{iTasks.UI.Layout.gEditMeta_sssssss;}> = {!iTasks.UI.Layout.gEditMeta_sssssss}

:: <{iTasks.UI.Layout.gEditor_ssssssss;}> = {!iTasks.UI.Layout.gEditor_ssssssss}

:: <{iTasks.UI.Layout.gText_ssssssss;}> = {!iTasks.UI.Layout.gText_ssssssss}

:: <{iTasks.UI.Layout.gDefault_ssssssss;}> = {iTasks.UI.Layout.gDefault_ssssssss}

:: <{iTasks.UI.Layout.gEditMeta_ssssssss;}> = {!iTasks.UI.Layout.gEditMeta_ssssssss}

:: <{iTasks.UI.Layout.gEditor_sssssssss;}> = {!iTasks.UI.Layout.gEditor_sssssssss}

:: <{iTasks.UI.Layout.gText_sssssssss;}> = {!iTasks.UI.Layout.gText_sssssssss}

:: <{iTasks.UI.Layout.gDefault_sssssssss;}> = {iTasks.UI.Layout.gDefault_sssssssss}

:: <{iTasks.UI.Layout.gEditMeta_sssssssss;}> = {!iTasks.UI.Layout.gEditMeta_sssssssss}

:: <{iTasks.UI.Layout.gVerify_ssss;}> = {!iTasks.UI.Layout.gVerify_ssss}

:: <{iTasks.UI.Layout.gVerify_sssss;}> = {!iTasks.UI.Layout.gVerify_sssss}

:: <{iTasks.UI.Layout.gVerify_ssssss;}> = {!iTasks.UI.Layout.gVerify_ssssss}

:: <{iTasks.UI.Layout.gVerify_sssssss;}> = {!iTasks.UI.Layout.gVerify_sssssss}

:: <{iTasks.UI.Layout.gVerify_ssssssss;}> = {!iTasks.UI.Layout.gVerify_ssssssss}

:: <{iTasks.UI.Layout.gVerify_sssssssss;}> = {!iTasks.UI.Layout.gVerify_sssssssss}

:: <{iTasks.UI.Layout.gUpdate_ssss;}> = {!iTasks.UI.Layout.gUpdate_ssss}

:: <{iTasks.UI.Layout.gUpdate_sssss;}> = {!iTasks.UI.Layout.gUpdate_sssss}

:: <{iTasks.UI.Layout.gUpdate_ssssss;}> = {!iTasks.UI.Layout.gUpdate_ssssss}

:: <{iTasks.UI.Layout.gUpdate_sssssss;}> = {!iTasks.UI.Layout.gUpdate_sssssss}

:: <{iTasks.UI.Layout.gUpdate_ssssssss;}> = {!iTasks.UI.Layout.gUpdate_ssssssss}

:: <{iTasks.UI.Layout.gUpdate_sssssssss;}> = {!iTasks.UI.Layout.gUpdate_sssssssss}

:: <{iTasks.UI.Layout.gLexOrd_s;}> = {!iTasks.UI.Layout.gLexOrd_s}

:: <{iTasks.UI.Layout.gLexOrd_ss;}> = {!iTasks.UI.Layout.gLexOrd_ss}

:: <{iTasks.UI.Layout.gLexOrd_sss;}> = {!iTasks.UI.Layout.gLexOrd_sss}

:: <{iTasks.UI.Layout.gLexOrd_ssss;}> = {!iTasks.UI.Layout.gLexOrd_ssss}

:: <{iTasks.UI.Layout.gLexOrd_sssss;}> = {!iTasks.UI.Layout.gLexOrd_sssss}

:: <{iTasks.UI.Layout.gLexOrd_ssssss;}> = {!iTasks.UI.Layout.gLexOrd_ssssss}

:: <{iTasks.UI.Layout.gLexOrd_sssssss;}> = {!iTasks.UI.Layout.gLexOrd_sssssss}

:: <{iTasks.UI.Layout.gLexOrd_ssssssss;}> = {!iTasks.UI.Layout.gLexOrd_ssssssss}

:: <{iTasks.UI.Layout.gLexOrd_sssssssss;}> = {!iTasks.UI.Layout.gLexOrd_sssssssss}

