|| ?module? iTasks._Framework.TaskServer


iTasks._Framework.TaskServer.init !port_0::I !ct_1 !bt_2 !iworld_3 = case iworld_3 (iTasks._Framework.IWorld._IWorld server_1_0 config_1_1 clocks_1_2 current_1_3 random_1_4 sdsNotifyRequests_1_5 memoryShares_1_6 cachedShares_1_7 exposedShares_1_8 jsCompilerState_1_9 ioTasks_1_10 ioStates_1_11 world_1_12 resources_1_13 onClient_1_14 shutdown_1_15 -> let _x_2_0 = TCPChannels.openTCP_Listener (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) port_0 world_1_12 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> StdMisc.abort (<{StdString.+++_11}> "Error: port " (<{StdString.+++_11}> (StdString.toString_5 port_0) " already in use.\n"))) (False -> update iworld_3::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks _predefined._Nil (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance (iTasks._Framework.IWorld._ListenerInstanceOpts (iTasks.API.Core.Types.TaskId 0 0) 0 port_0 ct_1 True) (Data.Maybe.fromJust (select _x_2_0::_Tuple3 1))) (StdList.map iTasks._Framework.IWorld.BackgroundInstance bt_2)),11:Data.Map.fromList (<{StdOverloaded.==;}> <{iTasks.API.Core.Types.==_129}>) (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (_predefined._Cons (_Tuple2 (iTasks.API.Core.Types.TaskId 0 0) (iTasks._Framework.IWorld.IOActive Data.Map.newMap)) _predefined._Nil),12:select _x_2_0::_Tuple3 2]) ) 
iTasks._Framework.TaskServer.toSelectSet !_x_0 = case _x_0 (_predefined._Nil -> <{_Tuple3!7}> _predefined._Nil _predefined._Nil _predefined._Nil) (_predefined._Cons i_1_0 is_1_1 -> <{iTasks._Framework.TaskServer._c;62;7_768}> i_1_0 is_1_1) 
<{iTasks._Framework.TaskServer._c;62;7_768}> !i_0 !is_1 = case i_0 (iTasks._Framework.IWorld.ListenerInstance opts_1_0 l_1_1 -> let _x_2_0 = iTasks._Framework.TaskServer.toSelectSet is_1 in <{_Tuple3!7}> (_predefined._Cons l_1_1 (select _x_2_0::_Tuple3 0)) (select _x_2_0::_Tuple3 1) (_predefined._Cons (iTasks._Framework.TaskServer.ListenerInstanceDS opts_1_0) (select _x_2_0::_Tuple3 2))) (iTasks._Framework.IWorld.ConnectionInstance opts_1_0 _x_1_1 -> iTasks._Framework.TaskServer._f767_767 _x_1_1 is_1 opts_1_0 i_0) (_ -> <{iTasks._Framework.TaskServer._c;62;7_766}> i_0 is_1)
iTasks._Framework.TaskServer._f767_767 !_x_0 !is_1 opts_2 i_3 = case _x_0 (TCPChannelClass._DuplexChannel sChannel_1_0 rChannel_1_1 -> let _x_2_0 = iTasks._Framework.TaskServer.toSelectSet is_1 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (_predefined._Cons rChannel_1_1 (select _x_2_0::_Tuple3 1)) (_predefined._Cons (iTasks._Framework.TaskServer.ConnectionInstanceDS opts_2 sChannel_1_0) (select _x_2_0::_Tuple3 2))) (_ -> <{iTasks._Framework.TaskServer._c;62;7_766}> i_3 is_1)
<{iTasks._Framework.TaskServer._c;62;7_766}> !i_0 !is_1 = case i_0 (iTasks._Framework.IWorld.BackgroundInstance bt_1_0 -> let _x_2_0 = iTasks._Framework.TaskServer.toSelectSet is_1 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (_predefined._Cons (iTasks._Framework.TaskServer.BackgroundInstanceDS bt_1_0) (select _x_2_0::_Tuple3 2))) 
iTasks._Framework.TaskServer.ulength_14 !_x_0 = case _x_0 (_predefined._Nil -> _Tuple2 0 _predefined._Nil) (_predefined._Cons x_1_0 xs_1_1 -> let _x_2_0 = iTasks._Framework.TaskServer.ulength_14 xs_1_1 in _Tuple2 (<{StdInt.+_6}> (select _x_2_0::_Tuple2 0) 1) (_predefined._Cons x_1_0 (select _x_2_0::_Tuple2 1))) 
iTasks._Framework.TaskServer.anon_12::B !<{_v<_0}> !_x_1 !_x_2 = case _x_1 (_Tuple2 x_1_0 _x_1_1 -> case _x_2 (_Tuple2 y_2_0 _x_2_1 -> select <{_v<_0}>::<{StdOverloaded.<;}> 0 x_1_0 y_2_0) ) 
<{iTasks._Framework.TaskServer.fromSelectSet`_13}> i_0::I numListeners_1::I numSeenListeners_2::I numSeenReceivers_3::I ls_4 rs_5 _x_6 !_x_7 = case _x_7 (_predefined._Nil -> _Tuple2 _predefined._Nil _predefined._Nil) (_predefined._Cons _x_1_0 is_1_1 -> case ls_4 (_predefined._Cons l_2_0 ls_2_1 -> case _x_6 (_predefined._Nil -> case _x_1_0 (iTasks._Framework.TaskServer.ListenerInstanceDS opts_4_0 -> _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance opts_4_0 l_2_0) (select (<{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 (<{StdInt.+_6}> numSeenListeners_2 1) numSeenReceivers_3 ls_2_1 rs_5 _predefined._Nil is_1_1)::_Tuple2 0)) _predefined._Nil) ) (_predefined._Cons _x_3_0 ch_3_1 -> case _x_3_0 (_Tuple2 c_4_0 what_4_1 -> case _x_1_0 (iTasks._Framework.TaskServer.ListenerInstanceDS opts_5_0 -> case (<{StdInt.==_16}> c_4_0 numSeenListeners_2) (True -> let _x_7_0 = <{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 (<{StdInt.+_6}> numSeenListeners_2 1) numSeenReceivers_3 ls_2_1 rs_5 ch_3_1 is_1_1 in _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance opts_5_0 l_2_0) (select _x_7_0::_Tuple2 0)) (_predefined._Cons (_Tuple2 i_0 what_4_1) (select _x_7_0::_Tuple2 1))) (False -> let _x_7_0 = <{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 (<{StdInt.+_6}> numSeenListeners_2 1) numSeenReceivers_3 ls_2_1 rs_5 (_predefined._Cons (_Tuple2 c_4_0 what_4_1) ch_3_1) is_1_1 in _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance opts_5_0 l_2_0) (select _x_7_0::_Tuple2 0)) (select _x_7_0::_Tuple2 1)) ) ) ) ) (_ -> case rs_5 (_predefined._Cons rChannel_2_0 rs_2_1 -> case _x_6 (_predefined._Nil -> case _x_1_0 (iTasks._Framework.TaskServer.ConnectionInstanceDS opts_4_0 sChannel_4_1 -> _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.ConnectionInstance opts_4_0 (TCPChannelClass._DuplexChannel sChannel_4_1 rChannel_2_0)) (select (<{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 numSeenListeners_2 (<{StdInt.+_6}> numSeenReceivers_3 1) ls_4 rs_2_1 _predefined._Nil is_1_1)::_Tuple2 0)) _predefined._Nil) ) (_predefined._Cons _x_3_0 ch_3_1 -> case _x_3_0 (_Tuple2 c_4_0 what_4_1 -> case _x_1_0 (iTasks._Framework.TaskServer.ConnectionInstanceDS opts_5_0 sChannel_5_1 -> case (<{StdInt.==_16}> c_4_0 (<{StdInt.+_6}> numListeners_1 numSeenReceivers_3)) (True -> let _x_7_0 = <{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 numSeenListeners_2 (<{StdInt.+_6}> numSeenReceivers_3 1) ls_4 rs_2_1 ch_3_1 is_1_1 in _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.ConnectionInstance opts_5_0 (TCPChannelClass._DuplexChannel sChannel_5_1 rChannel_2_0)) (select _x_7_0::_Tuple2 0)) (_predefined._Cons (_Tuple2 i_0 what_4_1) (select _x_7_0::_Tuple2 1))) (False -> let _x_7_0 = <{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 numSeenListeners_2 (<{StdInt.+_6}> numSeenReceivers_3 1) ls_4 rs_2_1 (_predefined._Cons (_Tuple2 c_4_0 what_4_1) ch_3_1) is_1_1 in _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.ConnectionInstance opts_5_0 (TCPChannelClass._DuplexChannel sChannel_5_1 rChannel_2_0)) (select _x_7_0::_Tuple2 0)) (select _x_7_0::_Tuple2 1)) ) ) ) ) (_ -> case _x_1_0 (iTasks._Framework.TaskServer.BackgroundInstanceDS bt_2_0 -> let _x_3_0 = <{iTasks._Framework.TaskServer.fromSelectSet`_13}> (<{StdInt.+_6}> i_0 1) numListeners_1 numSeenListeners_2 numSeenReceivers_3 ls_4 rs_5 _x_6 is_1_1 in _Tuple2 (_predefined._Cons (iTasks._Framework.IWorld.BackgroundInstance bt_2_0) (select _x_3_0::_Tuple2 0)) (select _x_3_0::_Tuple2 1)) ))) 
iTasks._Framework.TaskServer.anon_744::B !_x_0 !_x_1 = case _x_0 (_Tuple2 x_1_0 _x_1_1 -> case _x_1 (_Tuple2 y_2_0 _x_2_1 -> <{StdInt.<_17}> x_1_0 y_2_0) ) 
iTasks._Framework.TaskServer.fromSelectSet !ls_0 !rs_1 !is_2 !chList_3 = let _x_1_0 = iTasks._Framework.TaskServer.ulength_14 ls_0 in <{iTasks._Framework.TaskServer.fromSelectSet`_13}> 0 (select _x_1_0::_Tuple2 0) 0 0 (select _x_1_0::_Tuple2 1) rs_1 (StdOrdList.sortBy iTasks._Framework.TaskServer.anon_744 chList_3) is_2
iTasks._Framework.TaskServer.select !mbTimeout_0 !ml_1 !world_2 = let SelectReceive_1_0 = <{TCPChannels.SelectReceive;}> TCPChannels.accRChannels_43 TCPChannels.getRState_44, getNrOfChannels_1_1 = <{TCPChannels.getNrOfChannels;}> TCPChannels.getNrOfChannels_60, SelectReceive_1_2 = <{TCPChannels.SelectReceive;}> TCPChannels.accRChannels_41 TCPChannels.getRState_42, _x_1_3 = iTasks._Framework.TaskServer.toSelectSet ml_1, _x_1_4 = TCPChannels.selectChannel_MT (<{TCPChannels.SelectReceive;}> (TCPChannels.accRChannels_49 SelectReceive_1_0 getNrOfChannels_1_1 SelectReceive_1_2) (TCPChannels.getRState_50 SelectReceive_1_0 getNrOfChannels_1_1 SelectReceive_1_2)) (<{TCPChannels.SelectSend;}> TCPChannels.accSChannels_55 TCPChannels.appDisconnected_56) (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) mbTimeout_0 (TCPChannels.TCP_Pair (TCPDef.TCP_Listeners (select _x_1_3::_Tuple3 0)) (TCPDef.TCP_RChannels (select _x_1_3::_Tuple3 1))) TCPChannels.TCP_Void world_2, _x_1_5 = select _x_1_4::_Tuple4 1, _x_1_6 = iTasks._Framework.TaskServer.fromSelectSet (select (select _x_1_5::_Tuple2 0)::_Tuple1 0) (select (select _x_1_5::_Tuple2 1)::_Tuple1 0) (select _x_1_3::_Tuple3 2) (select _x_1_4::_Tuple4 0) in <{_Tuple3!7}> (select _x_1_6::_Tuple2 0) (select _x_1_6::_Tuple2 1) (select _x_1_4::_Tuple4 3)
iTasks._Framework.TaskServer.foldl_23 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_23 op_0 (op_0 r_1 a_1_0) x_1_1) 
<{iTasks._Framework.TaskServer.get`_22}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks._Framework.TaskServer.get`_22}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks._Framework.TaskServer.get`_22}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks._Framework.TaskServer.get`_21}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks._Framework.TaskServer.get`_21}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks._Framework.TaskServer.get`_21}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks._Framework.TaskServer.foldl_20 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_20 op_0 (op_0 r_1 a_1_0) x_1_1) 
<{iTasks._Framework.TaskServer.get`_19}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks._Framework.TaskServer.get`_19}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks._Framework.TaskServer.get`_19}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks._Framework.TaskServer.checkSelect !i_0::I !chList_1 = case chList_1 (_predefined._Cons _x_1_0 ws_1_1 -> case _x_1_0 (_Tuple2 who_2_0 what_2_1 -> case (<{StdInt.==_16}> i_0 who_2_0) (True -> <{_Tuple2!3}> (Data.Maybe.Just what_2_1) ws_1_1) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing chList_1)
iTasks._Framework.TaskServer.writeShareIfNeeded sds_0 !_x_1 !iworld_2 = case _x_1 (Data.Maybe.Nothing -> iworld_2) (Data.Maybe.Just w_1_0 -> select (iTasks._Framework.SDS.write w_1_0 sds_0 iworld_2)::_Tuple2 1) 
iTasks._Framework.TaskServer.anon_15 !_vtoString_0 !_vChannelEnv_1 !_vSend_2 !_x_3 !d_4 = case _x_3 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send _vChannelEnv_1 _vSend_2 (TCPDef.toByteSeq _vtoString_0 d_4) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.anon_16 !_vtoString_0 !_vChannelEnv_1 !_vSend_2 !_x_3 !d_4 = case _x_3 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send _vChannelEnv_1 _vSend_2 (TCPDef.toByteSeq _vtoString_0 d_4) s_1_0 w_1_1) 
<{iTasks._Framework.TaskServer.get`_748}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.API.Core.Types.<_130}> _x_0 kx_1_1) (True -> <{iTasks._Framework.TaskServer.get`_748}> _x_0 l_1_3) (False -> case (<{iTasks.API.Core.Types.<_130}> kx_1_1 _x_0) (True -> <{iTasks._Framework.TaskServer.get`_748}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks._Framework.TaskServer.get`_749}> _x_0::I !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdInt.<_17}> _x_0 kx_1_1) (True -> <{iTasks._Framework.TaskServer.get`_749}> _x_0 l_1_3) (False -> case (<{StdInt.<_17}> kx_1_1 _x_0) (True -> <{iTasks._Framework.TaskServer.get`_749}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks._Framework.TaskServer.anon_750 !_vChannelEnv_0 !_vSend_1 !_x_2 !d_3 = case _x_2 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send _vChannelEnv_0 _vSend_1 (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_3) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_751 !_vChannelEnv_0 !_vSend_1 !r_2 !_x_3 = case _x_3 (_predefined._Nil -> r_2) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_751 _vChannelEnv_0 _vSend_1 (iTasks._Framework.TaskServer.anon_750 _vChannelEnv_0 _vSend_1 r_2 a_1_0) x_1_1) 
<{iTasks._Framework.TaskServer.get`_745}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.API.Core.Types.<_130}> _x_0 kx_1_1) (True -> <{iTasks._Framework.TaskServer.get`_745}> _x_0 l_1_3) (False -> case (<{iTasks.API.Core.Types.<_130}> kx_1_1 _x_0) (True -> <{iTasks._Framework.TaskServer.get`_745}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks._Framework.TaskServer.anon_746 !_vChannelEnv_0 !_vSend_1 !_x_2 !d_3 = case _x_2 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send _vChannelEnv_0 _vSend_1 (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_3) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_747 !_vChannelEnv_0 !_vSend_1 !r_2 !_x_3 = case _x_3 (_predefined._Nil -> r_2) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_747 _vChannelEnv_0 _vSend_1 (iTasks._Framework.TaskServer.anon_746 _vChannelEnv_0 _vSend_1 r_2 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_755 !_vSend_0 !_x_1 !d_2 = case _x_1 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) _vSend_0 (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_2) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_754 !_vSend_0 !r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_754 _vSend_0 (iTasks._Framework.TaskServer.anon_755 _vSend_0 r_1 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_753 !_vSend_0 !_x_1 !d_2 = case _x_1 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) _vSend_0 (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_2) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_752 !_vSend_0 !r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_752 _vSend_0 (iTasks._Framework.TaskServer.anon_753 _vSend_0 r_1 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_759 !_x_0 !d_1 = case _x_0 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_1) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_758 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_758 (iTasks._Framework.TaskServer.anon_759 r_0 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_757 !_x_0 !d_1 = case _x_0 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_1) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_756 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_756 (iTasks._Framework.TaskServer.anon_757 r_0 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.process !i_0::I chList_1 !iworld_2 = case iworld_2 (iTasks._Framework.IWorld._IWorld server_1_0 config_1_1 clocks_1_2 current_1_3 random_1_4 sdsNotifyRequests_1_5 memoryShares_1_6 cachedShares_1_7 exposedShares_1_8 jsCompilerState_1_9 ioTasks_1_10 ioStates_1_11 world_1_12 resources_1_13 onClient_1_14 shutdown_1_15 -> case ioTasks_1_10 (iTasks._Framework.IWorld._IOTasks done_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> iworld_2) (_predefined._Cons _x_3_0 todo_3_1 -> case _x_3_0 (iTasks._Framework.IWorld.ListenerInstance lopts_4_0 listener_4_1 -> <{iTasks._Framework.TaskServer._c;115;7_776}> (<{iTasks._Framework.TaskServer.get`_745}> (select lopts_4_0::iTasks._Framework.IWorld._ListenerInstanceOpts 0) ioStates_1_11) i_0 chList_1 listener_4_1 world_1_12 iworld_2 done_2_0 todo_3_1 lopts_4_0 ioStates_1_11) (iTasks._Framework.IWorld.ConnectionInstance opts_4_0 _x_4_1 -> case _x_4_1 (TCPChannelClass._DuplexChannel sChannel_5_0 rChannel_5_1 -> <{iTasks._Framework.TaskServer._c;179;7_795}> (<{iTasks._Framework.TaskServer.get`_748}> (select opts_4_0::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) ioStates_1_11) opts_4_0 i_0 chList_1 iworld_2 done_2_0 todo_3_1 ioStates_1_11 sChannel_5_0 rChannel_5_1 world_1_12) ) (iTasks._Framework.IWorld.BackgroundInstance bt_4_0 -> case bt_4_0 (iTasks._Framework.Task.BackgroundTask eval_5_0 -> let iworld_6_0 = eval_5_0 (update iworld_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_2_0 todo_3_1]), _x_6_1 = select iworld_6_0::iTasks._Framework.IWorld._IWorld 10 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_0 1) chList_1 (update iworld_6_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.BackgroundInstance bt_4_0) (select _x_6_1::iTasks._Framework.IWorld._IOTasks 0)) (select _x_6_1::iTasks._Framework.IWorld._IOTasks 1)])) ) (_ -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_0 1) chList_1 (update iworld_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons _x_3_0 done_2_0) todo_3_1]))) ) ) 
<{iTasks._Framework.TaskServer._c;179;7_795}> !_x_0 opts_1 !i_2::I chList_3 !iworld_4 done_5 todo_6 ioStates_7 sChannel_8 rChannel_9 !world_10 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks._Framework.IWorld.IOActive conStates_2_0 -> let mbConState_3_0 = <{iTasks._Framework.TaskServer.get`_749}> (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) conStates_2_0 in case (<{iTasks._Framework.TaskServer._c;185;29_777}> mbConState_3_0) (True -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) (select (iTasks._Framework.TaskServer.checkSelect i_2 chList_3)::_Tuple2 1) (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_5 todo_6,11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOException "Missing connection state") ioStates_7,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) sChannel_8 (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) rChannel_9 world_10)])) (False -> let _x_5_0 = select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 3, sds_5_1 = select _x_5_0::_Tuple2 1, _x_5_2 = iTasks._Framework.SDS.read sds_5_1 (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_5 todo_6,12:world_10]), mbr_5_3 = select _x_5_2::_Tuple2 0 in case (<{iTasks._Framework.TaskServer._c;194;29_778}> mbr_5_3) (True -> let iworld_7_0 = select _x_5_2::_Tuple2 1, _x_7_1 = select iworld_7_0::iTasks._Framework.IWorld._IWorld 10 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) (select (iTasks._Framework.TaskServer.checkSelect i_2 chList_3)::_Tuple2 1) (update iworld_7_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (select _x_7_1::iTasks._Framework.IWorld._IOTasks 0) (select _x_7_1::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOException (select (Data.Error.fromError mbr_5_3)::_Tuple2 1)) ioStates_7,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) sChannel_8 (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) rChannel_9 (select iworld_7_0::iTasks._Framework.IWorld._IWorld 12))])) (False -> let _x_7_0 = iTasks._Framework.TaskServer.checkSelect i_2 chList_3, mbSelect_7_1 = select _x_7_0::_Tuple2 0 in case (iTasks._Framework.TaskServer._f781_781 (<{iTasks._Framework.TaskServer._c;200;47_779}> mbSelect_7_1) mbSelect_7_1) (True -> let handlers_9_0 = select _x_5_0::_Tuple2 0, conState_9_1 = select (Data.Maybe.fromJust mbConState_3_0)::_Tuple2 0, iworld_9_2 = select _x_5_2::_Tuple2 1, _x_9_3 = select iworld_9_2::iTasks._Framework.IWorld._IWorld 10, done_9_4::I = select _x_9_3::iTasks._Framework.IWorld._IOTasks 0, todo_9_5 = select _x_9_3::iTasks._Framework.IWorld._IOTasks 1, world_9_6 = select iworld_9_2::iTasks._Framework.IWorld._IWorld 12, _x_9_7 = select handlers_9_0::iTasks._Framework.Task._ConnectionHandlersIWorld 2 conState_9_1 (Data.Error.fromOk mbr_5_3) (update iworld_9_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_9_4 todo_9_5,11:ioStates_7,12:world_9_6]), mbw_9_8 = select _x_9_7::_Tuple3 1, _x_9_9 = select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0, instanceNo_9_10 = select _x_9_9::_Tuple2 0, iworld_9_11 = select _x_9_7::_Tuple3 2, iworld_9_12 = iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_9_10 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "TCP connection disconnected for " instanceNo_9_10)) _predefined._Nil) iworld_9_11, iworld_9_13 = iTasks._Framework.TaskServer.writeShareIfNeeded sds_5_1 mbw_9_8 iworld_9_12, ioStates_9_14 = select iworld_9_13::iTasks._Framework.IWorld._IWorld 11 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) (select _x_7_0::_Tuple2 1) (update iworld_9_13::iTasks._Framework.IWorld._IWorld [11:<{iTasks._Framework.TaskServer._c;205;30_782}> (select _x_9_7::_Tuple3 0) opts_1 conStates_2_0 ioStates_9_14,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) sChannel_8 (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) rChannel_9 (select iworld_9_13::iTasks._Framework.IWorld._IWorld 12))])) (False -> let handlers_9_0 = select _x_5_0::_Tuple2 0, _x_9_1 = <{iTasks._Framework.TaskServer._c;214;39_783}> mbSelect_7_1 rChannel_9 world_9_11, data_9_2 = select _x_9_1::_Tuple3 0, conState_9_3 = select (Data.Maybe.fromJust mbConState_3_0)::_Tuple2 0, iworld_9_4 = select _x_5_2::_Tuple2 1, _x_9_5 = select iworld_9_4::iTasks._Framework.IWorld._IWorld 10, done_9_6 = select _x_9_5::iTasks._Framework.IWorld._IOTasks 0, todo_9_7 = select _x_9_5::iTasks._Framework.IWorld._IOTasks 1, world_9_8 = select _x_9_1::_Tuple3 2, _x_9_9 = select handlers_9_0::iTasks._Framework.Task._ConnectionHandlersIWorld 1 data_9_2 conState_9_3 (Data.Error.fromOk mbr_5_3) (update iworld_9_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_9_6 todo_9_7,11:ioStates_7,12:world_9_8]), mbConState_9_10 = select _x_9_9::_Tuple5 0, world_9_11 = select iworld_9_4::iTasks._Framework.IWorld._IWorld 12 in case (<{iTasks._Framework.TaskServer._c;228;36_784}> mbConState_9_10) (True -> let iworld_11_0 = iTasks._Framework.TaskServer.writeShareIfNeeded sds_5_1 (select _x_9_9::_Tuple5 1) (<{iTasks._Framework.TaskServer._if;225;24_786}> (select _x_9_9::_Tuple5 3) opts_1 data_9_2 iworld_11_2), _x_11_1 = select iworld_11_0::iTasks._Framework.IWorld._IWorld 10, iworld_11_2 = select _x_9_9::_Tuple5 4 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) (select _x_7_0::_Tuple2 1) (update iworld_11_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (select _x_11_1::iTasks._Framework.IWorld._IOTasks 0) (select _x_11_1::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOException (Data.Error.fromError mbConState_9_10)) (select iworld_11_0::iTasks._Framework.IWorld._IWorld 11),12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) sChannel_8 (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (select _x_9_1::_Tuple3 1) (select iworld_11_0::iTasks._Framework.IWorld._IWorld 12))])) (False -> let close_11_0::B = select _x_9_9::_Tuple5 3 in case close_11_0 (True -> let mbw_13_0 = select _x_9_9::_Tuple5 1, iworld_13_1 = <{iTasks._Framework.TaskServer._if;225;24_789}> close_11_0 instanceNo_13_8 iworld_13_10, iworld_13_2::I = iTasks._Framework.TaskServer.writeShareIfNeeded sds_5_1 mbw_13_0 iworld_13_1, _x_13_3 = select iworld_13_2::iTasks._Framework.IWorld._IWorld 10, out_13_4 = select _x_9_9::_Tuple5 2, _x_13_5 = <{iTasks._Framework.TaskServer._c;235;34_788}> out_13_4 sChannel_8 world_13_6, world_13_6 = select iworld_13_2::iTasks._Framework.IWorld._IWorld 12, _x_13_7 = select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0, instanceNo_13_8 = select _x_13_7::_Tuple2 0, iworld_13_9 = select _x_9_9::_Tuple5 4, iworld_13_10 = <{iTasks._Framework.TaskServer._if;224;24_787}> (Data.Maybe.isNothing data_9_2) iworld_13_9 instanceNo_13_8 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) (select _x_7_0::_Tuple2 1) (update iworld_13_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (select _x_13_3::iTasks._Framework.IWorld._IOTasks 0) (select _x_13_3::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOActive (<{iTasks._Framework.TaskServer._if;240;31_790}> (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 4) opts_1 mbConState_9_10 close_11_0 conStates_2_0)) (select iworld_13_2::iTasks._Framework.IWorld._IWorld 11),12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) (select _x_13_5::_Tuple2 0) (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (select _x_9_1::_Tuple3 1) (select _x_13_5::_Tuple2 1))])) (False -> let mbw_13_0 = select _x_9_9::_Tuple5 1, iworld_13_1 = <{iTasks._Framework.TaskServer._if;225;24_793}> close_11_0 instanceNo_13_8 iworld_13_10, iworld_13_2::I = iTasks._Framework.TaskServer.writeShareIfNeeded sds_5_1 mbw_13_0 iworld_13_1, out_13_3 = select _x_9_9::_Tuple5 2, _x_13_4 = <{iTasks._Framework.TaskServer._c;235;34_792}> out_13_3 sChannel_8 world_13_6, _x_13_5 = select iworld_13_2::iTasks._Framework.IWorld._IWorld 10, world_13_6 = select iworld_13_2::iTasks._Framework.IWorld._IWorld 12, _x_13_7 = select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0, instanceNo_13_8 = select _x_13_7::_Tuple2 0, iworld_13_9 = select _x_9_9::_Tuple5 4, iworld_13_10 = <{iTasks._Framework.TaskServer._if;224;24_791}> (Data.Maybe.isNothing data_9_2) iworld_13_9 instanceNo_13_8 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) (select _x_7_0::_Tuple2 1) (update iworld_13_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.ConnectionInstance opts_1 (TCPChannelClass._DuplexChannel (select _x_13_4::_Tuple2 0) (select _x_9_1::_Tuple3 1))) (select _x_13_5::iTasks._Framework.IWorld._IOTasks 0)) (select _x_13_5::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOActive (Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) (_Tuple2 (Data.Error.fromOk mbConState_9_10) close_11_0) conStates_2_0)) (select iworld_13_2::iTasks._Framework.IWorld._IWorld 11),12:select _x_13_4::_Tuple2 1])) ) ) ) ) ) (iTasks._Framework.IWorld.IODestroyed conStates_2_0 -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) chList_3 (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_5 todo_6,11:<{iTasks._Framework.TaskServer._if;257;26_794}> (<{StdInt.==_16}> (Data.Map.mapSize (Data.Map.del (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) conStates_2_0)) 0) opts_1 ioStates_7,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) sChannel_8 (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) rChannel_9 world_10)])) ) (_ -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_2 1) chList_3 (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_5 todo_6,11:ioStates_7,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) sChannel_8 (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) rChannel_9 world_10)]))
<{iTasks._Framework.TaskServer._if;257;26_794}> !_x_0::B opts_1 !ioStates_2 = case _x_0 (True -> Data.Map.del (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) ioStates_2) (_ -> ioStates_2)
<{iTasks._Framework.TaskServer._if;225;24_793}> !close_0::B instanceNo_1::I !iworld_2 = case close_0 (True -> iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_1 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "TCP connection closed for " instanceNo_1)) _predefined._Nil) iworld_2) (_ -> iworld_2)
<{iTasks._Framework.TaskServer._c;235;34_792}> !out_0 sChannel_1 world_2 = case out_0 (_predefined._Nil -> _Tuple2 sChannel_1 world_2) (_ -> iTasks._Framework.TaskServer.foldl_758 (_Tuple2 sChannel_1 world_2) out_0)
<{iTasks._Framework.TaskServer._if;224;24_791}> !_x_0::B !iworld_1 instanceNo_2::I = case _x_0 (True -> iworld_1) (_ -> iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_2 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP data for " instanceNo_2)) _predefined._Nil) iworld_1)
<{iTasks._Framework.TaskServer._if;240;31_790}> !_x_0::B !opts_1 mbConState_2 close_3::B !conStates_4 = case _x_0 (True -> Data.Map.del (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) (Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) (_Tuple2 (Data.Error.fromOk mbConState_2) close_3) conStates_4)) (_ -> Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) (_Tuple2 (Data.Error.fromOk mbConState_2) close_3) conStates_4)
<{iTasks._Framework.TaskServer._if;225;24_789}> !close_0::B instanceNo_1::I !iworld_2 = case close_0 (True -> iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_1 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "TCP connection closed for " instanceNo_1)) _predefined._Nil) iworld_2) (_ -> iworld_2)
<{iTasks._Framework.TaskServer._c;235;34_788}> !out_0 sChannel_1 world_2 = case out_0 (_predefined._Nil -> _Tuple2 sChannel_1 world_2) (_ -> iTasks._Framework.TaskServer.foldl_758 (_Tuple2 sChannel_1 world_2) out_0)
<{iTasks._Framework.TaskServer._if;224;24_787}> !_x_0::B !iworld_1 instanceNo_2::I = case _x_0 (True -> iworld_1) (_ -> iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_2 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP data for " instanceNo_2)) _predefined._Nil) iworld_1)
<{iTasks._Framework.TaskServer._if;225;24_786}> !_x_0::B opts_1 !data_2 !iworld_3 = case _x_0 (True -> let _x_2_0::I = select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0, instanceNo_2_1 = select _x_2_0::_Tuple2 0 in iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_2_1 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "TCP connection closed for " instanceNo_2_1)) _predefined._Nil) (<{iTasks._Framework.TaskServer._if;224;24_785}> (Data.Maybe.isNothing data_2) iworld_3 instanceNo_2_1)) (_ -> case (Data.Maybe.isNothing data_2) (True -> iworld_3) (False -> let instanceNo_2_0::I = select (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0)::_Tuple2 0 in iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_2_0 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP data for " instanceNo_2_0)) _predefined._Nil) iworld_3) )
<{iTasks._Framework.TaskServer._if;224;24_785}> !_x_0::B !iworld_1 instanceNo_2::I = case _x_0 (True -> iworld_1) (_ -> iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_2 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP data for " instanceNo_2)) _predefined._Nil) iworld_1)
<{iTasks._Framework.TaskServer._c;228;36_784}>::B !_x_0 = case _x_0 (Data.Error.Error _x_1_0 -> True) (_ -> False)
<{iTasks._Framework.TaskServer._c;214;39_783}> !mbSelect_0 rChannel_1 world_2 = case mbSelect_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (TCPDef.SR_Available -> let _x_3_0 = TCPChannelClass.receive (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Receive;}> TCPChannels.available_19 TCPChannels.eom_20 TCPChannels.receiveUpTo_21 TCPChannels.receive_MT_22) rChannel_1 world_2 in _Tuple3 (Data.Maybe.Just (TCPDef.toString_2 (select _x_3_0::_Tuple3 0))) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) (_ -> _Tuple3 Data.Maybe.Nothing rChannel_1 world_2)
<{iTasks._Framework.TaskServer._c;205;30_782}> !_x_0 !opts_1 conStates_2 !ioStates_3 = case _x_0 (Data.Error.Ok state_1_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOActive (Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 1) (_Tuple2 state_1_0 True) conStates_2)) ioStates_3) (Data.Error.Error e_1_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select opts_1::iTasks._Framework.IWorld._ConnectionInstanceOpts 0) (iTasks._Framework.IWorld.IOException e_1_0) ioStates_3) 
iTasks._Framework.TaskServer._f781_781::B !_x_0::B mbSelect_1 = case _x_0 (True -> True) (_ -> <{iTasks._Framework.TaskServer._c;200;74_780}> mbSelect_1)
<{iTasks._Framework.TaskServer._c;200;74_780}>::B !mbSelect_0 = case mbSelect_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (TCPDef.SR_EOM -> True) ) (_ -> False)
<{iTasks._Framework.TaskServer._c;200;47_779}>::B !mbSelect_0 = case mbSelect_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (TCPDef.SR_Disconnected -> True) ) (_ -> False)
<{iTasks._Framework.TaskServer._c;194;29_778}>::B !_x_0 = case _x_0 (Data.Error.Error _x_1_0 -> True) (_ -> False)
<{iTasks._Framework.TaskServer._c;185;29_777}>::B !_x_0 = case _x_0 (Data.Maybe.Nothing -> True) (_ -> False)
<{iTasks._Framework.TaskServer._c;115;7_776}> !_x_0 !i_1::I chList_2 listener_3 !world_4 !iworld_5 done_6 todo_7 lopts_8 ioStates_9 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks._Framework.IWorld.IOActive conStates_2_0 -> let _x_3_0 = iTasks._Framework.TaskServer.checkSelect i_1 chList_2 in case (<{iTasks._Framework.TaskServer._c;119;33_769}> (select _x_3_0::_Tuple2 0)) (True -> let _x_5_0 = TCPChannels.receive_MT_10 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (Data.Maybe.Just 0) listener_3 world_4 in case (<{TCPChannelClass.==_11}> (select _x_5_0::_Tuple4 0) TCPChannelClass.TR_Success) (True -> let _x_7_0 = select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 3, sds_7_1 = select _x_7_0::_Tuple2 1, world_7_2 = select _x_5_0::_Tuple4 3, _x_7_3 = iTasks._Framework.SDS.read sds_7_1 (update iworld_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_6 todo_7,12:world_7_2]), mbr_7_4 = select _x_7_3::_Tuple2 0 in case (<{iTasks._Framework.TaskServer._c;125;37_770}> mbr_7_4) (True -> let instanceNo_9_0 = select (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0)::_Tuple2 0, iworld_9_1 = iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_9_0 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "IO Exception for instance " instanceNo_9_0)) _predefined._Nil) (select _x_7_3::_Tuple2 1), _x_9_2::I = select iworld_9_1::iTasks._Framework.IWorld._IWorld 10 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) (select _x_3_0::_Tuple2 1) (update iworld_9_1::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (select _x_9_2::iTasks._Framework.IWorld._IOTasks 0) (select _x_9_2::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0) (iTasks._Framework.IWorld.IOException (select (Data.Error.fromError mbr_7_4)::_Tuple2 1)) ioStates_9,12:TCPChannels.closeRChannel_11 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (select _x_5_0::_Tuple4 2) (select iworld_9_1::iTasks._Framework.IWorld._IWorld 12)])) (False -> let handlers_9_0 = select _x_7_0::_Tuple2 0, mbNewConn_9_1 = select _x_5_0::_Tuple4 1, _x_9_2 = Data.Maybe.fromJust mbNewConn_9_1, ip_9_3 = select _x_9_2::_Tuple2 0, iworld_9_4 = select _x_7_3::_Tuple2 1, _x_9_5 = select handlers_9_0::iTasks._Framework.Task._ConnectionHandlersIWorld 0 (TCPDef.toString_4 ip_9_3) (Data.Error.fromOk mbr_7_4) iworld_9_4, mbConState_9_6 = select _x_9_5::_Tuple5 0 in case (<{iTasks._Framework.TaskServer._c;133;44_771}> mbConState_9_6) (True -> let instanceNo_11_0 = select (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0)::_Tuple2 0, iworld_11_1 = iTasks._Framework.TaskServer.writeShareIfNeeded sds_7_1 (select _x_9_5::_Tuple5 1) (iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_11_0 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP connection for instance " instanceNo_11_0)) _predefined._Nil) (select _x_9_5::_Tuple5 4)), _x_11_2::I = select iworld_11_1::iTasks._Framework.IWorld._IWorld 10 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) (select _x_3_0::_Tuple2 1) (update iworld_11_1::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance lopts_8 (select _x_5_0::_Tuple4 2)) (select _x_11_2::iTasks._Framework.IWorld._IOTasks 0)) (select _x_11_2::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0) (iTasks._Framework.IWorld.IOException (Data.Error.fromError mbConState_9_6)) ioStates_9,12:select iworld_11_1::iTasks._Framework.IWorld._IWorld 12])) (False -> let close_11_0::B = select _x_9_5::_Tuple5 3 in case close_11_0 (True -> let mbw_13_0 = select _x_9_5::_Tuple5 1, _x_13_1 = select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0, instanceNo_13_2 = select _x_13_1::_Tuple2 0, iworld_13_3 = select _x_9_5::_Tuple5 4, iworld_13_4 = iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_13_2 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP connection for instance " instanceNo_13_2)) _predefined._Nil) iworld_13_3, iworld_13_5 = iTasks._Framework.TaskServer.writeShareIfNeeded sds_7_1 mbw_13_0 iworld_13_4, _x_13_6 = select iworld_13_5::iTasks._Framework.IWorld._IWorld 10, out_13_7 = select _x_9_5::_Tuple5 2, _x_13_8 = <{iTasks._Framework.TaskServer._c;137;42_772}> out_13_7 sChannel_13_10 world_13_11, _x_13_9::I = select _x_9_2::_Tuple2 1, sChannel_13_10 = select _x_13_9::TCPChannelClass._DuplexChannel 0, world_13_11 = select iworld_13_5::iTasks._Framework.IWorld._IWorld 12 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) (select _x_3_0::_Tuple2 1) (update iworld_13_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance lopts_8 (select _x_5_0::_Tuple4 2)) (select _x_13_6::iTasks._Framework.IWorld._IOTasks 0)) (select _x_13_6::iTasks._Framework.IWorld._IOTasks 1),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0) (iTasks._Framework.IWorld.IOActive (<{iTasks._Framework.TaskServer._if;145;39_773}> (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 4) lopts_8 mbConState_9_6 close_11_0 conStates_2_0)) ioStates_9,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) (select _x_13_8::_Tuple2 0) (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (select _x_13_9::TCPChannelClass._DuplexChannel 1) (select _x_13_8::_Tuple2 1))])) (False -> let mbw_13_0 = select _x_9_5::_Tuple5 1, _x_13_1 = select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0, instanceNo_13_2 = select _x_13_1::_Tuple2 0, iworld_13_3 = select _x_9_5::_Tuple5 4, iworld_13_4 = iTasks._Framework.TaskEval.queueRefresh (_predefined._Cons (_Tuple2 instanceNo_13_2 (<{iTasks._Framework.Generic.Visualization.<+++}> (<{iTasks._Framework.TaskServer.gText_s;}> iTasks._Framework.Generic.Visualization.gText_Int_11) "New TCP connection for instance " instanceNo_13_2)) _predefined._Nil) iworld_13_3, iworld_13_5 = iTasks._Framework.TaskServer.writeShareIfNeeded sds_7_1 mbw_13_0 iworld_13_4, lopts_13_6 = update lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts [1:<{StdInt.+_6}> (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 1) 1], _x_13_7 = select iworld_13_5::iTasks._Framework.IWorld._IWorld 10, out_13_8 = select _x_9_5::_Tuple5 2, _x_13_9 = <{iTasks._Framework.TaskServer._c;137;42_774}> out_13_8 sChannel_13_11 world_13_12, _x_13_10::I = select _x_9_2::_Tuple2 1, sChannel_13_11 = select _x_13_10::TCPChannelClass._DuplexChannel 0, world_13_12 = select iworld_13_5::iTasks._Framework.IWorld._IWorld 12 in iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) (select _x_3_0::_Tuple2 1) (update iworld_13_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance lopts_13_6 (select _x_5_0::_Tuple4 2)) (select _x_13_7::iTasks._Framework.IWorld._IOTasks 0)) (<{StdList.++}> (select _x_13_7::iTasks._Framework.IWorld._IOTasks 1) (_predefined._Cons (iTasks._Framework.IWorld.ConnectionInstance (iTasks._Framework.IWorld._ConnectionInstanceOpts (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 0) (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 1) ip_9_3 (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 3) (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 4)) (TCPChannelClass._DuplexChannel (select _x_13_9::_Tuple2 0) (select _x_13_10::TCPChannelClass._DuplexChannel 1))) _predefined._Nil)),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select lopts_13_6::iTasks._Framework.IWorld._ListenerInstanceOpts 0) (iTasks._Framework.IWorld.IOActive (Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select lopts_8::iTasks._Framework.IWorld._ListenerInstanceOpts 1) (_Tuple2 (Data.Error.fromOk mbConState_9_6) close_11_0) conStates_2_0)) ioStates_9,12:select _x_13_9::_Tuple2 1])) ) ) ) (False -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) (select _x_3_0::_Tuple2 1) (update iworld_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance lopts_8 (select _x_5_0::_Tuple4 2)) done_6) todo_7,12:select _x_5_0::_Tuple4 3])) ) (False -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) (select _x_3_0::_Tuple2 1) (update iworld_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance lopts_8 listener_3) done_6) todo_7,12:world_4])) ) (iTasks._Framework.IWorld.IODestroyed conStates_2_0 -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) chList_2 (update iworld_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_6 todo_7,11:<{iTasks._Framework.TaskServer._if;170;26_775}> (<{StdInt.==_16}> (Data.Map.mapSize conStates_2_0) 0) lopts_8 ioStates_9,12:TCPChannels.closeRChannel_11 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) listener_3 world_4])) ) (_ -> iTasks._Framework.TaskServer.process (<{StdInt.+_6}> i_1 1) chList_2 (update iworld_5::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_6 todo_7,11:ioStates_9,12:TCPChannels.closeRChannel_11 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) listener_3 world_4]))
<{iTasks._Framework.TaskServer._if;170;26_775}> !_x_0::B lopts_1 !ioStates_2 = case _x_0 (True -> Data.Map.del (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) (select lopts_1::iTasks._Framework.IWorld._ListenerInstanceOpts 0) ioStates_2) (_ -> ioStates_2)
<{iTasks._Framework.TaskServer._c;137;42_774}> !out_0 sChannel_1 world_2 = case out_0 (_predefined._Nil -> _Tuple2 sChannel_1 world_2) (_ -> iTasks._Framework.TaskServer.foldl_756 (_Tuple2 sChannel_1 world_2) out_0)
<{iTasks._Framework.TaskServer._if;145;39_773}> !_x_0::B !lopts_1 mbConState_2 close_3::B !conStates_4 = case _x_0 (True -> Data.Map.del (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select lopts_1::iTasks._Framework.IWorld._ListenerInstanceOpts 1) (Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select lopts_1::iTasks._Framework.IWorld._ListenerInstanceOpts 1) (_Tuple2 (Data.Error.fromOk mbConState_2) close_3) conStates_4)) (_ -> Data.Map.put (<{StdOverloaded.<;}> <{StdInt.<_17}>) (select lopts_1::iTasks._Framework.IWorld._ListenerInstanceOpts 1) (_Tuple2 (Data.Error.fromOk mbConState_2) close_3) conStates_4)
<{iTasks._Framework.TaskServer._c;137;42_772}> !out_0 sChannel_1 world_2 = case out_0 (_predefined._Nil -> _Tuple2 sChannel_1 world_2) (_ -> iTasks._Framework.TaskServer.foldl_756 (_Tuple2 sChannel_1 world_2) out_0)
<{iTasks._Framework.TaskServer._c;133;44_771}>::B !_x_0 = case _x_0 (Data.Error.Error _x_1_0 -> True) (_ -> False)
<{iTasks._Framework.TaskServer._c;125;37_770}>::B !_x_0 = case _x_0 (Data.Error.Error _x_1_0 -> True) (_ -> False)
<{iTasks._Framework.TaskServer._c;119;33_769}>::B !_x_0 = case _x_0 (Data.Maybe.Just _x_1_0 -> True) (_ -> False)
iTasks._Framework.TaskServer.halt !iworld_0 = case iworld_0 (iTasks._Framework.IWorld._IWorld server_1_0 config_1_1 clocks_1_2 current_1_3 random_1_4 sdsNotifyRequests_1_5 memoryShares_1_6 cachedShares_1_7 exposedShares_1_8 jsCompilerState_1_9 ioTasks_1_10 ioStates_1_11 world_1_12 resources_1_13 onClient_1_14 shutdown_1_15 -> case ioTasks_1_10 (iTasks._Framework.IWorld._IOTasks done_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> iworld_0) (_predefined._Cons _x_3_0 todo_3_1 -> case _x_3_0 (iTasks._Framework.IWorld.ListenerInstance _x_4_0 listener_4_1 -> iTasks._Framework.TaskServer.halt (update iworld_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_2_0 todo_3_1])) (iTasks._Framework.IWorld.ConnectionInstance _x_4_0 _x_4_1 -> case _x_4_1 (TCPChannelClass._DuplexChannel sChannel_5_0 rChannel_5_1 -> iTasks._Framework.TaskServer.halt (update iworld_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_2_0 todo_3_1])) ) (iTasks._Framework.IWorld.BackgroundInstance _x_4_0 -> iTasks._Framework.TaskServer.halt (update iworld_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_2_0 todo_3_1])) ) ) ) 
iTasks._Framework.TaskServer.loop !determineTimeout_0 !iworld_1 = let _x_1_0 = determineTimeout_0 iworld_1, mbTimeout_1_1 = select _x_1_0::_Tuple2 0, iworld_1_2 = select _x_1_0::_Tuple2 1, _x_1_3 = select iworld_1_2::iTasks._Framework.IWorld._IWorld 10, todo_1_4 = select _x_1_3::iTasks._Framework.IWorld._IOTasks 1, world_1_5 = select iworld_1_2::iTasks._Framework.IWorld._IWorld 12, _x_1_6 = iTasks._Framework.TaskServer.select mbTimeout_1_1 todo_1_4 world_1_5, chList_1_7 = select _x_1_6::_Tuple3 1, todo_1_8 = select _x_1_6::_Tuple3 0, world_1_9 = select _x_1_6::_Tuple3 2, iworld_1_10 = iTasks._Framework.TaskServer.process 0 chList_1_7 (update iworld_1_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks _predefined._Nil todo_1_8,12:world_1_9]) in case (select iworld_1_10::iTasks._Framework.IWorld._IWorld 15) (True -> iTasks._Framework.TaskServer.halt (update iworld_1_10::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks _predefined._Nil (StdList.reverse (select (select iworld_1_10::iTasks._Framework.IWorld._IWorld 10)::iTasks._Framework.IWorld._IOTasks 0))])) (False -> iTasks._Framework.TaskServer.loop determineTimeout_0 (update iworld_1_10::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks _predefined._Nil (StdList.reverse (select (select iworld_1_10::iTasks._Framework.IWorld._IWorld 10)::iTasks._Framework.IWorld._IOTasks 0))])) 
iTasks._Framework.TaskServer.serve !port_0::I !ct_1 !bt_2 !determineTimeout_3 !iworld_4 = iTasks._Framework.TaskServer.loop determineTimeout_3 (iTasks._Framework.TaskServer.init port_0 ct_1 bt_2 iworld_4)
iTasks._Framework.TaskServer.addListener !task_0 !port_1::I !removeOnClose_2::B !connectionTask_3 !iworld_4 = case iworld_4 (iTasks._Framework.IWorld._IWorld server_1_0 config_1_1 clocks_1_2 current_1_3 random_1_4 sdsNotifyRequests_1_5 memoryShares_1_6 cachedShares_1_7 exposedShares_1_8 jsCompilerState_1_9 ioTasks_1_10 ioStates_1_11 world_1_12 resources_1_13 onClient_1_14 shutdown_1_15 -> case ioTasks_1_10 (iTasks._Framework.IWorld._IOTasks done_2_0 todo_2_1 -> let _x_3_0 = TCPChannels.openTCP_Listener (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) port_1 world_1_12 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (Data.Error.Error (iTasks._Framework.Task.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdString.+++_11}> "Error: port " (<{StdString.+++_11}> (StdString.toString_5 port_1) " already in use.")))) (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_2_0 todo_2_1,12:select _x_3_0::_Tuple3 2])) (False -> <{_Tuple2!3}> (Data.Error.Ok _predefined._Unit) (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_2_0 (<{StdList.++}> todo_2_1 (_predefined._Cons (iTasks._Framework.IWorld.ListenerInstance (iTasks._Framework.IWorld._ListenerInstanceOpts task_0 0 port_1 connectionTask_3 removeOnClose_2) (Data.Maybe.fromJust (select _x_3_0::_Tuple3 1))) _predefined._Nil)),11:Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) task_0 (iTasks._Framework.IWorld.IOActive Data.Map.newMap) ioStates_1_11,12:select _x_3_0::_Tuple3 2])) ) ) 
iTasks._Framework.TaskServer.foldl_24 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_24 op_0 (op_0 r_1 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_17 !_vtoString_0 !_vChannelEnv_1 !_vSend_2 !_x_3 !d_4 = case _x_3 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send _vChannelEnv_1 _vSend_2 (TCPDef.toByteSeq _vtoString_0 d_4) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.anon_760 !_vChannelEnv_0 !_vSend_1 !_x_2 !d_3 = case _x_2 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send _vChannelEnv_0 _vSend_1 (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_3) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_761 !_vChannelEnv_0 !_vSend_1 !r_2 !_x_3 = case _x_3 (_predefined._Nil -> r_2) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_761 _vChannelEnv_0 _vSend_1 (iTasks._Framework.TaskServer.anon_760 _vChannelEnv_0 _vSend_1 r_2 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_763 !_vSend_0 !_x_1 !d_2 = case _x_1 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) _vSend_0 (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_2) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_762 !_vSend_0 !r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_762 _vSend_0 (iTasks._Framework.TaskServer.anon_763 _vSend_0 r_1 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.anon_765 !_x_0 !d_1 = case _x_0 (_Tuple2 s_1_0 w_1_1 -> TCPChannelClass.send (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) (TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) d_1) s_1_0 w_1_1) 
iTasks._Framework.TaskServer.foldl_764 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> iTasks._Framework.TaskServer.foldl_764 (iTasks._Framework.TaskServer.anon_765 r_0 a_1_0) x_1_1) 
iTasks._Framework.TaskServer.addConnection !task_0 !host_1 !port_2::I !connectionTask_3 !iworld_4 = case task_0 (iTasks.API.Core.Types.TaskId instanceNo_1_0 _x_1_1 -> case iworld_4 (iTasks._Framework.IWorld._IWorld server_2_0 config_2_1 clocks_2_2 current_2_3 random_2_4 sdsNotifyRequests_2_5 memoryShares_2_6 cachedShares_2_7 exposedShares_2_8 jsCompilerState_2_9 ioTasks_2_10 ioStates_2_11 world_2_12 resources_2_13 onClient_2_14 shutdown_2_15 -> case ioTasks_2_10 (iTasks._Framework.IWorld._IOTasks done_3_0 todo_3_1 -> let _x_4_0 = TCPChannels.lookupIPAddress (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) host_1 world_2_12, mb_4_1 = select _x_4_0::_Tuple2 0 in case (<{iTasks._Framework.TaskServer._c;290;15_796}> mb_4_1) (True -> <{_Tuple2!3}> (Data.Error.Error (iTasks._Framework.Task.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdString.+++_11}> "Failed to connect to host " host_1))) (update iworld_4::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_3_0 todo_3_1,12:select _x_4_0::_Tuple2 1])) (False -> let world_6_0 = select _x_4_0::_Tuple2 1, _x_6_1 = TCPChannels.connectTCP_MT (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) Data.Maybe.Nothing (_Tuple2 (Data.Maybe.fromJust mb_4_1) port_2) world_6_0, world_6_2 = select _x_6_1::_Tuple3 2 in <{iTasks._Framework.TaskServer._c;293;7_801}> (select _x_6_1::_Tuple3 1) host_1 iworld_4 done_3_0 todo_3_1 world_6_2 ioStates_2_11 connectionTask_3 mb_4_1 task_0) ) ) ) 
<{iTasks._Framework.TaskServer._c;293;7_801}> !_x_0 host_1 !iworld_2 !done_3 !todo_4 !world_5 ioStates_6 connectionTask_7 mb_8 task_9 = case _x_0 (Data.Maybe.Nothing -> <{_Tuple2!3}> (Data.Error.Error (iTasks._Framework.Task.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdString.+++_11}> "Failed to connect to host " host_1))) (update iworld_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_3 todo_4,12:world_5])) (Data.Maybe.Just _x_1_0 -> case _x_1_0 (TCPChannelClass._DuplexChannel sChannel_2_0 rChannel_2_1 -> let sds_3_1 = select connectionTask_7::_Tuple2 1, _x_3_2 = iTasks._Framework.SDS.read sds_3_1 (update iworld_2::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks done_3 todo_4,11:ioStates_6,12:world_5]), mbr_3_3 = select _x_3_2::_Tuple2 0 in case (<{iTasks._Framework.TaskServer._c;301;30_797}> mbr_3_3) (True -> <{_Tuple2!3}> (Data.Error.liftError mbr_3_3) (select _x_3_2::_Tuple2 1)) (False -> let handlers_5_0 = select connectionTask_7::_Tuple2 0, ip_5_1 = Data.Maybe.fromJust mb_8, iworld_5_2 = select _x_3_2::_Tuple2 1, _x_5_3 = select handlers_5_0::iTasks._Framework.Task._ConnectionHandlersIWorld 0 (TCPDef.toString_4 ip_5_1) (Data.Error.fromOk mbr_3_3) iworld_5_2 in case (select _x_5_3::_Tuple5 3) (True -> let iworld_7_0 = select _x_5_3::_Tuple5 4, _x_7_1 = select iworld_7_0::iTasks._Framework.IWorld._IWorld 10, out_7_2 = select _x_5_3::_Tuple5 2, _x_7_3 = <{iTasks._Framework.TaskServer._c;306;34_798}> out_7_2 sChannel_2_0 world_7_4, world_7_4 = select iworld_7_0::iTasks._Framework.IWorld._IWorld 12 in <{_Tuple2!3}> (Data.Error.Ok _predefined._Unit) (update iworld_7_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (select _x_7_1::iTasks._Framework.IWorld._IOTasks 0) (select _x_7_1::iTasks._Framework.IWorld._IOTasks 1),11:select iworld_7_0::iTasks._Framework.IWorld._IWorld 11,12:TCPChannelClass.closeChannel (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) (<{TCPChannelClass.Send;}> TCPChannels.abortConnection_12 TCPChannels.bufferSize_13 TCPChannels.closeChannel_MT_14 TCPChannels.disconnected_15 TCPChannels.flushBuffer_MT_16 TCPChannels.nsend_MT_17 TCPChannels.send_MT_18) (select _x_7_3::_Tuple2 0) (TCPChannels.closeRChannel_23 (<{tcp.ChannelEnv;}> TCPChannelClass.channelEnvKind_8 TCPChannelClass.channel_env_get_current_tick_9 TCPChannelClass.mb_close_inet_receiver_without_id_10) rChannel_2_1 (select _x_7_3::_Tuple2 1))])) (False -> let iworld_7_0 = select _x_5_3::_Tuple5 4, _x_7_1 = select iworld_7_0::iTasks._Framework.IWorld._IWorld 10, out_7_2 = select _x_5_3::_Tuple5 2, _x_7_3 = <{iTasks._Framework.TaskServer._c;306;34_799}> out_7_2 sChannel_2_0 world_7_5, ioStates_7_4 = select iworld_7_0::iTasks._Framework.IWorld._IWorld 11, world_7_5 = select iworld_7_0::iTasks._Framework.IWorld._IWorld 12 in <{_Tuple2!3}> (Data.Error.Ok _predefined._Unit) (update iworld_7_0::iTasks._Framework.IWorld._IWorld [10:iTasks._Framework.IWorld._IOTasks (select _x_7_1::iTasks._Framework.IWorld._IOTasks 0) (<{StdList.++}> (select _x_7_1::iTasks._Framework.IWorld._IOTasks 1) (_predefined._Cons (iTasks._Framework.IWorld.ConnectionInstance (iTasks._Framework.IWorld._ConnectionInstanceOpts task_9 0 ip_5_1 connectionTask_7 False) (TCPChannelClass._DuplexChannel (select _x_7_3::_Tuple2 0) rChannel_2_1)) _predefined._Nil)),11:<{iTasks._Framework.TaskServer._c;317;30_800}> (select _x_5_3::_Tuple5 0) task_9 ioStates_7_4,12:select _x_7_3::_Tuple2 1])) ) ) ) 
<{iTasks._Framework.TaskServer._c;317;30_800}> !_x_0 !task_1 !ioStates_2 = case _x_0 (Data.Error.Ok l_1_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) task_1 (iTasks._Framework.IWorld.IOActive (Data.Map.fromList (<{StdOverloaded.==;}> <{StdInt.==_16}>) (<{StdOverloaded.<;}> <{StdInt.<_17}>) (_predefined._Cons (_Tuple2 0 (_Tuple2 l_1_0 False)) _predefined._Nil))) ioStates_2) (Data.Error.Error e_1_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.API.Core.Types.<_130}>) task_1 (iTasks._Framework.IWorld.IOException e_1_0) ioStates_2) 
<{iTasks._Framework.TaskServer._c;306;34_799}> !out_0 sChannel_1 world_2 = case out_0 (_predefined._Nil -> _Tuple2 sChannel_1 world_2) (_ -> iTasks._Framework.TaskServer.foldl_764 (_Tuple2 sChannel_1 world_2) out_0)
<{iTasks._Framework.TaskServer._c;306;34_798}> !out_0 sChannel_1 world_2 = case out_0 (_predefined._Nil -> _Tuple2 sChannel_1 world_2) (_ -> iTasks._Framework.TaskServer.foldl_764 (_Tuple2 sChannel_1 world_2) out_0)
<{iTasks._Framework.TaskServer._c;301;30_797}>::B !_x_0 = case _x_0 (Data.Error.Error _x_1_0 -> True) (_ -> False)
<{iTasks._Framework.TaskServer._c;290;15_796}>::B !_x_0 = case _x_0 (Data.Maybe.Nothing -> True) (_ -> False)
<{iTasks._Framework.TaskServer.TD;IOTaskInstanceDuringSelect}> _x_0::B = _predefined._Nil

:: iTasks._Framework.TaskServer.IOTaskInstanceDuringSelect = iTasks._Framework.TaskServer.ListenerInstanceDS !a1 | iTasks._Framework.TaskServer.ConnectionInstanceDS !a1 !a2 | iTasks._Framework.TaskServer.BackgroundInstanceDS !a1

|| Converted Records
:: <{iTasks._Framework.TaskServer.JSONEncode_s;}> = {!iTasks._Framework.TaskServer.JSONEncode_s}

:: <{iTasks._Framework.TaskServer.JSONEncode_ss;}> = {!iTasks._Framework.TaskServer.JSONEncode_ss}

:: <{iTasks._Framework.TaskServer.JSONEncode_sss;}> = {!iTasks._Framework.TaskServer.JSONEncode_sss}

:: <{iTasks._Framework.TaskServer.JSONDecode_s;}> = {!iTasks._Framework.TaskServer.JSONDecode_s}

:: <{iTasks._Framework.TaskServer.JSONDecode_ss;}> = {!iTasks._Framework.TaskServer.JSONDecode_ss}

:: <{iTasks._Framework.TaskServer.JSONDecode_sss;}> = {!iTasks._Framework.TaskServer.JSONDecode_sss}

:: <{iTasks._Framework.TaskServer.gDefault_s;}> = {iTasks._Framework.TaskServer.gDefault_s}

:: <{iTasks._Framework.TaskServer.gDefault_ss;}> = {iTasks._Framework.TaskServer.gDefault_ss}

:: <{iTasks._Framework.TaskServer.gDefault_sss;}> = {iTasks._Framework.TaskServer.gDefault_sss}

:: <{iTasks._Framework.TaskServer.gUpdate_s;}> = {!iTasks._Framework.TaskServer.gUpdate_s}

:: <{iTasks._Framework.TaskServer.gUpdate_ss;}> = {!iTasks._Framework.TaskServer.gUpdate_ss}

:: <{iTasks._Framework.TaskServer.gUpdate_sss;}> = {!iTasks._Framework.TaskServer.gUpdate_sss}

:: <{iTasks._Framework.TaskServer.gVerify_s;}> = {!iTasks._Framework.TaskServer.gVerify_s}

:: <{iTasks._Framework.TaskServer.gVerify_ss;}> = {!iTasks._Framework.TaskServer.gVerify_ss}

:: <{iTasks._Framework.TaskServer.gVerify_sss;}> = {!iTasks._Framework.TaskServer.gVerify_sss}

:: <{iTasks._Framework.TaskServer.gText_s;}> = {!iTasks._Framework.TaskServer.gText_s}

:: <{iTasks._Framework.TaskServer.gText_ss;}> = {!iTasks._Framework.TaskServer.gText_ss}

:: <{iTasks._Framework.TaskServer.gText_sss;}> = {!iTasks._Framework.TaskServer.gText_sss}

:: <{iTasks._Framework.TaskServer.gEditor_s;}> = {!iTasks._Framework.TaskServer.gEditor_s}

:: <{iTasks._Framework.TaskServer.gEditor_ss;}> = {!iTasks._Framework.TaskServer.gEditor_ss}

:: <{iTasks._Framework.TaskServer.gEditor_sss;}> = {!iTasks._Framework.TaskServer.gEditor_sss}

:: <{iTasks._Framework.TaskServer.gEditMeta_s;}> = {!iTasks._Framework.TaskServer.gEditMeta_s}

:: <{iTasks._Framework.TaskServer.gEditMeta_ss;}> = {!iTasks._Framework.TaskServer.gEditMeta_ss}

:: <{iTasks._Framework.TaskServer.gEditMeta_sss;}> = {!iTasks._Framework.TaskServer.gEditMeta_sss}

:: <{iTasks._Framework.TaskServer.gEq_s;}> = {!iTasks._Framework.TaskServer.gEq_s}

:: <{iTasks._Framework.TaskServer.gEq_ss;}> = {!iTasks._Framework.TaskServer.gEq_ss}

:: <{iTasks._Framework.TaskServer.gEq_sss;}> = {!iTasks._Framework.TaskServer.gEq_sss}

:: <{iTasks._Framework.TaskServer.JSONEncode_ssss;}> = {!iTasks._Framework.TaskServer.JSONEncode_ssss}

:: <{iTasks._Framework.TaskServer.JSONDecode_ssss;}> = {!iTasks._Framework.TaskServer.JSONDecode_ssss}

:: <{iTasks._Framework.TaskServer.gEq_ssss;}> = {!iTasks._Framework.TaskServer.gEq_ssss}

:: <{iTasks._Framework.TaskServer.gDefault_ssss;}> = {iTasks._Framework.TaskServer.gDefault_ssss}

:: <{iTasks._Framework.TaskServer.JSONEncode_sssss;}> = {!iTasks._Framework.TaskServer.JSONEncode_sssss}

:: <{iTasks._Framework.TaskServer.JSONEncode_ssssss;}> = {!iTasks._Framework.TaskServer.JSONEncode_ssssss}

:: <{iTasks._Framework.TaskServer.JSONEncode_sssssss;}> = {!iTasks._Framework.TaskServer.JSONEncode_sssssss}

:: <{iTasks._Framework.TaskServer.JSONEncode_ssssssss;}> = {!iTasks._Framework.TaskServer.JSONEncode_ssssssss}

:: <{iTasks._Framework.TaskServer.JSONEncode_sssssssss;}> = {!iTasks._Framework.TaskServer.JSONEncode_sssssssss}

:: <{iTasks._Framework.TaskServer.JSONDecode_sssss;}> = {!iTasks._Framework.TaskServer.JSONDecode_sssss}

:: <{iTasks._Framework.TaskServer.JSONDecode_ssssss;}> = {!iTasks._Framework.TaskServer.JSONDecode_ssssss}

:: <{iTasks._Framework.TaskServer.JSONDecode_sssssss;}> = {!iTasks._Framework.TaskServer.JSONDecode_sssssss}

:: <{iTasks._Framework.TaskServer.JSONDecode_ssssssss;}> = {!iTasks._Framework.TaskServer.JSONDecode_ssssssss}

:: <{iTasks._Framework.TaskServer.JSONDecode_sssssssss;}> = {!iTasks._Framework.TaskServer.JSONDecode_sssssssss}

:: <{iTasks._Framework.TaskServer.bimap_s;}> = {iTasks._Framework.TaskServer.bimap_s}

:: <{iTasks._Framework.TaskServer.bimap_ss;}> = {iTasks._Framework.TaskServer.bimap_ss}

:: <{iTasks._Framework.TaskServer.bimap_sss;}> = {iTasks._Framework.TaskServer.bimap_sss}

:: <{iTasks._Framework.TaskServer.gEq_sssss;}> = {!iTasks._Framework.TaskServer.gEq_sssss}

:: <{iTasks._Framework.TaskServer.gEq_ssssss;}> = {!iTasks._Framework.TaskServer.gEq_ssssss}

:: <{iTasks._Framework.TaskServer.gEq_sssssss;}> = {!iTasks._Framework.TaskServer.gEq_sssssss}

:: <{iTasks._Framework.TaskServer.gEq_ssssssss;}> = {!iTasks._Framework.TaskServer.gEq_ssssssss}

:: <{iTasks._Framework.TaskServer.gEq_sssssssss;}> = {!iTasks._Framework.TaskServer.gEq_sssssssss}

:: <{iTasks._Framework.TaskServer.gEditor_ssss;}> = {!iTasks._Framework.TaskServer.gEditor_ssss}

:: <{iTasks._Framework.TaskServer.gText_ssss;}> = {!iTasks._Framework.TaskServer.gText_ssss}

:: <{iTasks._Framework.TaskServer.gEditMeta_ssss;}> = {!iTasks._Framework.TaskServer.gEditMeta_ssss}

:: <{iTasks._Framework.TaskServer.gEditor_sssss;}> = {!iTasks._Framework.TaskServer.gEditor_sssss}

:: <{iTasks._Framework.TaskServer.gText_sssss;}> = {!iTasks._Framework.TaskServer.gText_sssss}

:: <{iTasks._Framework.TaskServer.gDefault_sssss;}> = {iTasks._Framework.TaskServer.gDefault_sssss}

:: <{iTasks._Framework.TaskServer.gEditMeta_sssss;}> = {!iTasks._Framework.TaskServer.gEditMeta_sssss}

:: <{iTasks._Framework.TaskServer.gEditor_ssssss;}> = {!iTasks._Framework.TaskServer.gEditor_ssssss}

:: <{iTasks._Framework.TaskServer.gText_ssssss;}> = {!iTasks._Framework.TaskServer.gText_ssssss}

:: <{iTasks._Framework.TaskServer.gDefault_ssssss;}> = {iTasks._Framework.TaskServer.gDefault_ssssss}

:: <{iTasks._Framework.TaskServer.gEditMeta_ssssss;}> = {!iTasks._Framework.TaskServer.gEditMeta_ssssss}

:: <{iTasks._Framework.TaskServer.gEditor_sssssss;}> = {!iTasks._Framework.TaskServer.gEditor_sssssss}

:: <{iTasks._Framework.TaskServer.gText_sssssss;}> = {!iTasks._Framework.TaskServer.gText_sssssss}

:: <{iTasks._Framework.TaskServer.gDefault_sssssss;}> = {iTasks._Framework.TaskServer.gDefault_sssssss}

:: <{iTasks._Framework.TaskServer.gEditMeta_sssssss;}> = {!iTasks._Framework.TaskServer.gEditMeta_sssssss}

:: <{iTasks._Framework.TaskServer.gEditor_ssssssss;}> = {!iTasks._Framework.TaskServer.gEditor_ssssssss}

:: <{iTasks._Framework.TaskServer.gText_ssssssss;}> = {!iTasks._Framework.TaskServer.gText_ssssssss}

:: <{iTasks._Framework.TaskServer.gDefault_ssssssss;}> = {iTasks._Framework.TaskServer.gDefault_ssssssss}

:: <{iTasks._Framework.TaskServer.gEditMeta_ssssssss;}> = {!iTasks._Framework.TaskServer.gEditMeta_ssssssss}

:: <{iTasks._Framework.TaskServer.gEditor_sssssssss;}> = {!iTasks._Framework.TaskServer.gEditor_sssssssss}

:: <{iTasks._Framework.TaskServer.gText_sssssssss;}> = {!iTasks._Framework.TaskServer.gText_sssssssss}

:: <{iTasks._Framework.TaskServer.gDefault_sssssssss;}> = {iTasks._Framework.TaskServer.gDefault_sssssssss}

:: <{iTasks._Framework.TaskServer.gEditMeta_sssssssss;}> = {!iTasks._Framework.TaskServer.gEditMeta_sssssssss}

:: <{iTasks._Framework.TaskServer.gVerify_ssss;}> = {!iTasks._Framework.TaskServer.gVerify_ssss}

:: <{iTasks._Framework.TaskServer.gVerify_sssss;}> = {!iTasks._Framework.TaskServer.gVerify_sssss}

:: <{iTasks._Framework.TaskServer.gVerify_ssssss;}> = {!iTasks._Framework.TaskServer.gVerify_ssssss}

:: <{iTasks._Framework.TaskServer.gVerify_sssssss;}> = {!iTasks._Framework.TaskServer.gVerify_sssssss}

:: <{iTasks._Framework.TaskServer.gVerify_ssssssss;}> = {!iTasks._Framework.TaskServer.gVerify_ssssssss}

:: <{iTasks._Framework.TaskServer.gVerify_sssssssss;}> = {!iTasks._Framework.TaskServer.gVerify_sssssssss}

:: <{iTasks._Framework.TaskServer.gUpdate_ssss;}> = {!iTasks._Framework.TaskServer.gUpdate_ssss}

:: <{iTasks._Framework.TaskServer.gUpdate_sssss;}> = {!iTasks._Framework.TaskServer.gUpdate_sssss}

:: <{iTasks._Framework.TaskServer.gUpdate_ssssss;}> = {!iTasks._Framework.TaskServer.gUpdate_ssssss}

:: <{iTasks._Framework.TaskServer.gUpdate_sssssss;}> = {!iTasks._Framework.TaskServer.gUpdate_sssssss}

:: <{iTasks._Framework.TaskServer.gUpdate_ssssssss;}> = {!iTasks._Framework.TaskServer.gUpdate_ssssssss}

:: <{iTasks._Framework.TaskServer.gUpdate_sssssssss;}> = {!iTasks._Framework.TaskServer.gUpdate_sssssssss}

:: <{iTasks._Framework.TaskServer.gLexOrd_s;}> = {!iTasks._Framework.TaskServer.gLexOrd_s}

:: <{iTasks._Framework.TaskServer.gLexOrd_ss;}> = {!iTasks._Framework.TaskServer.gLexOrd_ss}

:: <{iTasks._Framework.TaskServer.gLexOrd_sss;}> = {!iTasks._Framework.TaskServer.gLexOrd_sss}

:: <{iTasks._Framework.TaskServer.gLexOrd_ssss;}> = {!iTasks._Framework.TaskServer.gLexOrd_ssss}

:: <{iTasks._Framework.TaskServer.gLexOrd_sssss;}> = {!iTasks._Framework.TaskServer.gLexOrd_sssss}

:: <{iTasks._Framework.TaskServer.gLexOrd_ssssss;}> = {!iTasks._Framework.TaskServer.gLexOrd_ssssss}

:: <{iTasks._Framework.TaskServer.gLexOrd_sssssss;}> = {!iTasks._Framework.TaskServer.gLexOrd_sssssss}

:: <{iTasks._Framework.TaskServer.gLexOrd_ssssssss;}> = {!iTasks._Framework.TaskServer.gLexOrd_ssssssss}

:: <{iTasks._Framework.TaskServer.gLexOrd_sssssssss;}> = {!iTasks._Framework.TaskServer.gLexOrd_sssssssss}

